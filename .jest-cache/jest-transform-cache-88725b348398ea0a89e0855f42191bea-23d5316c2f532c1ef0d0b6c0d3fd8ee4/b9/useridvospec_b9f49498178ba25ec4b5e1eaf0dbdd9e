82eff0363b227421367c9307d376a99e
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const user_id_vo_1 = require("./user-id.vo");
(0, globals_1.describe)('UserId', () => {
    (0, globals_1.describe)('constructor', () => {
        (0, globals_1.it)('should create UserId with valid UUID', () => {
            const validUuid = '123e4567-e89b-12d3-a456-426614174000';
            const userId = new user_id_vo_1.UserId(validUuid);
            (0, globals_1.expect)(userId.toString()).toBe(validUuid);
        });
        (0, globals_1.it)('should throw InvalidUserIdError for empty string', () => {
            (0, globals_1.expect)(() => new user_id_vo_1.UserId('')).toThrow(user_id_vo_1.InvalidUserIdError);
            (0, globals_1.expect)(() => new user_id_vo_1.UserId('')).toThrow('User ID cannot be empty');
        });
        (0, globals_1.it)('should throw InvalidUserIdError for invalid UUID format', () => {
            (0, globals_1.expect)(() => new user_id_vo_1.UserId('invalid-uuid')).toThrow(user_id_vo_1.InvalidUserIdError);
            (0, globals_1.expect)(() => new user_id_vo_1.UserId('invalid-uuid')).toThrow('Invalid UUID format');
        });
        (0, globals_1.it)('should throw InvalidUserIdError for null or undefined', () => {
            (0, globals_1.expect)(() => new user_id_vo_1.UserId(null)).toThrow(user_id_vo_1.InvalidUserIdError);
            (0, globals_1.expect)(() => new user_id_vo_1.UserId(undefined)).toThrow(user_id_vo_1.InvalidUserIdError);
        });
    });
    (0, globals_1.describe)('generate', () => {
        (0, globals_1.it)('should generate valid UUID', () => {
            const userId = user_id_vo_1.UserId.generate();
            (0, globals_1.expect)(userId.toString()).toMatch(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i);
        });
        (0, globals_1.it)('should generate different UUIDs', () => {
            const userId1 = user_id_vo_1.UserId.generate();
            const userId2 = user_id_vo_1.UserId.generate();
            (0, globals_1.expect)(userId1.toString()).not.toBe(userId2.toString());
        });
    });
    (0, globals_1.describe)('fromString', () => {
        (0, globals_1.it)('should create UserId from valid string', () => {
            const validUuid = '123e4567-e89b-12d3-a456-426614174000';
            const userId = user_id_vo_1.UserId.fromString(validUuid);
            (0, globals_1.expect)(userId.toString()).toBe(validUuid);
        });
    });
    (0, globals_1.describe)('toString', () => {
        (0, globals_1.it)('should return string representation', () => {
            const validUuid = '123e4567-e89b-12d3-a456-426614174000';
            const userId = new user_id_vo_1.UserId(validUuid);
            (0, globals_1.expect)(userId.toString()).toBe(validUuid);
        });
    });
    (0, globals_1.describe)('equals', () => {
        (0, globals_1.it)('should return true for same UserId', () => {
            const validUuid = '123e4567-e89b-12d3-a456-426614174000';
            const userId1 = new user_id_vo_1.UserId(validUuid);
            const userId2 = new user_id_vo_1.UserId(validUuid);
            (0, globals_1.expect)(userId1.equals(userId2)).toBe(true);
        });
        (0, globals_1.it)('should return false for different UserIds', () => {
            const userId1 = user_id_vo_1.UserId.generate();
            const userId2 = user_id_vo_1.UserId.generate();
            (0, globals_1.expect)(userId1.equals(userId2)).toBe(false);
        });
        (0, globals_1.it)('should return false for null or undefined', () => {
            const userId = user_id_vo_1.UserId.generate();
            (0, globals_1.expect)(userId.equals(null)).toBe(false);
            (0, globals_1.expect)(userId.equals(undefined)).toBe(false);
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,