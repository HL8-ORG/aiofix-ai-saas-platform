{"version":3,"names":["cov_10jxmh3c39","actualCoverage","s","uuid_1","require","DomainEvent","constructor","aggregateId","eventVersion","b","f","trim","length","Error","eventId","v4","occurredOn","Date","eventType","name","getBaseEventData","toISOString","validateEventData","isNaN","getTime","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/domain-event.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { IDomainEvent } from './interfaces/domain-event.interface';\n\n/**\n * 领域事件基类\n *\n * 所有领域事件都应该继承此基类，提供统一的事件结构和行为。\n * 基类实现了IDomainEvent接口，确保所有事件都有一致的属性。\n *\n * @abstract\n * @class DomainEvent\n * @implements {IDomainEvent}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport abstract class DomainEvent implements IDomainEvent {\n  /**\n   * 事件的唯一标识符\n   * 使用UUID确保全局唯一性\n   */\n  public readonly eventId: string;\n\n  /**\n   * 聚合根的唯一标识符\n   * 标识事件所属的聚合根\n   */\n  public readonly aggregateId: string;\n\n  /**\n   * 事件发生的时间戳\n   * 记录事件发生的精确时间\n   */\n  public readonly occurredOn: Date;\n\n  /**\n   * 事件的类型名称\n   * 使用构造函数名称作为事件类型\n   */\n  public readonly eventType: string;\n\n  /**\n   * 事件的版本号\n   * 用于事件的版本控制和兼容性处理\n   */\n  public readonly eventVersion: number;\n\n  /**\n   * 构造函数\n   *\n   * @param {string} aggregateId - 聚合根的唯一标识符\n   * @param {number} [eventVersion=1] - 事件的版本号，默认为1\n   *\n   * @throws {Error} 当aggregateId为空或无效时抛出错误\n   */\n  constructor(aggregateId: string, eventVersion: number = 1) {\n    if (!aggregateId || aggregateId.trim().length === 0) {\n      throw new Error('聚合根ID不能为空');\n    }\n\n    if (eventVersion < 1) {\n      throw new Error('事件版本号必须大于等于1');\n    }\n\n    this.eventId = uuidv4();\n    this.aggregateId = aggregateId;\n    this.occurredOn = new Date();\n    this.eventType = this.constructor.name;\n    this.eventVersion = eventVersion;\n  }\n\n  /**\n   * 将事件转换为JSON格式\n   *\n   * 子类应该重写此方法，提供具体的事件数据序列化。\n   * 基类提供默认实现，包含事件的基本属性。\n   *\n   * @returns {any} 事件的JSON表示\n   */\n  abstract toJSON(): any;\n\n  /**\n   * 获取事件的基本信息\n   *\n   * @returns {object} 包含事件基本信息的对象\n   */\n  protected getBaseEventData(): object {\n    return {\n      eventId: this.eventId,\n      aggregateId: this.aggregateId,\n      occurredOn: this.occurredOn.toISOString(),\n      eventType: this.eventType,\n      eventVersion: this.eventVersion,\n    };\n  }\n\n  /**\n   * 验证事件数据的有效性\n   *\n   * 子类可以重写此方法，添加特定的事件数据验证逻辑。\n   * 基类提供基本的验证，确保事件的基本属性有效。\n   *\n   * @throws {Error} 当事件数据无效时抛出错误\n   */\n  protected validateEventData(): void {\n    if (!this.eventId || this.eventId.trim().length === 0) {\n      throw new Error('事件ID不能为空');\n    }\n\n    if (!this.aggregateId || this.aggregateId.trim().length === 0) {\n      throw new Error('聚合根ID不能为空');\n    }\n\n    if (!this.occurredOn || isNaN(this.occurredOn.getTime())) {\n      throw new Error('事件发生时间无效');\n    }\n\n    if (!this.eventType || this.eventType.trim().length === 0) {\n      throw new Error('事件类型不能为空');\n    }\n\n    if (this.eventVersion < 1) {\n      throw new Error('事件版本号必须大于等于1');\n    }\n  }\n}\n"],"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","ignoreList":[]}