83c8097d8053d4f5fd725d23d37d1ba6
"use strict";

/* istanbul ignore next */
function cov_c8dgmnb52() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/interceptors/pino-logging.interceptor.ts";
  var hash = "61dc9af6966b93eff5acc2dc0f0402449c2f99b8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/interceptors/pino-logging.interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 111
        }
      },
      "2": {
        start: {
          line: 3,
          column: 70
        },
        end: {
          line: 3,
          column: 111
        }
      },
      "3": {
        start: {
          line: 3,
          column: 112
        },
        end: {
          line: 3,
          column: 121
        }
      },
      "4": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 29
        }
      },
      "5": {
        start: {
          line: 4,
          column: 37
        },
        end: {
          line: 4,
          column: 100
        }
      },
      "6": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 91
        }
      },
      "7": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 108
        }
      },
      "8": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "9": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "11": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "12": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "13": {
        start: {
          line: 10,
          column: 33
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "14": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "15": {
        start: {
          line: 11,
          column: 40
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "16": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 182
        }
      },
      "17": {
        start: {
          line: 12,
          column: 48
        },
        end: {
          line: 12,
          column: 136
        }
      },
      "18": {
        start: {
          line: 12,
          column: 58
        },
        end: {
          line: 12,
          column: 136
        }
      },
      "19": {
        start: {
          line: 12,
          column: 137
        },
        end: {
          line: 12,
          column: 179
        }
      },
      "20": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 134
        }
      },
      "21": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "22": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "23": {
        start: {
          line: 15,
          column: 35
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "24": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "25": {
        start: {
          line: 16,
          column: 63
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "26": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "27": {
        start: {
          line: 17,
          column: 40
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "28": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "29": {
        start: {
          line: 18,
          column: 40
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "30": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "31": {
        start: {
          line: 19,
          column: 41
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "32": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "33": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "34": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "35": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "36": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "37": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "38": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 16
        }
      },
      "39": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "40": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "41": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "42": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "43": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 96
        }
      },
      "44": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "45": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "46": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "47": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "48": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 121
        }
      },
      "49": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "50": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "51": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "52": {
        start: {
          line: 43,
          column: 15
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "53": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "54": {
        start: {
          line: 45,
          column: 15
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "55": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 70
        }
      },
      "56": {
        start: {
          line: 66,
          column: 29
        },
        end: {
          line: 286,
          column: 4
        }
      },
      "57": {
        start: {
          line: 67,
          column: 27
        },
        end: {
          line: 67,
          column: 55
        }
      },
      "58": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 69,
          column: 36
        }
      },
      "59": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "60": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 33
        }
      },
      "61": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 81,
          column: 14
        }
      },
      "62": {
        start: {
          line: 91,
          column: 30
        },
        end: {
          line: 91,
          column: 40
        }
      },
      "63": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 52
        }
      },
      "64": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 63
        }
      },
      "65": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 95,
          column: 48
        }
      },
      "66": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "67": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 97,
          column: 42
        }
      },
      "68": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "69": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 53
        }
      },
      "70": {
        start: {
          line: 101,
          column: 31
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "71": {
        start: {
          line: 103,
          column: 31
        },
        end: {
          line: 103,
          column: 62
        }
      },
      "72": {
        start: {
          line: 105,
          column: 34
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "73": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 47
        }
      },
      "74": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 136,
          column: 16
        }
      },
      "75": {
        start: {
          line: 119,
          column: 33
        },
        end: {
          line: 119,
          column: 55
        }
      },
      "76": {
        start: {
          line: 120,
          column: 41
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "77": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 56
        }
      },
      "78": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 55
        }
      },
      "79": {
        start: {
          line: 129,
          column: 37
        },
        end: {
          line: 133,
          column: 17
        }
      },
      "80": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "81": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 59
        }
      },
      "82": {
        start: {
          line: 135,
          column: 52
        },
        end: {
          line: 135,
          column: 57
        }
      },
      "83": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 36
        }
      },
      "84": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 155,
          column: 42
        }
      },
      "85": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "86": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 160,
          column: 33
        }
      },
      "87": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 33
        }
      },
      "88": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 162,
          column: 33
        }
      },
      "89": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 33
        }
      },
      "90": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 28
        }
      },
      "91": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 71
        }
      },
      "92": {
        start: {
          line: 174,
          column: 43
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "93": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 47
        }
      },
      "94": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "95": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 27
        }
      },
      "96": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "97": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 66
        }
      },
      "98": {
        start: {
          line: 199,
          column: 39
        },
        end: {
          line: 199,
          column: 64
        }
      },
      "99": {
        start: {
          line: 202,
          column: 30
        },
        end: {
          line: 202,
          column: 40
        }
      },
      "100": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "101": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "102": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 50
        }
      },
      "103": {
        start: {
          line: 207,
          column: 21
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "104": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 209,
          column: 51
        }
      },
      "105": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 29
        }
      },
      "106": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 229,
          column: 15
        }
      },
      "107": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 247,
          column: 15
        }
      },
      "108": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 256,
          column: 15
        }
      },
      "109": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 274,
          column: 27
        }
      },
      "110": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 60
        }
      },
      "111": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "112": {
        start: {
          line: 279,
          column: 26
        },
        end: {
          line: 279,
          column: 104
        }
      },
      "113": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 181
        }
      },
      "114": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 69
        }
      },
      "115": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 150
        }
      },
      "116": {
        start: {
          line: 282,
          column: 23
        },
        end: {
          line: 282,
          column: 150
        }
      },
      "117": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 63
        }
      },
      "118": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 285,
          column: 47
        }
      },
      "119": {
        start: {
          line: 287,
          column: 0
        },
        end: {
          line: 287,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 50
          },
          end: {
            line: 2,
            column: 51
          }
        },
        loc: {
          start: {
            line: 2,
            column: 136
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "accept",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 19
          }
        },
        loc: {
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 3,
            column: 123
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 34
          }
        },
        loc: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 12,
            column: 181
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 29,
            column: 61
          }
        },
        loc: {
          start: {
            line: 29,
            column: 100
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 61
          }
        },
        loc: {
          start: {
            line: 36,
            column: 87
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 31
          }
        },
        loc: {
          start: {
            line: 66,
            column: 36
          },
          end: {
            line: 286,
            column: 1
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        loc: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 90
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 117,
            column: 59
          },
          end: {
            line: 117,
            column: 60
          }
        },
        loc: {
          start: {
            line: 117,
            column: 69
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 117
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 126,
            column: 44
          },
          end: {
            line: 126,
            column: 45
          }
        },
        loc: {
          start: {
            line: 126,
            column: 53
          },
          end: {
            line: 136,
            column: 13
          }
        },
        line: 126
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 135,
            column: 46
          },
          end: {
            line: 135,
            column: 47
          }
        },
        loc: {
          start: {
            line: 135,
            column: 52
          },
          end: {
            line: 135,
            column: 57
          }
        },
        line: 135
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        loc: {
          start: {
            line: 144,
            column: 27
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 144
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        loc: {
          start: {
            line: 154,
            column: 35
          },
          end: {
            line: 165,
            column: 9
          }
        },
        line: 154
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 32
          }
        },
        loc: {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 164,
            column: 13
          }
        },
        line: 157
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        loc: {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 173
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 174,
            column: 35
          }
        },
        loc: {
          start: {
            line: 174,
            column: 43
          },
          end: {
            line: 174,
            column: 69
          }
        },
        line: 174
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        loc: {
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 183
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        loc: {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 193
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 199,
            column: 32
          }
        },
        loc: {
          start: {
            line: 199,
            column: 39
          },
          end: {
            line: 199,
            column: 64
          }
        },
        line: 199
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        loc: {
          start: {
            line: 220,
            column: 29
          },
          end: {
            line: 230,
            column: 9
          }
        },
        line: 220
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        loc: {
          start: {
            line: 237,
            column: 31
          },
          end: {
            line: 257,
            column: 9
          }
        },
        line: 237
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        loc: {
          start: {
            line: 264,
            column: 29
          },
          end: {
            line: 275,
            column: 9
          }
        },
        line: 264
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 278,
            column: 5
          },
          end: {
            line: 278,
            column: 6
          }
        },
        loc: {
          start: {
            line: 278,
            column: 11
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 19
          },
          end: {
            line: 28,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 20
          },
          end: {
            line: 2,
            column: 24
          }
        }, {
          start: {
            line: 2,
            column: 28
          },
          end: {
            line: 2,
            column: 45
          }
        }, {
          start: {
            line: 2,
            column: 50
          },
          end: {
            line: 28,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 111
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 3,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 3,
            column: 41
          }
        }, {
          start: {
            line: 3,
            column: 45
          },
          end: {
            line: 3,
            column: 68
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 37
          },
          end: {
            line: 4,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 57
          },
          end: {
            line: 4,
            column: 62
          }
        }, {
          start: {
            line: 4,
            column: 65
          },
          end: {
            line: 4,
            column: 100
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 65
          },
          end: {
            line: 4,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 90
          }
        }, {
          start: {
            line: 4,
            column: 93
          },
          end: {
            line: 4,
            column: 100
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 5,
            column: 84
          }
        }, {
          start: {
            line: 5,
            column: 87
          },
          end: {
            line: 5,
            column: 91
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 30
          }
        }, {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 38
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 63
          },
          end: {
            line: 5,
            column: 67
          }
        }, {
          start: {
            line: 5,
            column: 70
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 6,
            column: 47
          },
          end: {
            line: 6,
            column: 102
          }
        }, {
          start: {
            line: 6,
            column: 105
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 10,
            column: 46
          },
          end: {
            line: 10,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 63
          },
          end: {
            line: 10,
            column: 65
          }
        }, {
          start: {
            line: 10,
            column: 68
          },
          end: {
            line: 10,
            column: 80
          }
        }],
        line: 10
      },
      "11": {
        loc: {
          start: {
            line: 12,
            column: 48
          },
          end: {
            line: 12,
            column: 136
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 48
          },
          end: {
            line: 12,
            column: 136
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "12": {
        loc: {
          start: {
            line: 12,
            column: 167
          },
          end: {
            line: 12,
            column: 176
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 167
          },
          end: {
            line: 12,
            column: 168
          }
        }, {
          start: {
            line: 12,
            column: 172
          },
          end: {
            line: 12,
            column: 176
          }
        }],
        line: 12
      },
      "13": {
        loc: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 62
          },
          end: {
            line: 13,
            column: 106
          }
        }, {
          start: {
            line: 13,
            column: 109
          },
          end: {
            line: 13,
            column: 124
          }
        }],
        line: 13
      },
      "14": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 14
      },
      "15": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "16": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "17": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 31
          }
        }, {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 61
          }
        }],
        line: 16
      },
      "18": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "19": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "20": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "21": {
        loc: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "22": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 37
          }
        }, {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 37
          }
        }],
        line: 22
      },
      "23": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "24": {
        loc: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 35,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 29
          }
        }, {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 55
          }
        }, {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 35,
            column: 1
          }
        }],
        line: 29
      },
      "25": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 63
          }
        }, {
          start: {
            line: 32,
            column: 66
          },
          end: {
            line: 32,
            column: 95
          }
        }],
        line: 32
      },
      "26": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 36
          }
        }],
        line: 34
      },
      "27": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 39,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 29
          }
        }, {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 39,
            column: 1
          }
        }],
        line: 36
      },
      "28": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "29": {
        loc: {
          start: {
            line: 37,
            column: 41
          },
          end: {
            line: 37,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 60
          },
          end: {
            line: 37,
            column: 93
          }
        }, {
          start: {
            line: 37,
            column: 96
          },
          end: {
            line: 37,
            column: 98
          }
        }],
        line: 37
      },
      "30": {
        loc: {
          start: {
            line: 38,
            column: 73
          },
          end: {
            line: 38,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 82
          },
          end: {
            line: 38,
            column: 110
          }
        }, {
          start: {
            line: 38,
            column: 113
          },
          end: {
            line: 38,
            column: 117
          }
        }],
        line: 38
      },
      "31": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 160,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 160,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "32": {
        loc: {
          start: {
            line: 159,
            column: 20
          },
          end: {
            line: 159,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 20
          },
          end: {
            line: 159,
            column: 31
          }
        }, {
          start: {
            line: 159,
            column: 35
          },
          end: {
            line: 159,
            column: 46
          }
        }],
        line: 159
      },
      "33": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 162,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 162,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "34": {
        loc: {
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 161,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 161,
            column: 31
          }
        }, {
          start: {
            line: 161,
            column: 35
          },
          end: {
            line: 161,
            column: 64
          }
        }],
        line: 161
      },
      "35": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "36": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 20
          }
        }, {
          start: {
            line: 194,
            column: 24
          },
          end: {
            line: 194,
            column: 47
          }
        }],
        line: 194
      },
      "37": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "38": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        }, {
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 210,
            column: 17
          }
        }],
        line: 204
      },
      "39": {
        loc: {
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 210,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "40": {
        loc: {
          start: {
            line: 207,
            column: 25
          },
          end: {
            line: 207,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 25
          },
          end: {
            line: 207,
            column: 50
          }
        }, {
          start: {
            line: 207,
            column: 54
          },
          end: {
            line: 207,
            column: 68
          }
        }],
        line: 207
      },
      "41": {
        loc: {
          start: {
            line: 249,
            column: 56
          },
          end: {
            line: 249,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 56
          },
          end: {
            line: 249,
            column: 69
          }
        }, {
          start: {
            line: 249,
            column: 73
          },
          end: {
            line: 249,
            column: 74
          }
        }],
        line: 249
      },
      "42": {
        loc: {
          start: {
            line: 279,
            column: 26
          },
          end: {
            line: 279,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 76
          },
          end: {
            line: 279,
            column: 95
          }
        }, {
          start: {
            line: 279,
            column: 98
          },
          end: {
            line: 279,
            column: 104
          }
        }],
        line: 279
      },
      "43": {
        loc: {
          start: {
            line: 279,
            column: 26
          },
          end: {
            line: 279,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 26
          },
          end: {
            line: 279,
            column: 54
          }
        }, {
          start: {
            line: 279,
            column: 58
          },
          end: {
            line: 279,
            column: 73
          }
        }],
        line: 279
      },
      "44": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/interceptors/pino-logging.interceptor.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/interceptors/pino-logging.interceptor.ts"],
      sourcesContent: ["import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\n\nimport { tap, catchError } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PinoLoggerService } from '../services/pino-logger.service';\nimport { LogContext } from '../interfaces/logging.interface';\n\n/**\n * @interface MethodLogData\n * @description \u65B9\u6CD5\u65E5\u5FD7\u6570\u636E\u7ED3\u6784\n */\ninterface MethodLogData {\n  methodId: string;\n  className: string;\n  methodName: string;\n  startTime: number;\n  requestId?: string;\n  tenantId?: string;\n  userId?: string;\n  parameters?: unknown[];\n  result?: unknown;\n  error?: Error;\n  duration?: number;\n}\n\n/**\n * @class PinoLoggingInterceptor\n * @description\n * Pino\u65E5\u5FD7\u62E6\u622A\u5668\uFF0C\u8D1F\u8D23\u8BB0\u5F55\u65B9\u6CD5\u8C03\u7528\u7684\u8BE6\u7EC6\u65E5\u5FD7\u3002\n *\n * \u4E3B\u8981\u529F\u80FD\u5305\u62EC\uFF1A\n * 1. \u4E3A\u6BCF\u4E2A\u65B9\u6CD5\u8C03\u7528\u751F\u6210\u552F\u4E00ID\n * 2. \u8BB0\u5F55\u65B9\u6CD5\u8C03\u7528\u7684\u5F00\u59CB\u548C\u7ED3\u675F\u65F6\u95F4\n * 3. \u8BB0\u5F55\u65B9\u6CD5\u53C2\u6570\u548C\u8FD4\u56DE\u503C\n * 4. \u8BA1\u7B97\u65B9\u6CD5\u6267\u884C\u65F6\u95F4\n * 5. \u8BB0\u5F55\u5F02\u5E38\u4FE1\u606F\n * 6. \u652F\u6301\u8BF7\u6C42\u4E0A\u4E0B\u6587\u8FFD\u8E2A\n *\n * \u8BBE\u8BA1\u539F\u5219\uFF1A\n * - \u9AD8\u6027\u80FD\uFF1A\u6700\u5C0F\u5316\u5BF9\u65B9\u6CD5\u6267\u884C\u7684\u5F71\u54CD\n * - \u7ED3\u6784\u5316\uFF1A\u63D0\u4F9B\u7ED3\u6784\u5316\u7684\u65E5\u5FD7\u6570\u636E\n * - \u53EF\u914D\u7F6E\uFF1A\u652F\u6301\u4E0D\u540C\u7EA7\u522B\u7684\u65E5\u5FD7\u8BB0\u5F55\n * - \u5B89\u5168\u6027\uFF1A\u654F\u611F\u53C2\u6570\u8FC7\u6EE4\n */\n@Injectable()\nexport class PinoLoggingInterceptor implements NestInterceptor {\n  private readonly sensitiveParameters = [\n    'password',\n    'token',\n    'secret',\n    'apikey',\n    'api_key',\n    'api-key',\n  ];\n\n  constructor(private readonly logger: PinoLoggerService) {}\n\n  /**\n   * @method intercept\n   * @description \u62E6\u622A\u5668\u4E3B\u65B9\u6CD5\n   * @param {ExecutionContext} context \u6267\u884C\u4E0A\u4E0B\u6587\n   * @param {CallHandler} next \u4E0B\u4E00\u4E2A\u5904\u7406\u5668\n   * @returns {Observable<unknown>} \u53EF\u89C2\u5BDF\u5BF9\u8C61\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable<unknown> {\n    const startTime = Date.now();\n    const methodId = this.generateMethodId();\n    const request = context.switchToHttp().getRequest();\n\n    // \u63D0\u53D6\u4E0A\u4E0B\u6587\u4FE1\u606F\n    const requestId = request?.requestId;\n    const tenantId = request?.tenantId;\n    const userId = request?.userId;\n\n    // \u83B7\u53D6\u65B9\u6CD5\u4FE1\u606F\n    const handler = context.getHandler();\n    const className = context.getClass().name;\n    const methodName = handler.name;\n\n    // \u83B7\u53D6\u65B9\u6CD5\u53C2\u6570\n    const parameters = this.extractParameters(context);\n\n    // \u521B\u5EFA\u65B9\u6CD5\u65E5\u5FD7\u6570\u636E\n    const methodLogData: MethodLogData = {\n      methodId,\n      className,\n      methodName,\n      startTime,\n      requestId,\n      tenantId,\n      userId,\n      parameters: this.sanitizeParameters(parameters),\n    };\n\n    // \u8BB0\u5F55\u65B9\u6CD5\u5F00\u59CB\u65E5\u5FD7\n    this.logMethodStart(methodLogData);\n\n    return next.handle().pipe(\n      tap(result => {\n        // \u8BB0\u5F55\u65B9\u6CD5\u6210\u529F\u5B8C\u6210\n        const duration = Date.now() - startTime;\n        const completedLogData: MethodLogData = {\n          ...methodLogData,\n          result: this.sanitizeResult(result),\n          duration,\n        };\n        this.logMethodSuccess(completedLogData);\n      }),\n      catchError(error => {\n        // \u8BB0\u5F55\u65B9\u6CD5\u5F02\u5E38\n        const duration = Date.now() - startTime;\n        const errorLogData: MethodLogData = {\n          ...methodLogData,\n          error,\n          duration,\n        };\n        this.logMethodError(errorLogData);\n        return throwError(() => error);\n      }),\n    );\n  }\n\n  /**\n   * @private\n   * @method generateMethodId\n   * @description \u751F\u6210\u65B9\u6CD5\u8C03\u7528ID\n   * @returns {string} \u65B9\u6CD5\u8C03\u7528ID\n   */\n  private generateMethodId(): string {\n    return uuidv4();\n  }\n\n  /**\n   * @private\n   * @method extractParameters\n   * @description \u63D0\u53D6\u65B9\u6CD5\u53C2\u6570\n   * @param {ExecutionContext} context \u6267\u884C\u4E0A\u4E0B\u6587\n   * @returns {unknown[]} \u65B9\u6CD5\u53C2\u6570\n   */\n  private extractParameters(context: ExecutionContext): unknown[] {\n    const args = context.getArgs();\n\n    // \u8FC7\u6EE4\u6389\u8BF7\u6C42\u548C\u54CD\u5E94\u5BF9\u8C61\uFF0C\u53EA\u4FDD\u7559\u4E1A\u52A1\u53C2\u6570\n    return args.filter((arg, index) => {\n      // \u901A\u5E38\u524D\u4E24\u4E2A\u53C2\u6570\u662F request \u548C response\n      if (index === 0 && arg?.method) return false; // HTTP request\n      if (index === 1 && arg?.statusCode !== undefined) return false; // HTTP response\n      return true;\n    });\n  }\n\n  /**\n   * @private\n   * @method sanitizeParameters\n   * @description \u6E05\u7406\u65B9\u6CD5\u53C2\u6570\uFF0C\u79FB\u9664\u654F\u611F\u4FE1\u606F\n   * @param {unknown[]} parameters \u65B9\u6CD5\u53C2\u6570\n   * @returns {unknown[]} \u6E05\u7406\u540E\u7684\u53C2\u6570\n   */\n  private sanitizeParameters(parameters: unknown[]): unknown[] {\n    return parameters.map(param => this.sanitizeObject(param));\n  }\n\n  /**\n   * @private\n   * @method sanitizeResult\n   * @description \u6E05\u7406\u65B9\u6CD5\u8FD4\u56DE\u503C\uFF0C\u79FB\u9664\u654F\u611F\u4FE1\u606F\n   * @param {unknown} result \u65B9\u6CD5\u8FD4\u56DE\u503C\n   * @returns {unknown} \u6E05\u7406\u540E\u7684\u8FD4\u56DE\u503C\n   */\n  private sanitizeResult(result: unknown): unknown {\n    return this.sanitizeObject(result);\n  }\n\n  /**\n   * @private\n   * @method sanitizeObject\n   * @description \u6E05\u7406\u5BF9\u8C61\uFF0C\u79FB\u9664\u654F\u611F\u4FE1\u606F\n   * @param {unknown} obj \u8981\u6E05\u7406\u7684\u5BF9\u8C61\n   * @returns {unknown} \u6E05\u7406\u540E\u7684\u5BF9\u8C61\n   */\n  private sanitizeObject(obj: unknown): unknown {\n    if (!obj || typeof obj !== 'object') {\n      return obj;\n    }\n\n    // \u5982\u679C\u662F\u6570\u7EC4\uFF0C\u9012\u5F52\u5904\u7406\u6BCF\u4E2A\u5143\u7D20\n    if (Array.isArray(obj)) {\n      return obj.map(item => this.sanitizeObject(item));\n    }\n\n    // \u5982\u679C\u662F\u5BF9\u8C61\uFF0C\u9012\u5F52\u5904\u7406\u6BCF\u4E2A\u5C5E\u6027\n    const sanitized = { ...(obj as Record<string, unknown>) };\n\n    for (const [key, value] of Object.entries(sanitized)) {\n      if (this.sensitiveParameters.includes(key.toLowerCase())) {\n        (sanitized as Record<string, unknown>)[key] = '[REDACTED]';\n      } else if (typeof value === 'object' && value !== null) {\n        (sanitized as Record<string, unknown>)[key] =\n          this.sanitizeObject(value);\n      }\n    }\n\n    return sanitized;\n  }\n\n  /**\n   * @private\n   * @method logMethodStart\n   * @description \u8BB0\u5F55\u65B9\u6CD5\u5F00\u59CB\u65E5\u5FD7\n   * @param {MethodLogData} data \u65B9\u6CD5\u65E5\u5FD7\u6570\u636E\n   */\n  private logMethodStart(data: MethodLogData): void {\n    this.logger.debug(\n      `Method Start: ${data.className}.${data.methodName}`,\n      LogContext.BUSINESS,\n      {\n        methodId: data.methodId,\n        className: data.className,\n        methodName: data.methodName,\n        requestId: data.requestId,\n        tenantId: data.tenantId,\n        userId: data.userId,\n        parameters: data.parameters,\n      },\n    );\n  }\n\n  /**\n   * @private\n   * @method logMethodSuccess\n   * @description \u8BB0\u5F55\u65B9\u6CD5\u6210\u529F\u5B8C\u6210\u65E5\u5FD7\n   * @param {MethodLogData} data \u65B9\u6CD5\u65E5\u5FD7\u6570\u636E\n   */\n  private logMethodSuccess(data: MethodLogData): void {\n    this.logger.info(\n      `Method Success: ${data.className}.${data.methodName} - ${data.duration}ms`,\n      LogContext.BUSINESS,\n      {\n        methodId: data.methodId,\n        className: data.className,\n        methodName: data.methodName,\n        requestId: data.requestId,\n        tenantId: data.tenantId,\n        userId: data.userId,\n        result: data.result,\n        duration: data.duration,\n      },\n    );\n\n    // \u8BB0\u5F55\u6027\u80FD\u65E5\u5FD7\n    this.logger.performance(\n      'method_execution',\n      data.duration ?? 0,\n      LogContext.PERFORMANCE,\n      {\n        methodId: data.methodId,\n        className: data.className,\n        methodName: data.methodName,\n        requestId: data.requestId,\n        tenantId: data.tenantId,\n        userId: data.userId,\n      },\n    );\n  }\n\n  /**\n   * @private\n   * @method logMethodError\n   * @description \u8BB0\u5F55\u65B9\u6CD5\u5F02\u5E38\u65E5\u5FD7\n   * @param {MethodLogData} data \u65B9\u6CD5\u65E5\u5FD7\u6570\u636E\n   */\n  private logMethodError(data: MethodLogData): void {\n    this.logger.error(\n      `Method Error: ${data.className}.${data.methodName} - ${data.duration}ms`,\n      LogContext.BUSINESS,\n      {\n        methodId: data.methodId,\n        className: data.className,\n        methodName: data.methodName,\n        requestId: data.requestId,\n        tenantId: data.tenantId,\n        userId: data.userId,\n        parameters: data.parameters,\n        duration: data.duration,\n      },\n      data.error,\n    );\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "61dc9af6966b93eff5acc2dc0f0402449c2f99b8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c8dgmnb52 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c8dgmnb52();
var __esDecorate =
/* istanbul ignore next */
(cov_c8dgmnb52().s[0]++,
/* istanbul ignore next */
(cov_c8dgmnb52().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_c8dgmnb52().b[0][1]++, this.__esDecorate) ||
/* istanbul ignore next */
(cov_c8dgmnb52().b[0][2]++, function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  /* istanbul ignore next */
  cov_c8dgmnb52().f[0]++;
  function accept(f) {
    /* istanbul ignore next */
    cov_c8dgmnb52().f[1]++;
    cov_c8dgmnb52().s[1]++;
    if (
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[2][0]++, f !== void 0) &&
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[2][1]++, typeof f !== "function")) {
      /* istanbul ignore next */
      cov_c8dgmnb52().b[1][0]++;
      cov_c8dgmnb52().s[2]++;
      throw new TypeError("Function expected");
    } else
    /* istanbul ignore next */
    {
      cov_c8dgmnb52().b[1][1]++;
    }
    cov_c8dgmnb52().s[3]++;
    return f;
  }
  var kind =
    /* istanbul ignore next */
    (cov_c8dgmnb52().s[4]++, contextIn.kind),
    key =
    /* istanbul ignore next */
    (cov_c8dgmnb52().s[5]++, kind === "getter" ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[3][0]++, "get") :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[3][1]++, kind === "setter" ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[4][0]++, "set") :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[4][1]++, "value")));
  var target =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[6]++,
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[6][0]++, !descriptorIn) &&
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[6][1]++, ctor) ?
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[5][0]++, contextIn["static"] ?
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[7][0]++, ctor) :
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[7][1]++, ctor.prototype)) :
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[5][1]++, null));
  var descriptor =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[7]++,
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[8][0]++, descriptorIn) ||
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[8][1]++, target ?
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[9][0]++, Object.getOwnPropertyDescriptor(target, contextIn.name)) :
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[9][1]++, {})));
  var _,
    done =
    /* istanbul ignore next */
    (cov_c8dgmnb52().s[8]++, false);
  /* istanbul ignore next */
  cov_c8dgmnb52().s[9]++;
  for (var i =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[10]++, decorators.length - 1); i >= 0; i--) {
    var context =
    /* istanbul ignore next */
    (cov_c8dgmnb52().s[11]++, {});
    /* istanbul ignore next */
    cov_c8dgmnb52().s[12]++;
    for (var p in contextIn) {
      /* istanbul ignore next */
      cov_c8dgmnb52().s[13]++;
      context[p] = p === "access" ?
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[10][0]++, {}) :
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[10][1]++, contextIn[p]);
    }
    /* istanbul ignore next */
    cov_c8dgmnb52().s[14]++;
    for (var p in contextIn.access) {
      /* istanbul ignore next */
      cov_c8dgmnb52().s[15]++;
      context.access[p] = contextIn.access[p];
    }
    /* istanbul ignore next */
    cov_c8dgmnb52().s[16]++;
    context.addInitializer = function (f) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[2]++;
      cov_c8dgmnb52().s[17]++;
      if (done) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[11][0]++;
        cov_c8dgmnb52().s[18]++;
        throw new TypeError("Cannot add initializers after decoration has completed");
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[11][1]++;
      }
      cov_c8dgmnb52().s[19]++;
      extraInitializers.push(accept(
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[12][0]++, f) ||
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[12][1]++, null)));
    };
    var result =
    /* istanbul ignore next */
    (cov_c8dgmnb52().s[20]++, (0, decorators[i])(kind === "accessor" ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[13][0]++, {
      get: descriptor.get,
      set: descriptor.set
    }) :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[13][1]++, descriptor[key]), context));
    /* istanbul ignore next */
    cov_c8dgmnb52().s[21]++;
    if (kind === "accessor") {
      /* istanbul ignore next */
      cov_c8dgmnb52().b[14][0]++;
      cov_c8dgmnb52().s[22]++;
      if (result === void 0) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[15][0]++;
        cov_c8dgmnb52().s[23]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[15][1]++;
      }
      cov_c8dgmnb52().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[17][0]++, result === null) ||
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[17][1]++, typeof result !== "object")) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[16][0]++;
        cov_c8dgmnb52().s[25]++;
        throw new TypeError("Object expected");
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[16][1]++;
      }
      cov_c8dgmnb52().s[26]++;
      if (_ = accept(result.get)) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[18][0]++;
        cov_c8dgmnb52().s[27]++;
        descriptor.get = _;
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[18][1]++;
      }
      cov_c8dgmnb52().s[28]++;
      if (_ = accept(result.set)) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[19][0]++;
        cov_c8dgmnb52().s[29]++;
        descriptor.set = _;
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[19][1]++;
      }
      cov_c8dgmnb52().s[30]++;
      if (_ = accept(result.init)) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[20][0]++;
        cov_c8dgmnb52().s[31]++;
        initializers.unshift(_);
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[20][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_c8dgmnb52().b[14][1]++;
      cov_c8dgmnb52().s[32]++;
      if (_ = accept(result)) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[21][0]++;
        cov_c8dgmnb52().s[33]++;
        if (kind === "field") {
          /* istanbul ignore next */
          cov_c8dgmnb52().b[22][0]++;
          cov_c8dgmnb52().s[34]++;
          initializers.unshift(_);
        } else {
          /* istanbul ignore next */
          cov_c8dgmnb52().b[22][1]++;
          cov_c8dgmnb52().s[35]++;
          descriptor[key] = _;
        }
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[21][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_c8dgmnb52().s[36]++;
  if (target) {
    /* istanbul ignore next */
    cov_c8dgmnb52().b[23][0]++;
    cov_c8dgmnb52().s[37]++;
    Object.defineProperty(target, contextIn.name, descriptor);
  } else
  /* istanbul ignore next */
  {
    cov_c8dgmnb52().b[23][1]++;
  }
  cov_c8dgmnb52().s[38]++;
  done = true;
}));
var __runInitializers =
/* istanbul ignore next */
(cov_c8dgmnb52().s[39]++,
/* istanbul ignore next */
(cov_c8dgmnb52().b[24][0]++, this) &&
/* istanbul ignore next */
(cov_c8dgmnb52().b[24][1]++, this.__runInitializers) ||
/* istanbul ignore next */
(cov_c8dgmnb52().b[24][2]++, function (thisArg, initializers, value) {
  /* istanbul ignore next */
  cov_c8dgmnb52().f[3]++;
  var useValue =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[40]++, arguments.length > 2);
  /* istanbul ignore next */
  cov_c8dgmnb52().s[41]++;
  for (var i =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[42]++, 0); i < initializers.length; i++) {
    /* istanbul ignore next */
    cov_c8dgmnb52().s[43]++;
    value = useValue ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[25][0]++, initializers[i].call(thisArg, value)) :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[25][1]++, initializers[i].call(thisArg));
  }
  /* istanbul ignore next */
  cov_c8dgmnb52().s[44]++;
  return useValue ?
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[26][0]++, value) :
  /* istanbul ignore next */
  (cov_c8dgmnb52().b[26][1]++, void 0);
}));
var __setFunctionName =
/* istanbul ignore next */
(cov_c8dgmnb52().s[45]++,
/* istanbul ignore next */
(cov_c8dgmnb52().b[27][0]++, this) &&
/* istanbul ignore next */
(cov_c8dgmnb52().b[27][1]++, this.__setFunctionName) ||
/* istanbul ignore next */
(cov_c8dgmnb52().b[27][2]++, function (f, name, prefix) {
  /* istanbul ignore next */
  cov_c8dgmnb52().f[4]++;
  cov_c8dgmnb52().s[46]++;
  if (typeof name === "symbol") {
    /* istanbul ignore next */
    cov_c8dgmnb52().b[28][0]++;
    cov_c8dgmnb52().s[47]++;
    name = name.description ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[29][0]++, "[".concat(name.description, "]")) :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[29][1]++, "");
  } else
  /* istanbul ignore next */
  {
    cov_c8dgmnb52().b[28][1]++;
  }
  cov_c8dgmnb52().s[48]++;
  return Object.defineProperty(f, "name", {
    configurable: true,
    value: prefix ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[30][0]++, "".concat(prefix, " ", name)) :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[30][1]++, name)
  });
}));
/* istanbul ignore next */
cov_c8dgmnb52().s[49]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_c8dgmnb52().s[50]++;
exports.PinoLoggingInterceptor = void 0;
const common_1 =
/* istanbul ignore next */
(cov_c8dgmnb52().s[51]++, require("@nestjs/common"));
const rxjs_1 =
/* istanbul ignore next */
(cov_c8dgmnb52().s[52]++, require("rxjs"));
const operators_1 =
/* istanbul ignore next */
(cov_c8dgmnb52().s[53]++, require("rxjs/operators"));
const uuid_1 =
/* istanbul ignore next */
(cov_c8dgmnb52().s[54]++, require("uuid"));
const logging_interface_1 =
/* istanbul ignore next */
(cov_c8dgmnb52().s[55]++, require("../interfaces/logging.interface"));
/**
 * @class PinoLoggingInterceptor
 * @description
 * Pino日志拦截器，负责记录方法调用的详细日志。
 *
 * 主要功能包括：
 * 1. 为每个方法调用生成唯一ID
 * 2. 记录方法调用的开始和结束时间
 * 3. 记录方法参数和返回值
 * 4. 计算方法执行时间
 * 5. 记录异常信息
 * 6. 支持请求上下文追踪
 *
 * 设计原则：
 * - 高性能：最小化对方法执行的影响
 * - 结构化：提供结构化的日志数据
 * - 可配置：支持不同级别的日志记录
 * - 安全性：敏感参数过滤
 */
let PinoLoggingInterceptor =
/* istanbul ignore next */
(cov_c8dgmnb52().s[56]++, (() => {
  /* istanbul ignore next */
  cov_c8dgmnb52().f[5]++;
  let _classDecorators =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[57]++, [(0, common_1.Injectable)()]);
  let _classDescriptor;
  let _classExtraInitializers =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[58]++, []);
  let _classThis;
  var PinoLoggingInterceptor =
  /* istanbul ignore next */
  (cov_c8dgmnb52().s[59]++, _classThis = class {
    constructor(logger) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[6]++;
      cov_c8dgmnb52().s[60]++;
      this.logger = logger;
      /* istanbul ignore next */
      cov_c8dgmnb52().s[61]++;
      this.sensitiveParameters = ['password', 'token', 'secret', 'apikey', 'api_key', 'api-key'];
    }
    /**
     * @method intercept
     * @description 拦截器主方法
     * @param {ExecutionContext} context 执行上下文
     * @param {CallHandler} next 下一个处理器
     * @returns {Observable<unknown>} 可观察对象
     */
    intercept(context, next) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[7]++;
      const startTime =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[62]++, Date.now());
      const methodId =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[63]++, this.generateMethodId());
      const request =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[64]++, context.switchToHttp().getRequest());
      // 提取上下文信息
      const requestId =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[65]++, request?.requestId);
      const tenantId =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[66]++, request?.tenantId);
      const userId =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[67]++, request?.userId);
      // 获取方法信息
      const handler =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[68]++, context.getHandler());
      const className =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[69]++, context.getClass().name);
      const methodName =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[70]++, handler.name);
      // 获取方法参数
      const parameters =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[71]++, this.extractParameters(context));
      // 创建方法日志数据
      const methodLogData =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[72]++, {
        methodId,
        className,
        methodName,
        startTime,
        requestId,
        tenantId,
        userId,
        parameters: this.sanitizeParameters(parameters)
      });
      // 记录方法开始日志
      /* istanbul ignore next */
      cov_c8dgmnb52().s[73]++;
      this.logMethodStart(methodLogData);
      /* istanbul ignore next */
      cov_c8dgmnb52().s[74]++;
      return next.handle().pipe((0, operators_1.tap)(result => {
        /* istanbul ignore next */
        cov_c8dgmnb52().f[8]++;
        // 记录方法成功完成
        const duration =
        /* istanbul ignore next */
        (cov_c8dgmnb52().s[75]++, Date.now() - startTime);
        const completedLogData =
        /* istanbul ignore next */
        (cov_c8dgmnb52().s[76]++, {
          ...methodLogData,
          result: this.sanitizeResult(result),
          duration
        });
        /* istanbul ignore next */
        cov_c8dgmnb52().s[77]++;
        this.logMethodSuccess(completedLogData);
      }), (0, operators_1.catchError)(error => {
        /* istanbul ignore next */
        cov_c8dgmnb52().f[9]++;
        // 记录方法异常
        const duration =
        /* istanbul ignore next */
        (cov_c8dgmnb52().s[78]++, Date.now() - startTime);
        const errorLogData =
        /* istanbul ignore next */
        (cov_c8dgmnb52().s[79]++, {
          ...methodLogData,
          error,
          duration
        });
        /* istanbul ignore next */
        cov_c8dgmnb52().s[80]++;
        this.logMethodError(errorLogData);
        /* istanbul ignore next */
        cov_c8dgmnb52().s[81]++;
        return (0, rxjs_1.throwError)(() => {
          /* istanbul ignore next */
          cov_c8dgmnb52().f[10]++;
          cov_c8dgmnb52().s[82]++;
          return error;
        });
      }));
    }
    /**
     * @private
     * @method generateMethodId
     * @description 生成方法调用ID
     * @returns {string} 方法调用ID
     */
    generateMethodId() {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[11]++;
      cov_c8dgmnb52().s[83]++;
      return (0, uuid_1.v4)();
    }
    /**
     * @private
     * @method extractParameters
     * @description 提取方法参数
     * @param {ExecutionContext} context 执行上下文
     * @returns {unknown[]} 方法参数
     */
    extractParameters(context) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[12]++;
      const args =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[84]++, context.getArgs());
      // 过滤掉请求和响应对象，只保留业务参数
      /* istanbul ignore next */
      cov_c8dgmnb52().s[85]++;
      return args.filter((arg, index) => {
        /* istanbul ignore next */
        cov_c8dgmnb52().f[13]++;
        cov_c8dgmnb52().s[86]++;
        // 通常前两个参数是 request 和 response
        if (
        /* istanbul ignore next */
        (cov_c8dgmnb52().b[32][0]++, index === 0) &&
        /* istanbul ignore next */
        (cov_c8dgmnb52().b[32][1]++, arg?.method)) {
          /* istanbul ignore next */
          cov_c8dgmnb52().b[31][0]++;
          cov_c8dgmnb52().s[87]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_c8dgmnb52().b[31][1]++;
        } // HTTP request
        cov_c8dgmnb52().s[88]++;
        if (
        /* istanbul ignore next */
        (cov_c8dgmnb52().b[34][0]++, index === 1) &&
        /* istanbul ignore next */
        (cov_c8dgmnb52().b[34][1]++, arg?.statusCode !== undefined)) {
          /* istanbul ignore next */
          cov_c8dgmnb52().b[33][0]++;
          cov_c8dgmnb52().s[89]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_c8dgmnb52().b[33][1]++;
        } // HTTP response
        cov_c8dgmnb52().s[90]++;
        return true;
      });
    }
    /**
     * @private
     * @method sanitizeParameters
     * @description 清理方法参数，移除敏感信息
     * @param {unknown[]} parameters 方法参数
     * @returns {unknown[]} 清理后的参数
     */
    sanitizeParameters(parameters) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[14]++;
      cov_c8dgmnb52().s[91]++;
      return parameters.map(param => {
        /* istanbul ignore next */
        cov_c8dgmnb52().f[15]++;
        cov_c8dgmnb52().s[92]++;
        return this.sanitizeObject(param);
      });
    }
    /**
     * @private
     * @method sanitizeResult
     * @description 清理方法返回值，移除敏感信息
     * @param {unknown} result 方法返回值
     * @returns {unknown} 清理后的返回值
     */
    sanitizeResult(result) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[16]++;
      cov_c8dgmnb52().s[93]++;
      return this.sanitizeObject(result);
    }
    /**
     * @private
     * @method sanitizeObject
     * @description 清理对象，移除敏感信息
     * @param {unknown} obj 要清理的对象
     * @returns {unknown} 清理后的对象
     */
    sanitizeObject(obj) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[17]++;
      cov_c8dgmnb52().s[94]++;
      if (
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[36][0]++, !obj) ||
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[36][1]++, typeof obj !== 'object')) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[35][0]++;
        cov_c8dgmnb52().s[95]++;
        return obj;
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[35][1]++;
      }
      // 如果是数组，递归处理每个元素
      cov_c8dgmnb52().s[96]++;
      if (Array.isArray(obj)) {
        /* istanbul ignore next */
        cov_c8dgmnb52().b[37][0]++;
        cov_c8dgmnb52().s[97]++;
        return obj.map(item => {
          /* istanbul ignore next */
          cov_c8dgmnb52().f[18]++;
          cov_c8dgmnb52().s[98]++;
          return this.sanitizeObject(item);
        });
      } else
      /* istanbul ignore next */
      {
        cov_c8dgmnb52().b[37][1]++;
      }
      // 如果是对象，递归处理每个属性
      const sanitized =
      /* istanbul ignore next */
      (cov_c8dgmnb52().s[99]++, {
        ...obj
      });
      /* istanbul ignore next */
      cov_c8dgmnb52().s[100]++;
      for (const [key, value] of Object.entries(sanitized)) {
        /* istanbul ignore next */
        cov_c8dgmnb52().s[101]++;
        if (this.sensitiveParameters.includes(key.toLowerCase())) {
          /* istanbul ignore next */
          cov_c8dgmnb52().b[38][0]++;
          cov_c8dgmnb52().s[102]++;
          sanitized[key] = '[REDACTED]';
        } else {
          /* istanbul ignore next */
          cov_c8dgmnb52().b[38][1]++;
          cov_c8dgmnb52().s[103]++;
          if (
          /* istanbul ignore next */
          (cov_c8dgmnb52().b[40][0]++, typeof value === 'object') &&
          /* istanbul ignore next */
          (cov_c8dgmnb52().b[40][1]++, value !== null)) {
            /* istanbul ignore next */
            cov_c8dgmnb52().b[39][0]++;
            cov_c8dgmnb52().s[104]++;
            sanitized[key] = this.sanitizeObject(value);
          } else
          /* istanbul ignore next */
          {
            cov_c8dgmnb52().b[39][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_c8dgmnb52().s[105]++;
      return sanitized;
    }
    /**
     * @private
     * @method logMethodStart
     * @description 记录方法开始日志
     * @param {MethodLogData} data 方法日志数据
     */
    logMethodStart(data) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[19]++;
      cov_c8dgmnb52().s[106]++;
      this.logger.debug(`Method Start: ${data.className}.${data.methodName}`, logging_interface_1.LogContext.BUSINESS, {
        methodId: data.methodId,
        className: data.className,
        methodName: data.methodName,
        requestId: data.requestId,
        tenantId: data.tenantId,
        userId: data.userId,
        parameters: data.parameters
      });
    }
    /**
     * @private
     * @method logMethodSuccess
     * @description 记录方法成功完成日志
     * @param {MethodLogData} data 方法日志数据
     */
    logMethodSuccess(data) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[20]++;
      cov_c8dgmnb52().s[107]++;
      this.logger.info(`Method Success: ${data.className}.${data.methodName} - ${data.duration}ms`, logging_interface_1.LogContext.BUSINESS, {
        methodId: data.methodId,
        className: data.className,
        methodName: data.methodName,
        requestId: data.requestId,
        tenantId: data.tenantId,
        userId: data.userId,
        result: data.result,
        duration: data.duration
      });
      // 记录性能日志
      /* istanbul ignore next */
      cov_c8dgmnb52().s[108]++;
      this.logger.performance('method_execution',
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[41][0]++, data.duration) ??
      /* istanbul ignore next */
      (cov_c8dgmnb52().b[41][1]++, 0), logging_interface_1.LogContext.PERFORMANCE, {
        methodId: data.methodId,
        className: data.className,
        methodName: data.methodName,
        requestId: data.requestId,
        tenantId: data.tenantId,
        userId: data.userId
      });
    }
    /**
     * @private
     * @method logMethodError
     * @description 记录方法异常日志
     * @param {MethodLogData} data 方法日志数据
     */
    logMethodError(data) {
      /* istanbul ignore next */
      cov_c8dgmnb52().f[21]++;
      cov_c8dgmnb52().s[109]++;
      this.logger.error(`Method Error: ${data.className}.${data.methodName} - ${data.duration}ms`, logging_interface_1.LogContext.BUSINESS, {
        methodId: data.methodId,
        className: data.className,
        methodName: data.methodName,
        requestId: data.requestId,
        tenantId: data.tenantId,
        userId: data.userId,
        parameters: data.parameters,
        duration: data.duration
      }, data.error);
    }
  });
  /* istanbul ignore next */
  cov_c8dgmnb52().s[110]++;
  __setFunctionName(_classThis, "PinoLoggingInterceptor");
  /* istanbul ignore next */
  cov_c8dgmnb52().s[111]++;
  (() => {
    /* istanbul ignore next */
    cov_c8dgmnb52().f[22]++;
    const _metadata =
    /* istanbul ignore next */
    (cov_c8dgmnb52().s[112]++,
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[43][0]++, typeof Symbol === "function") &&
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[43][1]++, Symbol.metadata) ?
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[42][0]++, Object.create(null)) :
    /* istanbul ignore next */
    (cov_c8dgmnb52().b[42][1]++, void 0));
    /* istanbul ignore next */
    cov_c8dgmnb52().s[113]++;
    __esDecorate(null, _classDescriptor = {
      value: _classThis
    }, _classDecorators, {
      kind: "class",
      name: _classThis.name,
      metadata: _metadata
    }, null, _classExtraInitializers);
    /* istanbul ignore next */
    cov_c8dgmnb52().s[114]++;
    PinoLoggingInterceptor = _classThis = _classDescriptor.value;
    /* istanbul ignore next */
    cov_c8dgmnb52().s[115]++;
    if (_metadata) {
      /* istanbul ignore next */
      cov_c8dgmnb52().b[44][0]++;
      cov_c8dgmnb52().s[116]++;
      Object.defineProperty(_classThis, Symbol.metadata, {
        enumerable: true,
        configurable: true,
        writable: true,
        value: _metadata
      });
    } else
    /* istanbul ignore next */
    {
      cov_c8dgmnb52().b[44][1]++;
    }
    cov_c8dgmnb52().s[117]++;
    __runInitializers(_classThis, _classExtraInitializers);
  })();
  /* istanbul ignore next */
  cov_c8dgmnb52().s[118]++;
  return PinoLoggingInterceptor = _classThis;
})());
/* istanbul ignore next */
cov_c8dgmnb52().s[119]++;
exports.PinoLoggingInterceptor = PinoLoggingInterceptor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21tb25fMSIsImNvdl9jOGRnbW5iNTIiLCJzIiwicmVxdWlyZSIsInJ4anNfMSIsIm9wZXJhdG9yc18xIiwidXVpZF8xIiwibG9nZ2luZ19pbnRlcmZhY2VfMSIsIlBpbm9Mb2dnaW5nSW50ZXJjZXB0b3IiLCJmIiwiSW5qZWN0YWJsZSIsImNvbnN0cnVjdG9yIiwibG9nZ2VyIiwic2Vuc2l0aXZlUGFyYW1ldGVycyIsImludGVyY2VwdCIsImNvbnRleHQiLCJuZXh0Iiwic3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIm1ldGhvZElkIiwiZ2VuZXJhdGVNZXRob2RJZCIsInJlcXVlc3QiLCJzd2l0Y2hUb0h0dHAiLCJnZXRSZXF1ZXN0IiwicmVxdWVzdElkIiwidGVuYW50SWQiLCJ1c2VySWQiLCJoYW5kbGVyIiwiZ2V0SGFuZGxlciIsImNsYXNzTmFtZSIsImdldENsYXNzIiwibmFtZSIsIm1ldGhvZE5hbWUiLCJwYXJhbWV0ZXJzIiwiZXh0cmFjdFBhcmFtZXRlcnMiLCJtZXRob2RMb2dEYXRhIiwic2FuaXRpemVQYXJhbWV0ZXJzIiwibG9nTWV0aG9kU3RhcnQiLCJoYW5kbGUiLCJwaXBlIiwidGFwIiwicmVzdWx0IiwiZHVyYXRpb24iLCJjb21wbGV0ZWRMb2dEYXRhIiwic2FuaXRpemVSZXN1bHQiLCJsb2dNZXRob2RTdWNjZXNzIiwiY2F0Y2hFcnJvciIsImVycm9yIiwiZXJyb3JMb2dEYXRhIiwibG9nTWV0aG9kRXJyb3IiLCJ0aHJvd0Vycm9yIiwidjQiLCJhcmdzIiwiZ2V0QXJncyIsImZpbHRlciIsImFyZyIsImluZGV4IiwiYiIsIm1ldGhvZCIsInN0YXR1c0NvZGUiLCJ1bmRlZmluZWQiLCJtYXAiLCJwYXJhbSIsInNhbml0aXplT2JqZWN0Iiwib2JqIiwiQXJyYXkiLCJpc0FycmF5IiwiaXRlbSIsInNhbml0aXplZCIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZW50cmllcyIsImluY2x1ZGVzIiwidG9Mb3dlckNhc2UiLCJkYXRhIiwiZGVidWciLCJMb2dDb250ZXh0IiwiQlVTSU5FU1MiLCJpbmZvIiwicGVyZm9ybWFuY2UiLCJQRVJGT1JNQU5DRSIsIl9fZXNEZWNvcmF0ZSIsIl9jbGFzc0Rlc2NyaXB0b3IiLCJfY2xhc3NUaGlzIiwiX2NsYXNzRGVjb3JhdG9ycyIsImtpbmQiLCJtZXRhZGF0YSIsIl9tZXRhZGF0YSIsIl9jbGFzc0V4dHJhSW5pdGlhbGl6ZXJzIiwiX19ydW5Jbml0aWFsaXplcnMiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL2hvbWUvYXJsaWdsZS9WMS9BaW9maXgvYWlvZml4LWFpLXNhYXMtcGxhdGZvcm0vcGFja2FnZXMvbG9nZ2luZy9zcmMvaW50ZXJjZXB0b3JzL3Bpbm8tbG9nZ2luZy5pbnRlcmNlcHRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBJbmplY3RhYmxlLFxuICBOZXN0SW50ZXJjZXB0b3IsXG4gIEV4ZWN1dGlvbkNvbnRleHQsXG4gIENhbGxIYW5kbGVyLFxufSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCB0aHJvd0Vycm9yIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IHRhcCwgY2F0Y2hFcnJvciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xuaW1wb3J0IHsgUGlub0xvZ2dlclNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9waW5vLWxvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IExvZ0NvbnRleHQgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2xvZ2dpbmcuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAaW50ZXJmYWNlIE1ldGhvZExvZ0RhdGFcbiAqIEBkZXNjcmlwdGlvbiDmlrnms5Xml6Xlv5fmlbDmja7nu5PmnoRcbiAqL1xuaW50ZXJmYWNlIE1ldGhvZExvZ0RhdGEge1xuICBtZXRob2RJZDogc3RyaW5nO1xuICBjbGFzc05hbWU6IHN0cmluZztcbiAgbWV0aG9kTmFtZTogc3RyaW5nO1xuICBzdGFydFRpbWU6IG51bWJlcjtcbiAgcmVxdWVzdElkPzogc3RyaW5nO1xuICB0ZW5hbnRJZD86IHN0cmluZztcbiAgdXNlcklkPzogc3RyaW5nO1xuICBwYXJhbWV0ZXJzPzogdW5rbm93bltdO1xuICByZXN1bHQ/OiB1bmtub3duO1xuICBlcnJvcj86IEVycm9yO1xuICBkdXJhdGlvbj86IG51bWJlcjtcbn1cblxuLyoqXG4gKiBAY2xhc3MgUGlub0xvZ2dpbmdJbnRlcmNlcHRvclxuICogQGRlc2NyaXB0aW9uXG4gKiBQaW5v5pel5b+X5oum5oiq5Zmo77yM6LSf6LSj6K6w5b2V5pa55rOV6LCD55So55qE6K+m57uG5pel5b+X44CCXG4gKlxuICog5Li76KaB5Yqf6IO95YyF5ous77yaXG4gKiAxLiDkuLrmr4/kuKrmlrnms5XosIPnlKjnlJ/miJDllK/kuIBJRFxuICogMi4g6K6w5b2V5pa55rOV6LCD55So55qE5byA5aeL5ZKM57uT5p2f5pe26Ze0XG4gKiAzLiDorrDlvZXmlrnms5Xlj4LmlbDlkozov5Tlm57lgLxcbiAqIDQuIOiuoeeul+aWueazleaJp+ihjOaXtumXtFxuICogNS4g6K6w5b2V5byC5bi45L+h5oGvXG4gKiA2LiDmlK/mjIHor7fmsYLkuIrkuIvmlofov73ouKpcbiAqXG4gKiDorr7orqHljp/liJnvvJpcbiAqIC0g6auY5oCn6IO977ya5pyA5bCP5YyW5a+55pa55rOV5omn6KGM55qE5b2x5ZONXG4gKiAtIOe7k+aehOWMlu+8muaPkOS+m+e7k+aehOWMlueahOaXpeW/l+aVsOaNrlxuICogLSDlj6/phY3nva7vvJrmlK/mjIHkuI3lkIznuqfliKvnmoTml6Xlv5forrDlvZVcbiAqIC0g5a6J5YWo5oCn77ya5pWP5oSf5Y+C5pWw6L+H5rukXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQaW5vTG9nZ2luZ0ludGVyY2VwdG9yIGltcGxlbWVudHMgTmVzdEludGVyY2VwdG9yIHtcbiAgcHJpdmF0ZSByZWFkb25seSBzZW5zaXRpdmVQYXJhbWV0ZXJzID0gW1xuICAgICdwYXNzd29yZCcsXG4gICAgJ3Rva2VuJyxcbiAgICAnc2VjcmV0JyxcbiAgICAnYXBpa2V5JyxcbiAgICAnYXBpX2tleScsXG4gICAgJ2FwaS1rZXknLFxuICBdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyOiBQaW5vTG9nZ2VyU2VydmljZSkge31cblxuICAvKipcbiAgICogQG1ldGhvZCBpbnRlcmNlcHRcbiAgICogQGRlc2NyaXB0aW9uIOaLpuaIquWZqOS4u+aWueazlVxuICAgKiBAcGFyYW0ge0V4ZWN1dGlvbkNvbnRleHR9IGNvbnRleHQg5omn6KGM5LiK5LiL5paHXG4gICAqIEBwYXJhbSB7Q2FsbEhhbmRsZXJ9IG5leHQg5LiL5LiA5Liq5aSE55CG5ZmoXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPHVua25vd24+fSDlj6/op4Llr5/lr7nosaFcbiAgICovXG4gIGludGVyY2VwdChjb250ZXh0OiBFeGVjdXRpb25Db250ZXh0LCBuZXh0OiBDYWxsSGFuZGxlcik6IE9ic2VydmFibGU8dW5rbm93bj4ge1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgY29uc3QgbWV0aG9kSWQgPSB0aGlzLmdlbmVyYXRlTWV0aG9kSWQoKTtcbiAgICBjb25zdCByZXF1ZXN0ID0gY29udGV4dC5zd2l0Y2hUb0h0dHAoKS5nZXRSZXF1ZXN0KCk7XG5cbiAgICAvLyDmj5Dlj5bkuIrkuIvmlofkv6Hmga9cbiAgICBjb25zdCByZXF1ZXN0SWQgPSByZXF1ZXN0Py5yZXF1ZXN0SWQ7XG4gICAgY29uc3QgdGVuYW50SWQgPSByZXF1ZXN0Py50ZW5hbnRJZDtcbiAgICBjb25zdCB1c2VySWQgPSByZXF1ZXN0Py51c2VySWQ7XG5cbiAgICAvLyDojrflj5bmlrnms5Xkv6Hmga9cbiAgICBjb25zdCBoYW5kbGVyID0gY29udGV4dC5nZXRIYW5kbGVyKCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gY29udGV4dC5nZXRDbGFzcygpLm5hbWU7XG4gICAgY29uc3QgbWV0aG9kTmFtZSA9IGhhbmRsZXIubmFtZTtcblxuICAgIC8vIOiOt+WPluaWueazleWPguaVsFxuICAgIGNvbnN0IHBhcmFtZXRlcnMgPSB0aGlzLmV4dHJhY3RQYXJhbWV0ZXJzKGNvbnRleHQpO1xuXG4gICAgLy8g5Yib5bu65pa55rOV5pel5b+X5pWw5o2uXG4gICAgY29uc3QgbWV0aG9kTG9nRGF0YTogTWV0aG9kTG9nRGF0YSA9IHtcbiAgICAgIG1ldGhvZElkLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgbWV0aG9kTmFtZSxcbiAgICAgIHN0YXJ0VGltZSxcbiAgICAgIHJlcXVlc3RJZCxcbiAgICAgIHRlbmFudElkLFxuICAgICAgdXNlcklkLFxuICAgICAgcGFyYW1ldGVyczogdGhpcy5zYW5pdGl6ZVBhcmFtZXRlcnMocGFyYW1ldGVycyksXG4gICAgfTtcblxuICAgIC8vIOiusOW9leaWueazleW8gOWni+aXpeW/l1xuICAgIHRoaXMubG9nTWV0aG9kU3RhcnQobWV0aG9kTG9nRGF0YSk7XG5cbiAgICByZXR1cm4gbmV4dC5oYW5kbGUoKS5waXBlKFxuICAgICAgdGFwKHJlc3VsdCA9PiB7XG4gICAgICAgIC8vIOiusOW9leaWueazleaIkOWKn+WujOaIkFxuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XG4gICAgICAgIGNvbnN0IGNvbXBsZXRlZExvZ0RhdGE6IE1ldGhvZExvZ0RhdGEgPSB7XG4gICAgICAgICAgLi4ubWV0aG9kTG9nRGF0YSxcbiAgICAgICAgICByZXN1bHQ6IHRoaXMuc2FuaXRpemVSZXN1bHQocmVzdWx0KSxcbiAgICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5sb2dNZXRob2RTdWNjZXNzKGNvbXBsZXRlZExvZ0RhdGEpO1xuICAgICAgfSksXG4gICAgICBjYXRjaEVycm9yKGVycm9yID0+IHtcbiAgICAgICAgLy8g6K6w5b2V5pa55rOV5byC5bi4XG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICAgICAgY29uc3QgZXJyb3JMb2dEYXRhOiBNZXRob2RMb2dEYXRhID0ge1xuICAgICAgICAgIC4uLm1ldGhvZExvZ0RhdGEsXG4gICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgZHVyYXRpb24sXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubG9nTWV0aG9kRXJyb3IoZXJyb3JMb2dEYXRhKTtcbiAgICAgICAgcmV0dXJuIHRocm93RXJyb3IoKCkgPT4gZXJyb3IpO1xuICAgICAgfSksXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAbWV0aG9kIGdlbmVyYXRlTWV0aG9kSWRcbiAgICogQGRlc2NyaXB0aW9uIOeUn+aIkOaWueazleiwg+eUqElEXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IOaWueazleiwg+eUqElEXG4gICAqL1xuICBwcml2YXRlIGdlbmVyYXRlTWV0aG9kSWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdXVpZHY0KCk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQG1ldGhvZCBleHRyYWN0UGFyYW1ldGVyc1xuICAgKiBAZGVzY3JpcHRpb24g5o+Q5Y+W5pa55rOV5Y+C5pWwXG4gICAqIEBwYXJhbSB7RXhlY3V0aW9uQ29udGV4dH0gY29udGV4dCDmiafooYzkuIrkuIvmlodcbiAgICogQHJldHVybnMge3Vua25vd25bXX0g5pa55rOV5Y+C5pWwXG4gICAqL1xuICBwcml2YXRlIGV4dHJhY3RQYXJhbWV0ZXJzKGNvbnRleHQ6IEV4ZWN1dGlvbkNvbnRleHQpOiB1bmtub3duW10ge1xuICAgIGNvbnN0IGFyZ3MgPSBjb250ZXh0LmdldEFyZ3MoKTtcblxuICAgIC8vIOi/h+a7pOaOieivt+axguWSjOWTjeW6lOWvueixoe+8jOWPquS/neeVmeS4muWKoeWPguaVsFxuICAgIHJldHVybiBhcmdzLmZpbHRlcigoYXJnLCBpbmRleCkgPT4ge1xuICAgICAgLy8g6YCa5bi45YmN5Lik5Liq5Y+C5pWw5pivIHJlcXVlc3Qg5ZKMIHJlc3BvbnNlXG4gICAgICBpZiAoaW5kZXggPT09IDAgJiYgYXJnPy5tZXRob2QpIHJldHVybiBmYWxzZTsgLy8gSFRUUCByZXF1ZXN0XG4gICAgICBpZiAoaW5kZXggPT09IDEgJiYgYXJnPy5zdGF0dXNDb2RlICE9PSB1bmRlZmluZWQpIHJldHVybiBmYWxzZTsgLy8gSFRUUCByZXNwb25zZVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQG1ldGhvZCBzYW5pdGl6ZVBhcmFtZXRlcnNcbiAgICogQGRlc2NyaXB0aW9uIOa4heeQhuaWueazleWPguaVsO+8jOenu+mZpOaVj+aEn+S/oeaBr1xuICAgKiBAcGFyYW0ge3Vua25vd25bXX0gcGFyYW1ldGVycyDmlrnms5Xlj4LmlbBcbiAgICogQHJldHVybnMge3Vua25vd25bXX0g5riF55CG5ZCO55qE5Y+C5pWwXG4gICAqL1xuICBwcml2YXRlIHNhbml0aXplUGFyYW1ldGVycyhwYXJhbWV0ZXJzOiB1bmtub3duW10pOiB1bmtub3duW10ge1xuICAgIHJldHVybiBwYXJhbWV0ZXJzLm1hcChwYXJhbSA9PiB0aGlzLnNhbml0aXplT2JqZWN0KHBhcmFtKSk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQG1ldGhvZCBzYW5pdGl6ZVJlc3VsdFxuICAgKiBAZGVzY3JpcHRpb24g5riF55CG5pa55rOV6L+U5Zue5YC877yM56e76Zmk5pWP5oSf5L+h5oGvXG4gICAqIEBwYXJhbSB7dW5rbm93bn0gcmVzdWx0IOaWueazlei/lOWbnuWAvFxuICAgKiBAcmV0dXJucyB7dW5rbm93bn0g5riF55CG5ZCO55qE6L+U5Zue5YC8XG4gICAqL1xuICBwcml2YXRlIHNhbml0aXplUmVzdWx0KHJlc3VsdDogdW5rbm93bik6IHVua25vd24ge1xuICAgIHJldHVybiB0aGlzLnNhbml0aXplT2JqZWN0KHJlc3VsdCk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQG1ldGhvZCBzYW5pdGl6ZU9iamVjdFxuICAgKiBAZGVzY3JpcHRpb24g5riF55CG5a+56LGh77yM56e76Zmk5pWP5oSf5L+h5oGvXG4gICAqIEBwYXJhbSB7dW5rbm93bn0gb2JqIOimgea4heeQhueahOWvueixoVxuICAgKiBAcmV0dXJucyB7dW5rbm93bn0g5riF55CG5ZCO55qE5a+56LGhXG4gICAqL1xuICBwcml2YXRlIHNhbml0aXplT2JqZWN0KG9iajogdW5rbm93bik6IHVua25vd24ge1xuICAgIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cblxuICAgIC8vIOWmguaenOaYr+aVsOe7hO+8jOmAkuW9kuWkhOeQhuavj+S4quWFg+e0oFxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIHJldHVybiBvYmoubWFwKGl0ZW0gPT4gdGhpcy5zYW5pdGl6ZU9iamVjdChpdGVtKSk7XG4gICAgfVxuXG4gICAgLy8g5aaC5p6c5piv5a+56LGh77yM6YCS5b2S5aSE55CG5q+P5Liq5bGe5oCnXG4gICAgY29uc3Qgc2FuaXRpemVkID0geyAuLi4ob2JqIGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+KSB9O1xuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoc2FuaXRpemVkKSkge1xuICAgICAgaWYgKHRoaXMuc2Vuc2l0aXZlUGFyYW1ldGVycy5pbmNsdWRlcyhrZXkudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgKHNhbml0aXplZCBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPilba2V5XSA9ICdbUkVEQUNURURdJztcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICAoc2FuaXRpemVkIGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+KVtrZXldID1cbiAgICAgICAgICB0aGlzLnNhbml0aXplT2JqZWN0KHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc2FuaXRpemVkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqIEBtZXRob2QgbG9nTWV0aG9kU3RhcnRcbiAgICogQGRlc2NyaXB0aW9uIOiusOW9leaWueazleW8gOWni+aXpeW/l1xuICAgKiBAcGFyYW0ge01ldGhvZExvZ0RhdGF9IGRhdGEg5pa55rOV5pel5b+X5pWw5o2uXG4gICAqL1xuICBwcml2YXRlIGxvZ01ldGhvZFN0YXJ0KGRhdGE6IE1ldGhvZExvZ0RhdGEpOiB2b2lkIHtcbiAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhcbiAgICAgIGBNZXRob2QgU3RhcnQ6ICR7ZGF0YS5jbGFzc05hbWV9LiR7ZGF0YS5tZXRob2ROYW1lfWAsXG4gICAgICBMb2dDb250ZXh0LkJVU0lORVNTLFxuICAgICAge1xuICAgICAgICBtZXRob2RJZDogZGF0YS5tZXRob2RJZCxcbiAgICAgICAgY2xhc3NOYW1lOiBkYXRhLmNsYXNzTmFtZSxcbiAgICAgICAgbWV0aG9kTmFtZTogZGF0YS5tZXRob2ROYW1lLFxuICAgICAgICByZXF1ZXN0SWQ6IGRhdGEucmVxdWVzdElkLFxuICAgICAgICB0ZW5hbnRJZDogZGF0YS50ZW5hbnRJZCxcbiAgICAgICAgdXNlcklkOiBkYXRhLnVzZXJJZCxcbiAgICAgICAgcGFyYW1ldGVyczogZGF0YS5wYXJhbWV0ZXJzLFxuICAgICAgfSxcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqIEBtZXRob2QgbG9nTWV0aG9kU3VjY2Vzc1xuICAgKiBAZGVzY3JpcHRpb24g6K6w5b2V5pa55rOV5oiQ5Yqf5a6M5oiQ5pel5b+XXG4gICAqIEBwYXJhbSB7TWV0aG9kTG9nRGF0YX0gZGF0YSDmlrnms5Xml6Xlv5fmlbDmja5cbiAgICovXG4gIHByaXZhdGUgbG9nTWV0aG9kU3VjY2VzcyhkYXRhOiBNZXRob2RMb2dEYXRhKTogdm9pZCB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgIGBNZXRob2QgU3VjY2VzczogJHtkYXRhLmNsYXNzTmFtZX0uJHtkYXRhLm1ldGhvZE5hbWV9IC0gJHtkYXRhLmR1cmF0aW9ufW1zYCxcbiAgICAgIExvZ0NvbnRleHQuQlVTSU5FU1MsXG4gICAgICB7XG4gICAgICAgIG1ldGhvZElkOiBkYXRhLm1ldGhvZElkLFxuICAgICAgICBjbGFzc05hbWU6IGRhdGEuY2xhc3NOYW1lLFxuICAgICAgICBtZXRob2ROYW1lOiBkYXRhLm1ldGhvZE5hbWUsXG4gICAgICAgIHJlcXVlc3RJZDogZGF0YS5yZXF1ZXN0SWQsXG4gICAgICAgIHRlbmFudElkOiBkYXRhLnRlbmFudElkLFxuICAgICAgICB1c2VySWQ6IGRhdGEudXNlcklkLFxuICAgICAgICByZXN1bHQ6IGRhdGEucmVzdWx0LFxuICAgICAgICBkdXJhdGlvbjogZGF0YS5kdXJhdGlvbixcbiAgICAgIH0sXG4gICAgKTtcblxuICAgIC8vIOiusOW9leaAp+iDveaXpeW/l1xuICAgIHRoaXMubG9nZ2VyLnBlcmZvcm1hbmNlKFxuICAgICAgJ21ldGhvZF9leGVjdXRpb24nLFxuICAgICAgZGF0YS5kdXJhdGlvbiA/PyAwLFxuICAgICAgTG9nQ29udGV4dC5QRVJGT1JNQU5DRSxcbiAgICAgIHtcbiAgICAgICAgbWV0aG9kSWQ6IGRhdGEubWV0aG9kSWQsXG4gICAgICAgIGNsYXNzTmFtZTogZGF0YS5jbGFzc05hbWUsXG4gICAgICAgIG1ldGhvZE5hbWU6IGRhdGEubWV0aG9kTmFtZSxcbiAgICAgICAgcmVxdWVzdElkOiBkYXRhLnJlcXVlc3RJZCxcbiAgICAgICAgdGVuYW50SWQ6IGRhdGEudGVuYW50SWQsXG4gICAgICAgIHVzZXJJZDogZGF0YS51c2VySWQsXG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICogQG1ldGhvZCBsb2dNZXRob2RFcnJvclxuICAgKiBAZGVzY3JpcHRpb24g6K6w5b2V5pa55rOV5byC5bi45pel5b+XXG4gICAqIEBwYXJhbSB7TWV0aG9kTG9nRGF0YX0gZGF0YSDmlrnms5Xml6Xlv5fmlbDmja5cbiAgICovXG4gIHByaXZhdGUgbG9nTWV0aG9kRXJyb3IoZGF0YTogTWV0aG9kTG9nRGF0YSk6IHZvaWQge1xuICAgIHRoaXMubG9nZ2VyLmVycm9yKFxuICAgICAgYE1ldGhvZCBFcnJvcjogJHtkYXRhLmNsYXNzTmFtZX0uJHtkYXRhLm1ldGhvZE5hbWV9IC0gJHtkYXRhLmR1cmF0aW9ufW1zYCxcbiAgICAgIExvZ0NvbnRleHQuQlVTSU5FU1MsXG4gICAgICB7XG4gICAgICAgIG1ldGhvZElkOiBkYXRhLm1ldGhvZElkLFxuICAgICAgICBjbGFzc05hbWU6IGRhdGEuY2xhc3NOYW1lLFxuICAgICAgICBtZXRob2ROYW1lOiBkYXRhLm1ldGhvZE5hbWUsXG4gICAgICAgIHJlcXVlc3RJZDogZGF0YS5yZXF1ZXN0SWQsXG4gICAgICAgIHRlbmFudElkOiBkYXRhLnRlbmFudElkLFxuICAgICAgICB1c2VySWQ6IGRhdGEudXNlcklkLFxuICAgICAgICBwYXJhbWV0ZXJzOiBkYXRhLnBhcmFtZXRlcnMsXG4gICAgICAgIGR1cmF0aW9uOiBkYXRhLmR1cmF0aW9uLFxuICAgICAgfSxcbiAgICAgIGRhdGEuZXJyb3IsXG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE1BQUFBLFFBQUE7QUFBQTtBQUFB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