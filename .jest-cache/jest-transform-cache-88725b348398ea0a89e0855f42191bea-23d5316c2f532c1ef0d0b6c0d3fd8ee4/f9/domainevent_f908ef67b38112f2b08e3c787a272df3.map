{"version":3,"names":["uuid_1","cov_10jxmh3c39","s","require","DomainEvent","constructor","aggregateId","eventVersion","b","f","trim","length","Error","eventId","v4","occurredOn","Date","eventType","name","getBaseEventData","toISOString","getEventType","getAggregateId","getEventId","validateEventData","isNaN","getTime","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/domain-event.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { IDomainEvent } from './interfaces/domain-event.interface';\n\n/**\n * @class DomainEvent\n * @description\n * 领域事件基类，描述事件含义、触发条件和影响范围。\n *\n * 事件含义：\n * 1. 表示业务状态变更的重要时刻\n * 2. 包含事件发生时的关键信息\n * 3. 为其他聚合根提供状态变更通知\n *\n * 触发条件：\n * 1. 聚合根状态发生变更时自动触发\n * 2. 业务规则验证通过\n * 3. 事件数据完整性检查通过\n *\n * 影响范围：\n * 1. 通知其他聚合根状态变更\n * 2. 触发后续业务流程\n * 3. 更新读模型视图\n * 4. 记录业务审计日志\n *\n * @property {string} eventId 事件的唯一标识符\n * @property {string} aggregateId 聚合根的唯一标识符\n * @property {Date} occurredOn 事件发生的时间戳\n * @property {string} eventType 事件的类型名称\n * @property {number} eventVersion 事件的版本号\n *\n * @example\n * ```typescript\n * class UserCreatedEvent extends DomainEvent {\n *   constructor(\n *     aggregateId: string,\n *     public readonly email: string,\n *     public readonly tenantId: string\n *   ) {\n *     super(aggregateId);\n *   }\n *\n *   toJSON(): any {\n *     return {\n *       ...this.getBaseEventData(),\n *       email: this.email,\n *       tenantId: this.tenantId\n *     };\n *   }\n * }\n * ```\n * @abstract\n * @implements {IDomainEvent}\n * @since 1.0.0\n */\nexport abstract class DomainEvent implements IDomainEvent {\n  /**\n   * 事件的唯一标识符\n   * 使用UUID确保全局唯一性\n   */\n  public readonly eventId: string;\n\n  /**\n   * 聚合根的唯一标识符\n   * 标识事件所属的聚合根\n   */\n  public readonly aggregateId: string;\n\n  /**\n   * 事件发生的时间戳\n   * 记录事件发生的精确时间\n   */\n  public readonly occurredOn: Date;\n\n  /**\n   * 事件的类型名称\n   * 使用构造函数名称作为事件类型\n   */\n  public readonly eventType: string;\n\n  /**\n   * 事件的版本号\n   * 用于事件的版本控制和兼容性处理\n   */\n  public readonly eventVersion: number;\n\n  /**\n   * 构造函数\n   *\n   * @param {string} aggregateId - 聚合根的唯一标识符\n   * @param {number} [eventVersion=1] - 事件的版本号，默认为1\n   *\n   * @throws {Error} 当aggregateId为空或无效时抛出错误\n   */\n  constructor(aggregateId: string, eventVersion: number = 1) {\n    if (!aggregateId || aggregateId.trim().length === 0) {\n      throw new Error('聚合根ID不能为空');\n    }\n\n    if (eventVersion < 1) {\n      throw new Error('事件版本号必须大于等于1');\n    }\n\n    this.eventId = uuidv4();\n    this.aggregateId = aggregateId;\n    this.occurredOn = new Date();\n    this.eventType = this.constructor.name;\n    this.eventVersion = eventVersion;\n  }\n\n  /**\n   * 将事件转换为JSON格式\n   *\n   * 子类应该重写此方法，提供具体的事件数据序列化。\n   * 基类提供默认实现，包含事件的基本属性。\n   *\n   * @returns {Record<string, unknown>} 事件的JSON表示\n   */\n  abstract toJSON(): Record<string, unknown>;\n\n  /**\n   * 获取事件的基本信息\n   *\n   * @returns {object} 包含事件基本信息的对象\n   */\n  protected getBaseEventData(): object {\n    return {\n      eventId: this.eventId,\n      aggregateId: this.aggregateId,\n      occurredOn: this.occurredOn.toISOString(),\n      eventType: this.eventType,\n      eventVersion: this.eventVersion,\n    };\n  }\n\n  /**\n   * 获取事件类型\n   * @returns {string} 事件类型\n   */\n  public getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * 获取聚合根ID\n   * @returns {string} 聚合根ID\n   */\n  public getAggregateId(): string {\n    return this.aggregateId;\n  }\n\n  /**\n   * 获取事件ID\n   * @returns {string} 事件ID\n   */\n  public getEventId(): string {\n    return this.eventId;\n  }\n\n  /**\n   * 验证事件数据的有效性\n   *\n   * 子类可以重写此方法，添加特定的事件数据验证逻辑。\n   * 基类提供基本的验证，确保事件的基本属性有效。\n   *\n   * @throws {Error} 当事件数据无效时抛出错误\n   */\n  protected validateEventData(): void {\n    if (!this.eventId || this.eventId.trim().length === 0) {\n      throw new Error('事件ID不能为空');\n    }\n\n    if (!this.aggregateId || this.aggregateId.trim().length === 0) {\n      throw new Error('聚合根ID不能为空');\n    }\n\n    if (isNaN(this.occurredOn.getTime())) {\n      throw new Error('事件发生时间无效');\n    }\n\n    if (!this.eventType || this.eventType.trim().length === 0) {\n      throw new Error('事件类型不能为空');\n    }\n\n    if (this.eventVersion < 1) {\n      throw new Error('事件版本号必须大于等于1');\n    }\n  }\n}\n"],"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","ignoreList":[]}