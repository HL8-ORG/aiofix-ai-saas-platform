{"version":3,"names":["common_1","cov_193qd4fmbp","s","require","logging_interface_1","PinoLoggerConfigService","f","Injectable","constructor","customConfig","config","initializeConfig","getConfig","updateConfig","newConfig","validateConfig","getLevel","level","setLevel","getFormat","format","setFormat","isProduction","process","env","NODE_ENV","isDevelopment","shouldUsePrettyFormat","b","LogFormat","TEXT","resetToDefaults","validLevels","validFormats","JSON","includes","Error","join","rotation","maxSize","isValidFileSize","remote","url","timeout","retries","defaultFormat","defaultConfig","LOG_LEVEL","LOG_FORMAT","colorize","timestamp","requestId","tenantId","userId","performance","stackTrace","filePath","LOG_FILE_PATH","maxFiles","interval","LOG_REMOTE_URL","token","LOG_REMOTE_TOKEN","undefined","size","sizeRegex","test","__esDecorate","_classDescriptor","value","_classThis","_classDecorators","kind","name","metadata","_metadata","_classExtraInitializers","__runInitializers","exports","defaultLoggingConfig"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger-config.service.ts"],"sourcesContent":["import { Inject, Injectable, Optional } from '@nestjs/common';\nimport { LogConfig, LogFormat } from '../interfaces/logging.interface';\n\nexport type LogLevel = 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';\n\n/**\n * @class PinoLoggerConfigService\n * @description\n * Pino日志配置管理服务，负责日志配置的初始化、验证和管理。\n *\n * 主要功能包括：\n * 1. 从环境变量和默认值初始化配置\n * 2. 配置验证和类型检查\n * 3. 配置更新和动态调整\n * 4. 环境相关的配置适配\n * 5. 配置持久化和恢复\n *\n * 设计原则：\n * - 单一职责：只负责配置管理\n * - 可测试性：配置逻辑独立，易于单元测试\n * - 可扩展性：支持多种配置源和验证规则\n */\n@Injectable()\nexport class PinoLoggerConfigService {\n  private config: LogConfig = {} as LogConfig;\n\n  constructor(\n    @Optional()\n    @Inject('LOGGING_CONFIG')\n    private customConfig?: Partial<LogConfig>,\n  ) {\n    this.initializeConfig();\n  }\n\n  /**\n   * @method getConfig\n   * @description 获取当前日志配置\n   * @returns {LogConfig} 当前配置的副本\n   */\n  getConfig(): LogConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * @method updateConfig\n   * @description 更新日志配置\n   * @param {Partial<LogConfig>} newConfig 新的配置项\n   */\n  updateConfig(newConfig: Partial<LogConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.validateConfig(this.config);\n  }\n\n  /**\n   * @method getLevel\n   * @description 获取当前日志级别\n   * @returns {LogLevel} 当前日志级别\n   */\n  getLevel(): LogLevel {\n    return this.config.level;\n  }\n\n  /**\n   * @method setLevel\n   * @description 设置日志级别\n   * @param {LogLevel} level 新的日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.updateConfig({ level });\n  }\n\n  /**\n   * @method getFormat\n   * @description 获取当前日志格式\n   * @returns {LogFormat} 当前日志格式\n   */\n  getFormat(): LogFormat {\n    return this.config.format;\n  }\n\n  /**\n   * @method setFormat\n   * @description 设置日志格式\n   * @param {LogFormat} format 新的日志格式\n   */\n  setFormat(format: LogFormat): void {\n    this.updateConfig({ format });\n  }\n\n  /**\n   * @method isProduction\n   * @description 检查是否为生产环境\n   * @returns {boolean} 是否为生产环境\n   */\n  isProduction(): boolean {\n    return process.env.NODE_ENV === 'production';\n  }\n\n  /**\n   * @method isDevelopment\n   * @description 检查是否为开发环境\n   * @returns {boolean} 是否为开发环境\n   */\n  isDevelopment(): boolean {\n    return process.env.NODE_ENV !== 'production';\n  }\n\n  /**\n   * @method shouldUsePrettyFormat\n   * @description 判断是否应该使用美化格式\n   * @returns {boolean} 是否使用美化格式\n   */\n  shouldUsePrettyFormat(): boolean {\n    return this.config.format === LogFormat.TEXT && this.isDevelopment();\n  }\n\n  /**\n   * @method resetToDefaults\n   * @description 重置为默认配置\n   */\n  resetToDefaults(): void {\n    this.initializeConfig();\n  }\n\n  /**\n   * @method validateConfig\n   * @description 验证配置的有效性\n   * @param {LogConfig} config 要验证的配置\n   * @throws {Error} 配置无效时抛出错误\n   */\n  validateConfig(config: LogConfig): void {\n    const validLevels: LogLevel[] = [\n      'fatal',\n      'error',\n      'warn',\n      'info',\n      'debug',\n      'trace',\n    ];\n    const validFormats: LogFormat[] = [LogFormat.JSON, LogFormat.TEXT];\n\n    if (!validLevels.includes(config.level)) {\n      throw new Error(\n        `Invalid log level: ${config.level}. Valid levels are: ${validLevels.join(', ')}`,\n      );\n    }\n\n    if (!validFormats.includes(config.format)) {\n      throw new Error(\n        `Invalid log format: ${config.format}. Valid formats are: ${validFormats.join(', ')}`,\n      );\n    }\n\n    if (config.rotation) {\n      if (\n        config.rotation.maxSize &&\n        !this.isValidFileSize(config.rotation.maxSize)\n      ) {\n        throw new Error(\n          `Invalid maxSize format: ${config.rotation.maxSize}. Use format like '10m', '1g'`,\n        );\n      }\n    }\n\n    if (config.remote) {\n      if (!config.remote.url) {\n        throw new Error(\n          'Remote logging URL is required when remote logging is enabled',\n        );\n      }\n      if (config.remote.timeout && config.remote.timeout <= 0) {\n        throw new Error('Remote logging timeout must be positive');\n      }\n      if (config.remote.retries && config.remote.retries < 0) {\n        throw new Error('Remote logging retries must be non-negative');\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @method initializeConfig\n   * @description 初始化日志配置\n   */\n  private initializeConfig(): void {\n    // 根据环境确定默认格式\n    const defaultFormat = this.isProduction() ? LogFormat.JSON : LogFormat.TEXT;\n\n    // 默认配置\n    const defaultConfig: LogConfig = {\n      level: (process.env.LOG_LEVEL as LogLevel) || 'info',\n      format: (process.env.LOG_FORMAT as LogFormat) || defaultFormat,\n      colorize: this.isDevelopment(),\n      timestamp: true,\n      requestId: true,\n      tenantId: true,\n      userId: true,\n      performance: true,\n      stackTrace: true,\n      filePath: process.env.LOG_FILE_PATH,\n      rotation: {\n        maxSize: '10m',\n        maxFiles: 5,\n        interval: '1d',\n      },\n      remote: process.env.LOG_REMOTE_URL\n        ? {\n            url: process.env.LOG_REMOTE_URL,\n            token: process.env.LOG_REMOTE_TOKEN,\n            timeout: 5000,\n            retries: 3,\n          }\n        : undefined,\n    };\n\n    // 合并自定义配置\n    this.config = {\n      ...defaultConfig,\n      ...this.customConfig,\n    };\n\n    this.validateConfig(this.config);\n  }\n\n  /**\n   * @private\n   * @method isValidFileSize\n   * @description 验证文件大小格式是否有效\n   * @param {string} size 文件大小字符串\n   * @returns {boolean} 是否有效\n   */\n  private isValidFileSize(size: string): boolean {\n    const sizeRegex = /^\\d+[kmg]?$/i;\n    return sizeRegex.test(size);\n  }\n}\n\n/**\n * @constant defaultLoggingConfig\n * @description 默认日志配置\n */\nexport const defaultLoggingConfig: LogConfig = {\n  level: 'info',\n  format: LogFormat.JSON,\n  colorize: false,\n  timestamp: true,\n  requestId: true,\n  tenantId: true,\n  userId: true,\n  performance: true,\n  stackTrace: true,\n  rotation: {\n    maxSize: '10m',\n    maxFiles: 5,\n    interval: '1d',\n  },\n};\n"],"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","ignoreList":[]}