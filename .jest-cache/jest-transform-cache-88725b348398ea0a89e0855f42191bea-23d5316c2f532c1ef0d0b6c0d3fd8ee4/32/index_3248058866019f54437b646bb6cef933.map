{"version":3,"names":["cov_2fsx6e5qc9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","HTTP_STATUS","OK","CREATED","NO_CONTENT","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","CONFLICT","UNPROCESSABLE_ENTITY","INTERNAL_SERVER_ERROR","SERVICE_UNAVAILABLE","USER_ROLES","PLATFORM_ADMIN","TENANT_ADMIN","ORGANIZATION_ADMIN","DEPARTMENT_ADMIN","PERSONAL_USER","TENANT_USER","SYSTEM_ADMIN","SERVICE_ACCOUNT","PERMISSIONS","CREATE","READ","UPDATE","DELETE","MANAGE","EXECUTE","ISOLATION_LEVELS","PLATFORM","TENANT","ORGANIZATION","DEPARTMENT","USER","USER_STATUS","ACTIVE","INACTIVE","PENDING","LOCKED","EXPIRED","TENANT_TYPES","ENTERPRISE","COMMUNITY","TEAM","PERSONAL","ORGANIZATION_TYPES","COMMITTEE","PROJECT_TEAM","QUALITY_CONTROL","PERFORMANCE_MANAGEMENT","OTHER","EVENT_TYPES","USER_CREATED","USER_UPDATED","USER_DELETED","TENANT_CREATED","TENANT_UPDATED","TENANT_DELETED","ORGANIZATION_CREATED","ORGANIZATION_UPDATED","ORGANIZATION_DELETED","DEPARTMENT_CREATED","DEPARTMENT_UPDATED","DEPARTMENT_DELETED","ERROR_CODES","INTERNAL_ERROR","VALIDATION_ERROR","USER_NOT_FOUND","USER_ALREADY_EXISTS","TENANT_NOT_FOUND","TENANT_ALREADY_EXISTS","ORGANIZATION_NOT_FOUND","DEPARTMENT_NOT_FOUND","INSUFFICIENT_PERMISSIONS","ROLE_NOT_FOUND","PERMISSION_NOT_FOUND","DATA_ISOLATION_VIOLATION","CROSS_TENANT_ACCESS","CACHE_PREFIXES","ROLE","PERMISSION","SESSION","TOKEN","PAGINATION","DEFAULT_PAGE","DEFAULT_LIMIT","MAX_LIMIT","MIN_LIMIT","SORT_ORDER","ASC","DESC","TIME_CONSTANTS","SECOND","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","REGEX_PATTERNS","EMAIL","PHONE","UUID","STRONG_PASSWORD"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/constants/index.ts"],"sourcesContent":["/**\n * 常量定义\n *\n * 定义系统中使用的各种常量，包括HTTP状态码、用户角色、权限等。\n * 使用const断言确保常量的不可变性。\n *\n * @fileoverview 系统常量定义\n * @author AI开发团队\n * @since 1.0.0\n */\n\n/**\n * HTTP状态码常量\n *\n * 定义常用的HTTP状态码，用于API响应。\n */\nexport const HTTP_STATUS = {\n  OK: 200,\n  CREATED: 201,\n  NO_CONTENT: 204,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  UNPROCESSABLE_ENTITY: 422,\n  INTERNAL_SERVER_ERROR: 500,\n  SERVICE_UNAVAILABLE: 503,\n} as const;\n\n/**\n * 用户角色常量\n *\n * 定义系统中的8种基础角色，对应业务需求文档中的角色定义。\n */\nexport const USER_ROLES = {\n  // 平台级角色\n  PLATFORM_ADMIN: 'platform_admin',\n\n  // 租户级角色\n  TENANT_ADMIN: 'tenant_admin',\n\n  // 组织级角色\n  ORGANIZATION_ADMIN: 'organization_admin',\n\n  // 部门级角色\n  DEPARTMENT_ADMIN: 'department_admin',\n\n  // 普通用户角色\n  PERSONAL_USER: 'personal_user',\n  TENANT_USER: 'tenant_user',\n\n  // 系统级角色\n  SYSTEM_ADMIN: 'system_admin',\n  SERVICE_ACCOUNT: 'service_account',\n} as const;\n\n/**\n * 权限常量\n *\n * 定义基础的CRUD权限操作。\n */\nexport const PERMISSIONS = {\n  CREATE: 'create',\n  READ: 'read',\n  UPDATE: 'update',\n  DELETE: 'delete',\n  MANAGE: 'manage',\n  EXECUTE: 'execute',\n} as const;\n\n/**\n * 数据隔离级别常量\n *\n * 定义多租户数据隔离的五个层级。\n */\nexport const ISOLATION_LEVELS = {\n  PLATFORM: 'platform',\n  TENANT: 'tenant',\n  ORGANIZATION: 'organization',\n  DEPARTMENT: 'department',\n  USER: 'user',\n} as const;\n\n/**\n * 用户状态常量\n *\n * 定义用户的各种状态。\n */\nexport const USER_STATUS = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive',\n  PENDING: 'pending',\n  LOCKED: 'locked',\n  EXPIRED: 'expired',\n} as const;\n\n/**\n * 租户类型常量\n *\n * 定义支持的租户类型。\n */\nexport const TENANT_TYPES = {\n  ENTERPRISE: 'enterprise',\n  COMMUNITY: 'community',\n  TEAM: 'team',\n  PERSONAL: 'personal',\n} as const;\n\n/**\n * 组织类型常量\n *\n * 定义组织架构中的组织类型。\n */\nexport const ORGANIZATION_TYPES = {\n  COMMITTEE: 'committee',\n  PROJECT_TEAM: 'project_team',\n  QUALITY_CONTROL: 'quality_control',\n  PERFORMANCE_MANAGEMENT: 'performance_management',\n  OTHER: 'other',\n} as const;\n\n/**\n * 事件类型常量\n *\n * 定义系统事件的类型。\n */\nexport const EVENT_TYPES = {\n  USER_CREATED: 'user_created',\n  USER_UPDATED: 'user_updated',\n  USER_DELETED: 'user_deleted',\n  TENANT_CREATED: 'tenant_created',\n  TENANT_UPDATED: 'tenant_updated',\n  TENANT_DELETED: 'tenant_deleted',\n  ORGANIZATION_CREATED: 'organization_created',\n  ORGANIZATION_UPDATED: 'organization_updated',\n  ORGANIZATION_DELETED: 'organization_deleted',\n  DEPARTMENT_CREATED: 'department_created',\n  DEPARTMENT_UPDATED: 'department_updated',\n  DEPARTMENT_DELETED: 'department_deleted',\n} as const;\n\n/**\n * 错误代码常量\n *\n * 定义系统错误代码。\n */\nexport const ERROR_CODES = {\n  // 通用错误\n  INTERNAL_ERROR: 'INTERNAL_ERROR',\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  NOT_FOUND: 'NOT_FOUND',\n  UNAUTHORIZED: 'UNAUTHORIZED',\n  FORBIDDEN: 'FORBIDDEN',\n  CONFLICT: 'CONFLICT',\n\n  // 业务错误\n  USER_NOT_FOUND: 'USER_NOT_FOUND',\n  USER_ALREADY_EXISTS: 'USER_ALREADY_EXISTS',\n  TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',\n  TENANT_ALREADY_EXISTS: 'TENANT_ALREADY_EXISTS',\n  ORGANIZATION_NOT_FOUND: 'ORGANIZATION_NOT_FOUND',\n  DEPARTMENT_NOT_FOUND: 'DEPARTMENT_NOT_FOUND',\n\n  // 权限错误\n  INSUFFICIENT_PERMISSIONS: 'INSUFFICIENT_PERMISSIONS',\n  ROLE_NOT_FOUND: 'ROLE_NOT_FOUND',\n  PERMISSION_NOT_FOUND: 'PERMISSION_NOT_FOUND',\n\n  // 数据隔离错误\n  DATA_ISOLATION_VIOLATION: 'DATA_ISOLATION_VIOLATION',\n  CROSS_TENANT_ACCESS: 'CROSS_TENANT_ACCESS',\n} as const;\n\n/**\n * 缓存键前缀常量\n *\n * 定义缓存键的前缀，用于缓存管理。\n */\nexport const CACHE_PREFIXES = {\n  USER: 'user:',\n  TENANT: 'tenant:',\n  ORGANIZATION: 'organization:',\n  DEPARTMENT: 'department:',\n  ROLE: 'role:',\n  PERMISSION: 'permission:',\n  SESSION: 'session:',\n  TOKEN: 'token:',\n} as const;\n\n/**\n * 分页常量\n *\n * 定义分页相关的默认值。\n */\nexport const PAGINATION = {\n  DEFAULT_PAGE: 1,\n  DEFAULT_LIMIT: 20,\n  MAX_LIMIT: 100,\n  MIN_LIMIT: 1,\n} as const;\n\n/**\n * 排序常量\n *\n * 定义排序相关的常量。\n */\nexport const SORT_ORDER = {\n  ASC: 'ASC',\n  DESC: 'DESC',\n} as const;\n\n/**\n * 时间常量\n *\n * 定义时间相关的常量。\n */\nexport const TIME_CONSTANTS = {\n  SECOND: 1000,\n  MINUTE: 60 * 1000,\n  HOUR: 60 * 60 * 1000,\n  DAY: 24 * 60 * 60 * 1000,\n  WEEK: 7 * 24 * 60 * 60 * 1000,\n  MONTH: 30 * 24 * 60 * 60 * 1000,\n  YEAR: 365 * 24 * 60 * 60 * 1000,\n} as const;\n\n/**\n * 正则表达式常量\n *\n * 定义常用的正则表达式。\n */\nexport const REGEX_PATTERNS = {\n  EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PHONE: /^\\+?[\\d\\s\\-\\(\\)]+$/,\n  UUID: /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n  STRONG_PASSWORD:\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n} as const;\n"],"mappings":"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","ignoreList":[]}