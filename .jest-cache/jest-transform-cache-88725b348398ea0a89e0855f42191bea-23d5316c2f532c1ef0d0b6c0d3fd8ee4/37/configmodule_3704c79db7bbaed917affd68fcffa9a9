e203f7961b97a7d237233521b9caaf5e
"use strict";

/* istanbul ignore next */
function cov_13d9x25z7() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.module.ts";
  var hash = "ae4a325d1848840a334957934456e5a2b19e9fe9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.module.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "14": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "16": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "17": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "18": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "19": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "20": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 63,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.module.ts",
      mappings: ";;;;;;;;;;;;AAAA,2CAAgD;AAChD,2CAAkE;AAClE,qDAAiD;AACjD,sDAA+B;AAE/B;;;;;;;;;;;;;;;;;;;GAmBG;AAuBI,IAAM,YAAY,GAAlB,MAAM,YAAY;CAAG,CAAA;AAAf,oCAAY;uBAAZ,YAAY;IAtBxB,IAAA,eAAM,GAAE;IACR,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP;;;;;;;;;eASG;YACH,qBAAgB,CAAC,OAAO,CAAC;gBACvB,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,IAAI;gBACX,IAAI,EAAE,CAAC,GAAG,gBAAO,CAAC;aACnB,CAAC;SACH;QACD,SAAS,EAAE,CAAC,8BAAa,CAAC;QAC1B,OAAO,EAAE,CAAC,8BAAa,CAAC;KACzB,CAAC;GACW,YAAY,CAAG",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.module.ts"],
      sourcesContent: ["import { Global, Module } from '@nestjs/common';\nimport { ConfigModule as NestConfigModule } from '@nestjs/config';\nimport { ConfigService } from './config.service';\nimport configs from './config';\n\n/**\n * @module ConfigModule\n * @description\n * IAM\u7CFB\u7EDF\u914D\u7F6E\u6A21\u5757\uFF0C\u8D1F\u8D23\u7BA1\u7406\u548C\u63D0\u4F9B\u7CFB\u7EDF\u4E2D\u6240\u6709\u914D\u7F6E\u4FE1\u606F\u3002\n * \u8BE5\u6A21\u5757\u662F\u914D\u7F6E\u7CFB\u7EDF\u7684\u5165\u53E3\u70B9\uFF0C\u96C6\u6210\u4E86NestJS\u7684\u914D\u7F6E\u6A21\u5757\u548C\u81EA\u5B9A\u4E49\u914D\u7F6E\u670D\u52A1\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u4F7F\u7528@Global()\u88C5\u9970\u5668\u4F7F\u6A21\u5757\u5168\u5C40\u53EF\u7528\n * 2. \u96C6\u6210NestJS\u7684ConfigModule\u8FDB\u884C\u914D\u7F6E\u7BA1\u7406\n * 3. \u52A0\u8F7D\u81EA\u5B9A\u4E49\u914D\u7F6E\u6A21\u5757\u6570\u7EC4\n * 4. \u63D0\u4F9BConfigService\u4F5C\u4E3A\u5168\u5C40\u670D\u52A1\n * 5. \u542F\u7528\u914D\u7F6E\u7F13\u5B58\u4EE5\u63D0\u9AD8\u6027\u80FD\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u5168\u5C40\u914D\u7F6E\u7BA1\u7406\n * 2. \u914D\u7F6E\u6A21\u5757\u96C6\u6210\n * 3. \u914D\u7F6E\u670D\u52A1\u63D0\u4F9B\n * 4. \u914D\u7F6E\u7F13\u5B58\u652F\u6301\n * 5. \u6A21\u5757\u5316\u914D\u7F6E\u52A0\u8F7D\n */\n@Global()\n@Module({\n  imports: [\n    /**\n     * NestJS\u914D\u7F6E\u6A21\u5757\u914D\u7F6E\n     * \u4F7F\u7528NestConfigModule.forRoot\u65B9\u6CD5\u914D\u7F6E\u6839\u6A21\u5757\u6765\u5904\u7406\u914D\u7F6E\u8BBE\u7F6E\u3002\n     * load\u9009\u9879\u7528\u4E8E\u52A0\u8F7D\u4E0D\u540C\u63D0\u4F9B\u8005\u7684\u914D\u7F6E\u6A21\u5757\u3002\n     *\n     * \u914D\u7F6E\u9009\u9879\u8BF4\u660E\uFF1A\n     * - isGlobal: true - \u4F7F\u914D\u7F6E\u6A21\u5757\u5168\u5C40\u53EF\u7528\n     * - cache: true - \u542F\u7528\u914D\u7F6E\u7F13\u5B58\u4EE5\u63D0\u9AD8\u6027\u80FD\n     * - load: [...configs] - \u52A0\u8F7D\u81EA\u5B9A\u4E49\u914D\u7F6E\u6A21\u5757\u6570\u7EC4\n     */\n    NestConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      load: [...configs],\n    }),\n  ],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ae4a325d1848840a334957934456e5a2b19e9fe9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13d9x25z7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13d9x25z7();
var __decorate =
/* istanbul ignore next */
(cov_13d9x25z7().s[0]++,
/* istanbul ignore next */
(cov_13d9x25z7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_13d9x25z7().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_13d9x25z7().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_13d9x25z7().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_13d9x25z7().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_13d9x25z7().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_13d9x25z7().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_13d9x25z7().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_13d9x25z7().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_13d9x25z7().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_13d9x25z7().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_13d9x25z7().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_13d9x25z7().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_13d9x25z7().b[3][0]++;
    cov_13d9x25z7().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_13d9x25z7().b[3][1]++;
    cov_13d9x25z7().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_13d9x25z7().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_13d9x25z7().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_13d9x25z7().b[5][0]++;
        cov_13d9x25z7().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_13d9x25z7().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_13d9x25z7().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_13d9x25z7().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_13d9x25z7().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_13d9x25z7().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_13d9x25z7().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_13d9x25z7().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_13d9x25z7().s[9]++;
  return /* istanbul ignore next */(cov_13d9x25z7().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_13d9x25z7().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_13d9x25z7().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __importDefault =
/* istanbul ignore next */
(cov_13d9x25z7().s[10]++,
/* istanbul ignore next */
(cov_13d9x25z7().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_13d9x25z7().b[10][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_13d9x25z7().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_13d9x25z7().f[1]++;
  cov_13d9x25z7().s[11]++;
  return /* istanbul ignore next */(cov_13d9x25z7().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_13d9x25z7().b[12][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_13d9x25z7().b[11][0]++, mod) :
  /* istanbul ignore next */
  (cov_13d9x25z7().b[11][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_13d9x25z7().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13d9x25z7().s[13]++;
exports.ConfigModule = void 0;
const common_1 =
/* istanbul ignore next */
(cov_13d9x25z7().s[14]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_13d9x25z7().s[15]++, require("@nestjs/config"));
const config_service_1 =
/* istanbul ignore next */
(cov_13d9x25z7().s[16]++, require("./config.service"));
const config_2 =
/* istanbul ignore next */
(cov_13d9x25z7().s[17]++, __importDefault(require("./config")));
/**
 * @module ConfigModule
 * @description
 * IAM系统配置模块，负责管理和提供系统中所有配置信息。
 * 该模块是配置系统的入口点，集成了NestJS的配置模块和自定义配置服务。
 *
 * 主要原理与机制如下：
 * 1. 使用@Global()装饰器使模块全局可用
 * 2. 集成NestJS的ConfigModule进行配置管理
 * 3. 加载自定义配置模块数组
 * 4. 提供ConfigService作为全局服务
 * 5. 启用配置缓存以提高性能
 *
 * 功能与业务规则：
 * 1. 全局配置管理
 * 2. 配置模块集成
 * 3. 配置服务提供
 * 4. 配置缓存支持
 * 5. 模块化配置加载
 */
/* istanbul ignore next */
cov_13d9x25z7().s[18]++;
let ConfigModule = class ConfigModule {};
/* istanbul ignore next */
cov_13d9x25z7().s[19]++;
exports.ConfigModule = ConfigModule;
/* istanbul ignore next */
cov_13d9x25z7().s[20]++;
exports.ConfigModule = ConfigModule = __decorate([(0, common_1.Global)(), (0, common_1.Module)({
  imports: [
  /**
   * NestJS配置模块配置
   * 使用NestConfigModule.forRoot方法配置根模块来处理配置设置。
   * load选项用于加载不同提供者的配置模块。
   *
   * 配置选项说明：
   * - isGlobal: true - 使配置模块全局可用
   * - cache: true - 启用配置缓存以提高性能
   * - load: [...configs] - 加载自定义配置模块数组
   */
  config_1.ConfigModule.forRoot({
    isGlobal: true,
    cache: true,
    load: [...config_2.default]
  })],
  providers: [config_service_1.ConfigService],
  exports: [config_service_1.ConfigService]
})], ConfigModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTNkOXgyNXo3IiwiYWN0dWFsQ292ZXJhZ2UiLCJjb21tb25fMSIsInMiLCJyZXF1aXJlIiwiY29uZmlnXzEiLCJjb25maWdfc2VydmljZV8xIiwiY29uZmlnXzIiLCJfX2ltcG9ydERlZmF1bHQiLCJDb25maWdNb2R1bGUiLCJleHBvcnRzIiwiX19kZWNvcmF0ZSIsIkdsb2JhbCIsIk1vZHVsZSIsImltcG9ydHMiLCJmb3JSb290IiwiaXNHbG9iYWwiLCJjYWNoZSIsImxvYWQiLCJkZWZhdWx0IiwicHJvdmlkZXJzIiwiQ29uZmlnU2VydmljZSJdLCJzb3VyY2VzIjpbIi9ob21lL2FybGlnbGUvVjEvQWlvZml4L2Fpb2ZpeC1haS1zYWFzLXBsYXRmb3JtL3BhY2thZ2VzL2NvbmZpZy9zcmMvY29uZmlnLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHbG9iYWwsIE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IENvbmZpZ01vZHVsZSBhcyBOZXN0Q29uZmlnTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy9jb25maWcnO1xuaW1wb3J0IHsgQ29uZmlnU2VydmljZSB9IGZyb20gJy4vY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IGNvbmZpZ3MgZnJvbSAnLi9jb25maWcnO1xuXG4vKipcbiAqIEBtb2R1bGUgQ29uZmlnTW9kdWxlXG4gKiBAZGVzY3JpcHRpb25cbiAqIElBTeezu+e7n+mFjee9ruaooeWdl++8jOi0n+i0o+euoeeQhuWSjOaPkOS+m+ezu+e7n+S4reaJgOaciemFjee9ruS/oeaBr+OAglxuICog6K+l5qih5Z2X5piv6YWN572u57O757uf55qE5YWl5Y+j54K577yM6ZuG5oiQ5LqGTmVzdEpT55qE6YWN572u5qih5Z2X5ZKM6Ieq5a6a5LmJ6YWN572u5pyN5Yqh44CCXG4gKlxuICog5Li76KaB5Y6f55CG5LiO5py65Yi25aaC5LiL77yaXG4gKiAxLiDkvb/nlKhAR2xvYmFsKCnoo4XppbDlmajkvb/mqKHlnZflhajlsYDlj6/nlKhcbiAqIDIuIOmbhuaIkE5lc3RKU+eahENvbmZpZ01vZHVsZei/m+ihjOmFjee9rueuoeeQhlxuICogMy4g5Yqg6L296Ieq5a6a5LmJ6YWN572u5qih5Z2X5pWw57uEXG4gKiA0LiDmj5DkvptDb25maWdTZXJ2aWNl5L2c5Li65YWo5bGA5pyN5YqhXG4gKiA1LiDlkK/nlKjphY3nva7nvJPlrZjku6Xmj5Dpq5jmgKfog71cbiAqXG4gKiDlip/og73kuI7kuJrliqHop4TliJnvvJpcbiAqIDEuIOWFqOWxgOmFjee9rueuoeeQhlxuICogMi4g6YWN572u5qih5Z2X6ZuG5oiQXG4gKiAzLiDphY3nva7mnI3liqHmj5DkvptcbiAqIDQuIOmFjee9rue8k+WtmOaUr+aMgVxuICogNS4g5qih5Z2X5YyW6YWN572u5Yqg6L29XG4gKi9cbkBHbG9iYWwoKVxuQE1vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICAvKipcbiAgICAgKiBOZXN0SlPphY3nva7mqKHlnZfphY3nva5cbiAgICAgKiDkvb/nlKhOZXN0Q29uZmlnTW9kdWxlLmZvclJvb3Tmlrnms5XphY3nva7moLnmqKHlnZfmnaXlpITnkIbphY3nva7orr7nva7jgIJcbiAgICAgKiBsb2Fk6YCJ6aG555So5LqO5Yqg6L295LiN5ZCM5o+Q5L6b6ICF55qE6YWN572u5qih5Z2X44CCXG4gICAgICpcbiAgICAgKiDphY3nva7pgInpobnor7TmmI7vvJpcbiAgICAgKiAtIGlzR2xvYmFsOiB0cnVlIC0g5L2/6YWN572u5qih5Z2X5YWo5bGA5Y+v55SoXG4gICAgICogLSBjYWNoZTogdHJ1ZSAtIOWQr+eUqOmFjee9rue8k+WtmOS7peaPkOmrmOaAp+iDvVxuICAgICAqIC0gbG9hZDogWy4uLmNvbmZpZ3NdIC0g5Yqg6L296Ieq5a6a5LmJ6YWN572u5qih5Z2X5pWw57uEXG4gICAgICovXG4gICAgTmVzdENvbmZpZ01vZHVsZS5mb3JSb290KHtcbiAgICAgIGlzR2xvYmFsOiB0cnVlLFxuICAgICAgY2FjaGU6IHRydWUsXG4gICAgICBsb2FkOiBbLi4uY29uZmlnc10sXG4gICAgfSksXG4gIF0sXG4gIHByb3ZpZGVyczogW0NvbmZpZ1NlcnZpY2VdLFxuICBleHBvcnRzOiBbQ29uZmlnU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpZ01vZHVsZSB7fVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFHQTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSEEsTUFBQUUsUUFBQTtBQUFBO0FBQUEsQ0FBQUYsYUFBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFDQSxNQUFBQyxRQUFBO0FBQUE7QUFBQSxDQUFBTCxhQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUNBLE1BQUFFLGdCQUFBO0FBQUE7QUFBQSxDQUFBTixhQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUNBLE1BQUFHLFFBQUE7QUFBQTtBQUFBLENBQUFQLGFBQUEsR0FBQUcsQ0FBQSxRQUFBSyxlQUFBLENBQUFKLE9BQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBSixhQUFBLEdBQUFHLENBQUE7QUEwQ08sSUFBTU0sWUFBWSxHQUFsQixNQUFNQSxZQUFZLEdBQUc7QUFBQTtBQUFBVCxhQUFBLEdBQUFHLENBQUE7QUFBZk8sT0FBQSxDQUFBRCxZQUFBLEdBQUFBLFlBQUE7QUFBWTtBQUFBVCxhQUFBLEdBQUFHLENBQUE7dUJBQVpNLFlBQVksR0FBQUUsVUFBQSxFQXRCeEIsSUFBQVQsUUFBQSxDQUFBVSxNQUFNLEdBQUUsRUFDUixJQUFBVixRQUFBLENBQUFXLE1BQU0sRUFBQztFQUNOQyxPQUFPLEVBQUU7RUFDUDs7Ozs7Ozs7OztFQVVBVCxRQUFBLENBQUFJLFlBQWdCLENBQUNNLE9BQU8sQ0FBQztJQUN2QkMsUUFBUSxFQUFFLElBQUk7SUFDZEMsS0FBSyxFQUFFLElBQUk7SUFDWEMsSUFBSSxFQUFFLENBQUMsR0FBR1gsUUFBQSxDQUFBWSxPQUFPO0dBQ2xCLENBQUMsQ0FDSDtFQUNEQyxTQUFTLEVBQUUsQ0FBQ2QsZ0JBQUEsQ0FBQWUsYUFBYSxDQUFDO0VBQzFCWCxPQUFPLEVBQUUsQ0FBQ0osZ0JBQUEsQ0FBQWUsYUFBYTtDQUN4QixDQUFDLEMsRUFDV1osWUFBWSxDQUFHIiwiaWdub3JlTGlzdCI6W119