{"file":"/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts","mappings":"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","names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts"],"sourcesContent":["import { Injectable, OnModuleDestroy } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { ClsService } from 'nestjs-cls';\nimport pino from 'pino';\nimport {\n  ILoggerService,\n  LogContext,\n  LogConfig,\n  LogMetadata,\n} from '../interfaces/logging.interface';\nimport {\n  PinoLoggerConfigService,\n  LogLevel,\n} from './pino-logger-config.service';\nimport { PinoLoggerFactory } from '../factories/pino-logger.factory';\n\n/**\n * @class PinoLoggerService\n * @description\n * 基于Pino的日志服务实现类，提供高性能的结构化日志功能。\n *\n * 主要功能包括：\n * 1. 支持多种日志级别（trace, debug, info, warn, error, fatal）\n * 2. 结构化日志输出（JSON格式）\n * 3. 日志上下文和元数据支持\n * 4. 性能监控和错误追踪\n * 5. 日志配置管理和动态更新\n * 6. 子日志器创建和管理\n * 7. 日志统计和监控\n *\n * @implements {ILoggerService}\n * @implements {OnModuleDestroy}\n */\n@Injectable()\nexport class PinoLoggerService implements ILoggerService, OnModuleDestroy {\n  private logger: pino.Logger = {} as pino.Logger;\n  private stats: {\n    totalLogs: number;\n    logsByLevel: Record<LogLevel, number>;\n    logsByContext: Record<LogContext, number>;\n    totalLogSize: number;\n    lastLogTime?: Date;\n  } = {\n    totalLogs: 0,\n    logsByLevel: {\n      fatal: 0,\n      error: 0,\n      warn: 0,\n      info: 0,\n      debug: 0,\n      trace: 0,\n    },\n    logsByContext: {\n      [LogContext.HTTP_REQUEST]: 0,\n      [LogContext.DATABASE]: 0,\n      [LogContext.BUSINESS]: 0,\n      [LogContext.AUTH]: 0,\n      [LogContext.CONFIG]: 0,\n      [LogContext.CACHE]: 0,\n      [LogContext.EVENT]: 0,\n      [LogContext.SYSTEM]: 0,\n      [LogContext.EXTERNAL]: 0,\n      [LogContext.PERFORMANCE]: 0,\n    },\n    totalLogSize: 0,\n  };\n\n  constructor(\n    private readonly eventEmitter: EventEmitter2,\n    private readonly configService: PinoLoggerConfigService,\n    private readonly loggerFactory: PinoLoggerFactory,\n    private readonly cls: ClsService,\n  ) {\n    this.initializeStats();\n    this.initializeLogger();\n  }\n\n  /**\n   * @method debug\n   * @description 记录调试日志\n   */\n  debug(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('debug', message, context, metadata, error);\n  }\n\n  /**\n   * @method info\n   * @description 记录信息日志\n   */\n  info(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('info', message, context, metadata, error);\n  }\n\n  /**\n   * @method warn\n   * @description 记录警告日志\n   */\n  warn(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('warn', message, context, metadata, error);\n  }\n\n  /**\n   * @method error\n   * @description 记录错误日志\n   */\n  error(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('error', message, context, metadata, error);\n  }\n\n  /**\n   * @method fatal\n   * @description 记录致命错误日志\n   */\n  fatal(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('fatal', message, context, metadata, error);\n  }\n\n  /**\n   * @method trace\n   * @description 记录跟踪日志\n   */\n  trace(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('trace', message, context, metadata, error);\n  }\n\n  /**\n   * @method performance\n   * @description 记录性能日志\n   */\n  performance(\n    operation: string,\n    duration: number,\n    context?: LogContext,\n    metadata?: LogMetadata,\n  ): void {\n    const performanceMetadata: LogMetadata = {\n      ...metadata,\n      operation,\n      duration,\n      type: 'performance',\n    };\n    this.log(\n      'info',\n      `Performance: ${operation} took ${duration}ms`,\n      context || LogContext.PERFORMANCE,\n      performanceMetadata,\n    );\n  }\n\n  /**\n   * @method business\n   * @description 记录业务日志\n   */\n  business(message: string, metadata?: LogMetadata): void {\n    this.log('info', message, LogContext.BUSINESS, metadata);\n  }\n\n  /**\n   * @method security\n   * @description 记录安全日志\n   */\n  security(message: string, metadata?: LogMetadata): void {\n    this.log('warn', message, LogContext.AUTH, metadata);\n  }\n\n  /**\n   * @method child\n   * @description 创建子日志器\n   */\n  child(context: LogContext, metadata?: LogMetadata): ILoggerService {\n    const childLogger = this.loggerFactory.createChildLogger(this.logger, {\n      context,\n      ...metadata,\n    });\n\n    // 创建一个新的PinoLoggerService实例，使用子日志器\n    const childService = new PinoLoggerService(\n      this.eventEmitter,\n      this.configService,\n      this.loggerFactory,\n      this.cls,\n    );\n    (\n      childService as unknown as {\n        logger: pino.Logger;\n        stats: PinoLoggerService['stats'];\n      }\n    ).logger = childLogger;\n    (\n      childService as unknown as {\n        logger: pino.Logger;\n        stats: PinoLoggerService['stats'];\n      }\n    ).stats = this.stats;\n\n    return childService;\n  }\n\n  /**\n   * @method setLevel\n   * @description 设置日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.configService.setLevel(level);\n    this.initializeLogger();\n  }\n\n  /**\n   * @method getLevel\n   * @description 获取日志级别\n   */\n  getLevel(): LogLevel {\n    return this.configService.getLevel();\n  }\n\n  /**\n   * @method updateConfig\n   * @description 更新日志配置\n   */\n  updateConfig(config: Partial<LogConfig>): void {\n    this.configService.updateConfig(config);\n    this.initializeLogger();\n  }\n\n  /**\n   * @method getConfig\n   * @description 获取日志配置\n   */\n  getConfig(): LogConfig {\n    return this.configService.getConfig();\n  }\n\n  /**\n   * @method flush\n   * @description 刷新日志缓冲区\n   */\n  async flush(): Promise<void> {\n    if (this.logger.flush) {\n      await this.logger.flush();\n    }\n  }\n\n  /**\n   * @method close\n   * @description 关闭日志器\n   */\n  async close(): Promise<void> {\n    await this.flush();\n  }\n\n  /**\n   * @method onModuleDestroy\n   * @description 模块销毁时的清理工作\n   */\n  async onModuleDestroy(): Promise<void> {\n    await this.close();\n  }\n\n  /**\n   * @method getStats\n   * @description 获取日志统计信息\n   */\n  getStats(): {\n    totalLogs: number;\n    logsByLevel: Record<LogLevel, number>;\n    logsByContext: Record<LogContext, number>;\n    averageLogSize: number;\n    lastLogTime?: Date;\n  } {\n    return {\n      totalLogs: this.stats.totalLogs,\n      logsByLevel: { ...this.stats.logsByLevel },\n      logsByContext: { ...this.stats.logsByContext },\n      averageLogSize:\n        this.stats.totalLogs > 0\n          ? this.stats.totalLogSize / this.stats.totalLogs\n          : 0,\n      lastLogTime: this.stats.lastLogTime,\n    };\n  }\n\n  /**\n   * @method resetStats\n   * @description 重置日志统计\n   */\n  resetStats(): void {\n    this.initializeStats();\n  }\n\n  // 私有辅助方法\n\n  /**\n   * @private\n   * @method initializeStats\n   * @description 初始化统计信息\n   */\n  private initializeStats(): void {\n    this.stats = {\n      totalLogs: 0,\n      logsByLevel: {\n        trace: 0,\n        debug: 0,\n        info: 0,\n        warn: 0,\n        error: 0,\n        fatal: 0,\n      },\n      logsByContext: {\n        [LogContext.HTTP_REQUEST]: 0,\n        [LogContext.DATABASE]: 0,\n        [LogContext.BUSINESS]: 0,\n        [LogContext.AUTH]: 0,\n        [LogContext.CONFIG]: 0,\n        [LogContext.CACHE]: 0,\n        [LogContext.EVENT]: 0,\n        [LogContext.SYSTEM]: 0,\n        [LogContext.EXTERNAL]: 0,\n        [LogContext.PERFORMANCE]: 0,\n      },\n      totalLogSize: 0,\n    };\n  }\n\n  /**\n   * @private\n   * @method initializeLogger\n   * @description 初始化Pino日志器\n   */\n  private initializeLogger(): void {\n    this.logger = this.loggerFactory.createLogger();\n  }\n\n  /**\n   * @private\n   * @method log\n   * @description 内部日志记录方法\n   */\n  private log(\n    level: LogLevel,\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    const config = this.configService.getConfig();\n\n    // 从CLS获取上下文信息\n    const requestId = this.cls.get('requestId');\n    const tenantId = this.cls.get('tenantId');\n    const userId = this.cls.get('userId');\n\n    const logData: Record<string, unknown> = {\n      message,\n      context: context || LogContext.SYSTEM,\n      timestamp: new Date().toISOString(),\n      requestId,\n      tenantId,\n      userId,\n      ...metadata,\n    };\n\n    if (error) {\n      logData.error = {\n        message: error.message,\n        stack: config.stackTrace ? error.stack : undefined,\n        code: (error as unknown as Record<string, unknown>).code,\n        name: error.name,\n      };\n    }\n\n    // 更新统计信息\n    this.updateStats(level, context || LogContext.SYSTEM, message.length);\n\n    // 记录日志\n    this.logger[level](logData);\n\n    // 发送事件\n    this.eventEmitter.emit('logger.log', {\n      level,\n      message,\n      context: context || LogContext.SYSTEM,\n      metadata,\n      error,\n      timestamp: new Date(),\n    });\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description 更新统计信息\n   */\n  private updateStats(\n    level: LogLevel,\n    context: LogContext,\n    logSize: number,\n  ): void {\n    this.stats.totalLogs++;\n    this.stats.logsByLevel[level]++;\n    this.stats.logsByContext[context]++;\n    this.stats.totalLogSize += logSize;\n    this.stats.lastLogTime = new Date();\n  }\n}\n"],"version":3}