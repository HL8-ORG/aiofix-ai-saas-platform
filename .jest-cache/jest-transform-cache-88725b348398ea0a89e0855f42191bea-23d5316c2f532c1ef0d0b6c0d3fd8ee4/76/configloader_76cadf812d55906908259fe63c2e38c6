f53b63c70d553198ca80eb883918f7cf
"use strict";

/* istanbul ignore next */
function cov_1ff055icyv() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config-loader.ts";
  var hash = "ad8f9815045a7df3f504c2d4ce928ee9d5f843f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config-loader.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 30
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "4": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "6": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "7": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "8": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "9": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "10": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 18
        }
      },
      "11": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 67
        }
      },
      "12": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "13": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 88
        }
      },
      "14": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 73
        }
      },
      "15": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 50
        }
      },
      "16": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 68
        }
      },
      "17": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "deepMerge",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "defineConfig",
        decl: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 27
          }
        },
        loc: {
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 67
      },
      "2": {
        name: "getConfig",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 18
          }
        },
        loc: {
          start: {
            line: 93,
            column: 21
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 93
      },
      "3": {
        name: "resetConfig",
        decl: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 114,
            column: 20
          }
        },
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 114
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 40,
            column: 9
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 23
          }
        }, {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 43
          }
        }, {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 39
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 53
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 23
          }
        }, {
          start: {
            line: 68,
            column: 27
          },
          end: {
            line: 68,
            column: 61
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config-loader.ts",
      mappings: ";;AA0EA,oCAUC;AAsBD,8BAEC;AAoBD,kCAGC;AAnID,qDAAwD;AAGxD;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,SAAS,SAAS,CAChB,MAA+B,EAC/B,MAA+B;IAE/B,MAAM,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,CAAC;IAE7B,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IACE,MAAM,CAAC,GAAG,CAAC;YACX,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ;YAC/B,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAC3B,CAAC;YACD,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CACpB,MAAM,CAAC,GAAG,CAA6B,IAAI,EAAE,EAC9C,MAAM,CAAC,GAAG,CAA4B,CACvC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,IAAI,gBAAgB,GAAuB,EAAE,GAAG,qCAAoB,EAAE,CAAC;AAEvE;;;;;;;;;;;;;;;;;;;;;GAqBG;AACI,KAAK,UAAU,YAAY,CAChC,cAAkC;IAElC,IAAI,CAAC,cAAc,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE,CAAC;QAC1D,MAAM,IAAI,KAAK,CACb,8DAA8D,CAC/D,CAAC;IACJ,CAAC;IAED,gBAAgB,GAAG,MAAM,SAAS,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACvE,CAAC;AAED;;;;;;;;;;;;;;;;;;;GAmBG;AACH,SAAgB,SAAS;IACvB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,gBAAgB,EAAE,CAAC,CAAC;AAChD,CAAC;AAED;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,WAAW;IACzB,gBAAgB,GAAG,EAAE,GAAG,qCAAoB,EAAE,CAAC;IAC/C,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;AACrD,CAAC",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config-loader.ts"],
      sourcesContent: ["import { defaultConfiguration } from './default-config';\nimport { IamConfig } from './config.service';\n\n/**\n * @function deepMerge\n * @description\n * \u6DF1\u5EA6\u5408\u5E76\u5DE5\u5177\u51FD\u6570\uFF0C\u7528\u4E8E\u5408\u5E76\u4E24\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u652F\u6301\u5D4C\u5957\u5BF9\u8C61\u7684\u9012\u5F52\u5408\u5E76\u3002\n * \u8BE5\u51FD\u6570\u662F\u914D\u7F6E\u7CFB\u7EDF\u7684\u6838\u5FC3\u5DE5\u5177\uFF0C\u7528\u4E8E\u5408\u5E76\u9ED8\u8BA4\u914D\u7F6E\u548C\u7528\u6237\u81EA\u5B9A\u4E49\u914D\u7F6E\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26\u521B\u5EFA\u76EE\u6807\u5BF9\u8C61\u7684\u6D45\u62F7\u8D1D\n * 2. \u904D\u5386\u6E90\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\n * 3. \u5BF9\u4E8E\u5D4C\u5957\u5BF9\u8C61\u8FDB\u884C\u9012\u5F52\u5408\u5E76\n * 4. \u5BF9\u4E8E\u57FA\u672C\u7C7B\u578B\u76F4\u63A5\u8986\u76D6\n * 5. \u4FDD\u6301\u6570\u7EC4\u7C7B\u578B\u4E0D\u53D8\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u5BF9\u8C61\u6DF1\u5EA6\u5408\u5E76\n * 2. \u914D\u7F6E\u8986\u76D6\u673A\u5236\n * 3. \u7C7B\u578B\u5B89\u5168\u4FDD\u8BC1\n * 4. \u9012\u5F52\u5904\u7406\u652F\u6301\n *\n * @param {Record<string, unknown>} target - \u76EE\u6807\u5BF9\u8C61\uFF0C\u5C06\u88AB\u5408\u5E76\u7684\u5BF9\u8C61\n * @param {Record<string, unknown>} source - \u6E90\u5BF9\u8C61\uFF0C\u63D0\u4F9B\u8981\u5408\u5E76\u7684\u5C5E\u6027\n * @returns {Record<string, unknown>} \u8FD4\u56DE\u5408\u5E76\u540E\u7684\u65B0\u5BF9\u8C61\n */\nfunction deepMerge(\n  target: Record<string, unknown>,\n  source: Record<string, unknown>,\n): Record<string, unknown> {\n  const result = { ...target };\n\n  for (const key in source) {\n    if (\n      source[key] &&\n      typeof source[key] === 'object' &&\n      !Array.isArray(source[key])\n    ) {\n      result[key] = deepMerge(\n        (result[key] as Record<string, unknown>) || {},\n        source[key] as Record<string, unknown>,\n      );\n    } else {\n      result[key] = source[key];\n    }\n  }\n\n  return result;\n}\n\nlet currentAppConfig: Partial<IamConfig> = { ...defaultConfiguration };\n\n/**\n * @function defineConfig\n * @description\n * \u5B9A\u4E49\u914D\u7F6E\uFF0C\u5C06\u63D0\u4F9B\u7684\u914D\u7F6E\u4E0E\u73B0\u6709\u7684\u9ED8\u8BA4\u914D\u7F6E\u8FDB\u884C\u5408\u5E76\u3002\n * \u8BE5\u51FD\u6570\u662F\u914D\u7F6E\u7CFB\u7EDF\u7684\u6838\u5FC3API\uFF0C\u7528\u4E8E\u52A8\u6001\u66F4\u65B0\u7CFB\u7EDF\u914D\u7F6E\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u9A8C\u8BC1\u63D0\u4F9B\u7684\u914D\u7F6E\u5BF9\u8C61\u662F\u5426\u6709\u6548\n * 2. \u4F7F\u7528deepMerge\u51FD\u6570\u5408\u5E76\u914D\u7F6E\n * 3. \u66F4\u65B0\u5168\u5C40\u914D\u7F6E\u5BF9\u8C61\n * 4. \u652F\u6301\u5F02\u6B65\u914D\u7F6E\u66F4\u65B0\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u914D\u7F6E\u9A8C\u8BC1\u548C\u5408\u5E76\n * 2. \u52A8\u6001\u914D\u7F6E\u66F4\u65B0\n * 3. \u9519\u8BEF\u5904\u7406\u548C\u9A8C\u8BC1\n * 4. \u914D\u7F6E\u5B8C\u6574\u6027\u4FDD\u8BC1\n *\n * @param {Partial<IamConfig>} providedConfig - \u8981\u5408\u5E76\u7684\u914D\u7F6E\u5BF9\u8C61\n * @returns {Promise<void>} \u8FD4\u56DE\u4E00\u4E2APromise\uFF0C\u8868\u793A\u914D\u7F6E\u66F4\u65B0\u8FC7\u7A0B\n * @throws {Error} \u5F53\u63D0\u4F9B\u7684\u914D\u7F6E\u65E0\u6548\u65F6\u629B\u51FA\u9519\u8BEF\n */\nexport async function defineConfig(\n  providedConfig: Partial<IamConfig>,\n): Promise<void> {\n  if (!providedConfig || typeof providedConfig !== 'object') {\n    throw new Error(\n      'Invalid configuration provided. Expected a non-empty object.',\n    );\n  }\n\n  currentAppConfig = await deepMerge(currentAppConfig, providedConfig);\n}\n\n/**\n * @function getConfig\n * @description\n * \u83B7\u53D6\u5F53\u524D\u5E94\u7528\u914D\u7F6E\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u53EA\u8BFB\u7684\u914D\u7F6E\u526F\u672C\u3002\n * \u8BE5\u51FD\u6570\u63D0\u4F9B\u4E86\u5BF9\u7CFB\u7EDF\u5F53\u524D\u914D\u7F6E\u7684\u5B89\u5168\u8BBF\u95EE\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u4F7F\u7528Object.freeze()\u521B\u5EFA\u4E0D\u53EF\u53D8\u914D\u7F6E\u5BF9\u8C61\n * 2. \u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26\u521B\u5EFA\u914D\u7F6E\u5BF9\u8C61\u7684\u6DF1\u62F7\u8D1D\n * 3. \u8FD4\u56DE\u53EA\u8BFB\u7C7B\u578B\uFF0C\u9632\u6B62\u8FD0\u884C\u65F6\u4FEE\u6539\n * 4. \u63D0\u4F9B\u7C7B\u578B\u5B89\u5168\u7684\u914D\u7F6E\u8BBF\u95EE\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u914D\u7F6E\u83B7\u53D6\u548C\u8BBF\u95EE\n * 2. \u914D\u7F6E\u5BF9\u8C61\u4FDD\u62A4\n * 3. \u7C7B\u578B\u5B89\u5168\u4FDD\u8BC1\n * 4. \u914D\u7F6E\u5B8C\u6574\u6027\u4FDD\u8BC1\n *\n * @returns {Readonly<Partial<IamConfig>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u5F53\u524D\u914D\u7F6E\u5BF9\u8C61\n */\nexport function getConfig(): Readonly<Partial<IamConfig>> {\n  return Object.freeze({ ...currentAppConfig });\n}\n\n/**\n * @function resetConfig\n * @description\n * \u91CD\u7F6E\u914D\u7F6E\u5230\u9ED8\u8BA4\u503C\uFF0C\u5C06\u5F53\u524D\u914D\u7F6E\u6062\u590D\u4E3A\u7CFB\u7EDF\u9ED8\u8BA4\u914D\u7F6E\u3002\n * \u8BE5\u51FD\u6570\u7528\u4E8E\u914D\u7F6E\u6062\u590D\u548C\u8C03\u8BD5\u76EE\u7684\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26\u590D\u5236\u9ED8\u8BA4\u914D\u7F6E\n * 2. \u66F4\u65B0\u5168\u5C40\u914D\u7F6E\u5BF9\u8C61\n * 3. \u8BB0\u5F55\u91CD\u7F6E\u64CD\u4F5C\u5230\u63A7\u5236\u53F0\n * 4. \u63D0\u4F9B\u914D\u7F6E\u6062\u590D\u673A\u5236\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u914D\u7F6E\u91CD\u7F6E\u548C\u6062\u590D\n * 2. \u8C03\u8BD5\u652F\u6301\n * 3. \u914D\u7F6E\u56DE\u6EDA\n * 4. \u7CFB\u7EDF\u72B6\u6001\u6062\u590D\n */\nexport function resetConfig(): void {\n  currentAppConfig = { ...defaultConfiguration };\n  console.log('Aiofix IAM Config Reset to Defaults');\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ad8f9815045a7df3f504c2d4ce928ee9d5f843f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ff055icyv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ff055icyv();
cov_1ff055icyv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ff055icyv().s[1]++;
exports.defineConfig = defineConfig;
/* istanbul ignore next */
cov_1ff055icyv().s[2]++;
exports.getConfig = getConfig;
/* istanbul ignore next */
cov_1ff055icyv().s[3]++;
exports.resetConfig = resetConfig;
const default_config_1 =
/* istanbul ignore next */
(cov_1ff055icyv().s[4]++, require("./default-config"));
/**
 * @function deepMerge
 * @description
 * 深度合并工具函数，用于合并两个对象的属性，支持嵌套对象的递归合并。
 * 该函数是配置系统的核心工具，用于合并默认配置和用户自定义配置。
 *
 * 主要原理与机制如下：
 * 1. 使用展开运算符创建目标对象的浅拷贝
 * 2. 遍历源对象的所有属性
 * 3. 对于嵌套对象进行递归合并
 * 4. 对于基本类型直接覆盖
 * 5. 保持数组类型不变
 *
 * 功能与业务规则：
 * 1. 对象深度合并
 * 2. 配置覆盖机制
 * 3. 类型安全保证
 * 4. 递归处理支持
 *
 * @param {Record<string, unknown>} target - 目标对象，将被合并的对象
 * @param {Record<string, unknown>} source - 源对象，提供要合并的属性
 * @returns {Record<string, unknown>} 返回合并后的新对象
 */
function deepMerge(target, source) {
  /* istanbul ignore next */
  cov_1ff055icyv().f[0]++;
  const result =
  /* istanbul ignore next */
  (cov_1ff055icyv().s[5]++, {
    ...target
  });
  /* istanbul ignore next */
  cov_1ff055icyv().s[6]++;
  for (const key in source) {
    /* istanbul ignore next */
    cov_1ff055icyv().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_1ff055icyv().b[1][0]++, source[key]) &&
    /* istanbul ignore next */
    (cov_1ff055icyv().b[1][1]++, typeof source[key] === 'object') &&
    /* istanbul ignore next */
    (cov_1ff055icyv().b[1][2]++, !Array.isArray(source[key]))) {
      /* istanbul ignore next */
      cov_1ff055icyv().b[0][0]++;
      cov_1ff055icyv().s[8]++;
      result[key] = deepMerge(
      /* istanbul ignore next */
      (cov_1ff055icyv().b[2][0]++, result[key]) ||
      /* istanbul ignore next */
      (cov_1ff055icyv().b[2][1]++, {}), source[key]);
    } else {
      /* istanbul ignore next */
      cov_1ff055icyv().b[0][1]++;
      cov_1ff055icyv().s[9]++;
      result[key] = source[key];
    }
  }
  /* istanbul ignore next */
  cov_1ff055icyv().s[10]++;
  return result;
}
let currentAppConfig =
/* istanbul ignore next */
(cov_1ff055icyv().s[11]++, {
  ...default_config_1.defaultConfiguration
});
/**
 * @function defineConfig
 * @description
 * 定义配置，将提供的配置与现有的默认配置进行合并。
 * 该函数是配置系统的核心API，用于动态更新系统配置。
 *
 * 主要原理与机制如下：
 * 1. 验证提供的配置对象是否有效
 * 2. 使用deepMerge函数合并配置
 * 3. 更新全局配置对象
 * 4. 支持异步配置更新
 *
 * 功能与业务规则：
 * 1. 配置验证和合并
 * 2. 动态配置更新
 * 3. 错误处理和验证
 * 4. 配置完整性保证
 *
 * @param {Partial<IamConfig>} providedConfig - 要合并的配置对象
 * @returns {Promise<void>} 返回一个Promise，表示配置更新过程
 * @throws {Error} 当提供的配置无效时抛出错误
 */
async function defineConfig(providedConfig) {
  /* istanbul ignore next */
  cov_1ff055icyv().f[1]++;
  cov_1ff055icyv().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1ff055icyv().b[4][0]++, !providedConfig) ||
  /* istanbul ignore next */
  (cov_1ff055icyv().b[4][1]++, typeof providedConfig !== 'object')) {
    /* istanbul ignore next */
    cov_1ff055icyv().b[3][0]++;
    cov_1ff055icyv().s[13]++;
    throw new Error('Invalid configuration provided. Expected a non-empty object.');
  } else
  /* istanbul ignore next */
  {
    cov_1ff055icyv().b[3][1]++;
  }
  cov_1ff055icyv().s[14]++;
  currentAppConfig = await deepMerge(currentAppConfig, providedConfig);
}
/**
 * @function getConfig
 * @description
 * 获取当前应用配置，返回一个只读的配置副本。
 * 该函数提供了对系统当前配置的安全访问。
 *
 * 主要原理与机制如下：
 * 1. 使用Object.freeze()创建不可变配置对象
 * 2. 使用展开运算符创建配置对象的深拷贝
 * 3. 返回只读类型，防止运行时修改
 * 4. 提供类型安全的配置访问
 *
 * 功能与业务规则：
 * 1. 配置获取和访问
 * 2. 配置对象保护
 * 3. 类型安全保证
 * 4. 配置完整性保证
 *
 * @returns {Readonly<Partial<IamConfig>>} 返回只读的当前配置对象
 */
function getConfig() {
  /* istanbul ignore next */
  cov_1ff055icyv().f[2]++;
  cov_1ff055icyv().s[15]++;
  return Object.freeze({
    ...currentAppConfig
  });
}
/**
 * @function resetConfig
 * @description
 * 重置配置到默认值，将当前配置恢复为系统默认配置。
 * 该函数用于配置恢复和调试目的。
 *
 * 主要原理与机制如下：
 * 1. 使用展开运算符复制默认配置
 * 2. 更新全局配置对象
 * 3. 记录重置操作到控制台
 * 4. 提供配置恢复机制
 *
 * 功能与业务规则：
 * 1. 配置重置和恢复
 * 2. 调试支持
 * 3. 配置回滚
 * 4. 系统状态恢复
 */
function resetConfig() {
  /* istanbul ignore next */
  cov_1ff055icyv().f[3]++;
  cov_1ff055icyv().s[16]++;
  currentAppConfig = {
    ...default_config_1.defaultConfiguration
  };
  /* istanbul ignore next */
  cov_1ff055icyv().s[17]++;
  console.log('Aiofix IAM Config Reset to Defaults');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,