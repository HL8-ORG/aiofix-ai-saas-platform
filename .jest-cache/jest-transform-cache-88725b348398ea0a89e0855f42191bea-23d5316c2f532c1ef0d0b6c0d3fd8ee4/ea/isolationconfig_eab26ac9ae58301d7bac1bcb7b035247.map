{"version":3,"names":["cov_h5mfz9s19","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","IsolationStrategy","exports","IsolationConfigService","constructor","configService","config","loadConfig","strategy","get","defaultTenantId","databaseLevel","tenantDbPrefix","platformDbName","eventsDbName","aiVectorsDbName","schemaLevel","tenantSchemaPrefix","sharedSchemaName","tableLevel","enableRLS","tenantIdField","autoAddTenantCondition","getConfig","getStrategy","isDatabaseLevel","DATABASE_LEVEL","isSchemaLevel","SCHEMA_LEVEL","isTableLevel","TABLE_LEVEL","getTenantDatabaseName","tenantId","getTenantSchemaName","getPlatformDatabaseName","getEventsDatabaseName","getAiVectorsDatabaseName","getTenantIdField","shouldEnableRLS","shouldAutoAddTenantCondition","getDefaultTenantId","validateConfig","Object","values","includes","Error","uuidRegex","test","error","console","getConnectionConfig","database","schema","getQueryModifier","addTenantCondition","query","tableName","toLowerCase","setTenantContext","getTablePrefix"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/isolation.config.ts"],"sourcesContent":["/**\n * @fileoverview 数据库隔离策略配置\n * @description 支持多种数据隔离模式的配置驱动实现\n */\n\nimport { ConfigService } from '@aiofix/config';\n\n/**\n * @enum IsolationStrategy\n * @description 数据隔离策略枚举\n */\nexport enum IsolationStrategy {\n  /** 数据库级隔离：每个租户使用独立数据库 */\n  DATABASE_LEVEL = 'database_level',\n  /** Schema级隔离：每个租户使用独立Schema */\n  SCHEMA_LEVEL = 'schema_level',\n  /** 表级隔离：使用tenant_id字段隔离（默认） */\n  TABLE_LEVEL = 'table_level',\n}\n\n/**\n * @interface IsolationConfig\n * @description 数据隔离配置接口\n */\nexport interface IsolationConfig {\n  /** 隔离策略 */\n  strategy: IsolationStrategy;\n  /** 默认租户ID */\n  defaultTenantId: string;\n  /** 数据库级隔离配置 */\n  databaseLevel: {\n    /** 租户数据库前缀 */\n    tenantDbPrefix: string;\n    /** 平台数据库名称 */\n    platformDbName: string;\n    /** 事件存储数据库名称 */\n    eventsDbName: string;\n    /** AI向量数据库名称 */\n    aiVectorsDbName: string;\n  };\n  /** Schema级隔离配置 */\n  schemaLevel: {\n    /** 租户Schema前缀 */\n    tenantSchemaPrefix: string;\n    /** 共享Schema名称 */\n    sharedSchemaName: string;\n  };\n  /** 表级隔离配置 */\n  tableLevel: {\n    /** 是否启用行级安全策略（RLS） */\n    enableRLS: boolean;\n    /** 租户ID字段名称 */\n    tenantIdField: string;\n    /** 是否自动添加tenant_id条件 */\n    autoAddTenantCondition: boolean;\n  };\n}\n\n/**\n * @class IsolationConfigService\n * @description 数据隔离配置服务\n */\nexport class IsolationConfigService {\n  private config: IsolationConfig;\n\n  constructor(private readonly configService: ConfigService) {\n    this.config = this.loadConfig();\n  }\n\n  /**\n   * @method loadConfig\n   * @description 从环境变量加载隔离配置\n   * @returns {IsolationConfig} 隔离配置\n   */\n  private loadConfig(): IsolationConfig {\n    const strategy =\n      (this.configService.get(\n        'DATA_ISOLATION_STRATEGY',\n      ) as IsolationStrategy) || 'table_level';\n\n    return {\n      strategy,\n      defaultTenantId:\n        this.configService.get('DEFAULT_TENANT_ID') ||\n        '00000000-0000-0000-0000-000000000001',\n      databaseLevel: {\n        tenantDbPrefix:\n          this.configService.get('TENANT_DB_PREFIX') || 'aiofix_tenant_',\n        platformDbName:\n          this.configService.get('PLATFORM_DB_NAME') || 'aiofix_platform',\n        eventsDbName:\n          this.configService.get('EVENTS_DB_NAME') || 'aiofix_events',\n        aiVectorsDbName:\n          this.configService.get('AI_VECTORS_DB_NAME') || 'aiofix_ai_vectors',\n      },\n      schemaLevel: {\n        tenantSchemaPrefix:\n          this.configService.get('TENANT_SCHEMA_PREFIX') || 'tenant_',\n        sharedSchemaName:\n          this.configService.get('SHARED_SCHEMA_NAME') || 'shared',\n      },\n      tableLevel: {\n        enableRLS: this.configService.get('ENABLE_RLS') === 'true',\n        tenantIdField: this.configService.get('TENANT_ID_FIELD') || 'tenant_id',\n        autoAddTenantCondition:\n          this.configService.get('AUTO_ADD_TENANT_CONDITION') === 'true',\n      },\n    };\n  }\n\n  /**\n   * @method getConfig\n   * @description 获取当前隔离配置\n   * @returns {IsolationConfig} 隔离配置\n   */\n  getConfig(): IsolationConfig {\n    return this.config;\n  }\n\n  /**\n   * @method getStrategy\n   * @description 获取当前隔离策略\n   * @returns {IsolationStrategy} 隔离策略\n   */\n  getStrategy(): IsolationStrategy {\n    return this.config.strategy;\n  }\n\n  /**\n   * @method isDatabaseLevel\n   * @description 是否为数据库级隔离\n   * @returns {boolean} 是否为数据库级隔离\n   */\n  isDatabaseLevel(): boolean {\n    return this.config.strategy === IsolationStrategy.DATABASE_LEVEL;\n  }\n\n  /**\n   * @method isSchemaLevel\n   * @description 是否为Schema级隔离\n   * @returns {boolean} 是否为Schema级隔离\n   */\n  isSchemaLevel(): boolean {\n    return this.config.strategy === IsolationStrategy.SCHEMA_LEVEL;\n  }\n\n  /**\n   * @method isTableLevel\n   * @description 是否为表级隔离\n   * @returns {boolean} 是否为表级隔离\n   */\n  isTableLevel(): boolean {\n    return this.config.strategy === IsolationStrategy.TABLE_LEVEL;\n  }\n\n  /**\n   * @method getTenantDatabaseName\n   * @description 获取租户数据库名称\n   * @param {string} tenantId 租户ID\n   * @returns {string} 数据库名称\n   */\n  getTenantDatabaseName(tenantId: string): string {\n    if (this.isDatabaseLevel()) {\n      return `${this.config.databaseLevel.tenantDbPrefix}${tenantId}`;\n    }\n    return this.config.databaseLevel.platformDbName;\n  }\n\n  /**\n   * @method getTenantSchemaName\n   * @description 获取租户Schema名称\n   * @param {string} tenantId 租户ID\n   * @returns {string} Schema名称\n   */\n  getTenantSchemaName(tenantId: string): string {\n    if (this.isSchemaLevel()) {\n      return `${this.config.schemaLevel.tenantSchemaPrefix}${tenantId}`;\n    }\n    return 'public';\n  }\n\n  /**\n   * @method getPlatformDatabaseName\n   * @description 获取平台数据库名称\n   * @returns {string} 数据库名称\n   */\n  getPlatformDatabaseName(): string {\n    return this.config.databaseLevel.platformDbName;\n  }\n\n  /**\n   * @method getEventsDatabaseName\n   * @description 获取事件存储数据库名称\n   * @returns {string} 数据库名称\n   */\n  getEventsDatabaseName(): string {\n    return this.config.databaseLevel.eventsDbName;\n  }\n\n  /**\n   * @method getAiVectorsDatabaseName\n   * @description 获取AI向量数据库名称\n   * @returns {string} 数据库名称\n   */\n  getAiVectorsDatabaseName(): string {\n    return this.config.databaseLevel.aiVectorsDbName;\n  }\n\n  /**\n   * @method getTenantIdField\n   * @description 获取租户ID字段名称\n   * @returns {string} 字段名称\n   */\n  getTenantIdField(): string {\n    return this.config.tableLevel.tenantIdField;\n  }\n\n  /**\n   * @method shouldEnableRLS\n   * @description 是否应该启用行级安全策略\n   * @returns {boolean} 是否启用RLS\n   */\n  shouldEnableRLS(): boolean {\n    return this.config.tableLevel.enableRLS;\n  }\n\n  /**\n   * @method shouldAutoAddTenantCondition\n   * @description 是否应该自动添加租户条件\n   * @returns {boolean} 是否自动添加条件\n   */\n  shouldAutoAddTenantCondition(): boolean {\n    return this.config.tableLevel.autoAddTenantCondition;\n  }\n\n  /**\n   * @method getDefaultTenantId\n   * @description 获取默认租户ID\n   * @returns {string} 默认租户ID\n   */\n  getDefaultTenantId(): string {\n    return this.config.defaultTenantId;\n  }\n\n  /**\n   * @method validateConfig\n   * @description 验证配置的有效性\n   * @returns {boolean} 配置是否有效\n   */\n  validateConfig(): boolean {\n    try {\n      // 验证策略值\n      if (!Object.values(IsolationStrategy).includes(this.config.strategy)) {\n        throw new Error(`Invalid isolation strategy: ${this.config.strategy}`);\n      }\n\n      // 验证UUID格式的租户ID\n      const uuidRegex =\n        /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n      if (!uuidRegex.test(this.config.defaultTenantId)) {\n        throw new Error(\n          `Invalid default tenant ID format: ${this.config.defaultTenantId}`,\n        );\n      }\n\n      // 验证数据库名称\n      if (!this.config.databaseLevel.platformDbName) {\n        throw new Error('Platform database name is required');\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Isolation config validation failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * @method getConnectionConfig\n   * @description 获取数据库连接配置\n   * @param {string} [tenantId] 租户ID，可选\n   * @returns {object} 连接配置\n   */\n  getConnectionConfig(tenantId?: string): {\n    database: string;\n    schema?: string;\n    tenantId?: string;\n  } {\n    const config: any = {};\n\n    if (this.isDatabaseLevel() && tenantId) {\n      config.database = this.getTenantDatabaseName(tenantId);\n      config.tenantId = tenantId;\n    } else if (this.isSchemaLevel() && tenantId) {\n      config.database = this.getPlatformDatabaseName();\n      config.schema = this.getTenantSchemaName(tenantId);\n      config.tenantId = tenantId;\n    } else {\n      config.database = this.getPlatformDatabaseName();\n      if (tenantId) {\n        config.tenantId = tenantId;\n      }\n    }\n\n    return config;\n  }\n\n  /**\n   * @method getQueryModifier\n   * @description 获取查询修改器\n   * @param {string} [tenantId] 租户ID，可选\n   * @returns {object} 查询修改器\n   */\n  getQueryModifier(tenantId?: string): {\n    addTenantCondition: (query: string, tableName: string) => string;\n    setTenantContext: () => string;\n    getTablePrefix: () => string;\n  } {\n    return {\n      addTenantCondition: (query: string, tableName: string) => {\n        if (\n          this.isTableLevel() &&\n          tenantId &&\n          this.shouldAutoAddTenantCondition()\n        ) {\n          const tenantIdField = this.getTenantIdField();\n          if (!query.toLowerCase().includes('where')) {\n            return `${query} WHERE ${tableName}.${tenantIdField} = '${tenantId}'`;\n          } else {\n            return `${query} AND ${tableName}.${tenantIdField} = '${tenantId}'`;\n          }\n        }\n        return query;\n      },\n      setTenantContext: () => {\n        if (this.isTableLevel() && tenantId && this.shouldEnableRLS()) {\n          return `SET app.current_tenant_id = '${tenantId}'`;\n        }\n        return '';\n      },\n      getTablePrefix: () => {\n        if (this.isSchemaLevel() && tenantId) {\n          return `${this.getTenantSchemaName(tenantId)}.`;\n        }\n        return '';\n      },\n    };\n  }\n}\n"],"mappings":"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C,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,K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","ignoreList":[]}