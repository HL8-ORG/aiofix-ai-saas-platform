5c1ba952002d92bb9a032da04fa9b2ab
"use strict";

/* istanbul ignore next */
function cov_1akguy5enw() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/base/event-sourced-aggregate-root.ts";
  var hash = "67edaaea3cf2659bc75fddf96a748953a7c93348";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/base/event-sourced-aggregate-root.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 43
        }
      },
      "2": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "3": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 38
        }
      },
      "4": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 38
        }
      },
      "5": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 31
        }
      },
      "6": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 33
        }
      },
      "7": {
        start: {
          line: 219,
          column: 0
        },
        end: {
          line: 219,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 18
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 51
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 92
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 172
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 28
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 215
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/base/event-sourced-aggregate-root.ts",
      mappings: ";;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AACH,MAAsB,yBAAyB;IAA/C;QACE;;;WAGG;QACK,iBAAY,GAAkB,EAAE,CAAC;IAqK3C,CAAC;IAnKC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiCG;IACO,cAAc,CAAC,KAAkB;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiCG;IACI,eAAe;QACpB,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc;IAC/C,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCG;IACI,iBAAiB;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCG;IACI,qBAAqB;QAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;CACF;AA1KD,8DA0KC",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/base/event-sourced-aggregate-root.ts"],
      sourcesContent: ["import { DomainEvent } from '../domain-event';\n\n/**\n * @class EventSourcedAggregateRoot\n * @description\n * \u4E8B\u4EF6\u6EAF\u6E90\u805A\u5408\u6839\u57FA\u7C7B\uFF0C\u8D1F\u8D23\u7BA1\u7406\u805A\u5408\u6839\u7684\u4E8B\u4EF6\u6536\u96C6\u3001\u5B58\u50A8\u548C\u91CD\u653E\u529F\u80FD\u3002\n *\n * \u4E8B\u4EF6\u6EAF\u6E90\u804C\u8D23\uFF1A\n * 1. \u6536\u96C6\u805A\u5408\u6839\u4EA7\u751F\u7684\u9886\u57DF\u4E8B\u4EF6\n * 2. \u7BA1\u7406\u672A\u63D0\u4EA4\u4E8B\u4EF6\u7684\u751F\u547D\u5468\u671F\n * 3. \u652F\u6301\u4E8B\u4EF6\u7684\u91CD\u653E\u548C\u72B6\u6001\u91CD\u5EFA\n * 4. \u63D0\u4F9B\u4E8B\u4EF6\u63D0\u4EA4\u548C\u6E05\u7406\u673A\u5236\n *\n * \u4E8B\u4EF6\u7BA1\u7406\u673A\u5236\uFF1A\n * 1. \u4E8B\u4EF6\u6536\u96C6\uFF1A\u901A\u8FC7addDomainEvent\u65B9\u6CD5\u6536\u96C6\u4E1A\u52A1\u4E8B\u4EF6\n * 2. \u4E8B\u4EF6\u5B58\u50A8\uFF1A\u7EF4\u62A4\u672A\u63D0\u4EA4\u4E8B\u4EF6\u7684\u5185\u90E8\u5217\u8868\n * 3. \u4E8B\u4EF6\u63D0\u4EA4\uFF1A\u901A\u8FC7markEventsAsCommitted\u6807\u8BB0\u4E8B\u4EF6\u5DF2\u63D0\u4EA4\n * 4. \u4E8B\u4EF6\u6E05\u7406\uFF1A\u901A\u8FC7clearDomainEvents\u6E05\u7406\u5DF2\u5904\u7406\u4E8B\u4EF6\n *\n * \u8BBE\u8BA1\u539F\u5219\uFF1A\n * 1. \u6240\u6709\u4E8B\u4EF6\u6EAF\u6E90\u805A\u5408\u6839\u90FD\u5E94\u8BE5\u7EE7\u627F\u6B64\u7C7B\n * 2. \u63D0\u4F9B\u7EDF\u4E00\u7684\u4E8B\u4EF6\u7BA1\u7406\u63A5\u53E3\u548C\u884C\u4E3A\n * 3. \u652F\u6301\u4E8B\u4EF6\u9A71\u52A8\u67B6\u6784\u7684\u5B8C\u6574\u5B9E\u73B0\n * 4. \u786E\u4FDD\u4E8B\u4EF6\u7684\u4E00\u81F4\u6027\u548C\u5B8C\u6574\u6027\n * 5. \u4E3A\u4E8B\u4EF6\u5B58\u50A8\u548C\u91CD\u653E\u63D0\u4F9B\u57FA\u7840\u652F\u6301\n *\n * @property {DomainEvent[]} domainEvents \u672A\u63D0\u4EA4\u7684\u9886\u57DF\u4E8B\u4EF6\u5217\u8868\n *\n * @example\n * ```typescript\n * export class UserAggregate extends EventSourcedAggregateRoot {\n *   constructor(private userId: string) {\n *     super();\n *   }\n *\n *   createUser(email: string, tenantId: string): void {\n *     // \u4E1A\u52A1\u903B\u8F91\n *     this.addDomainEvent(new UserCreatedEvent(this.userId, email, tenantId));\n *   }\n *\n *   // \u83B7\u53D6\u672A\u63D0\u4EA4\u4E8B\u4EF6\n *   getUncommittedEvents(): DomainEvent[] {\n *     return this.getDomainEvents();\n *   }\n * }\n * ```\n * @since 1.0.0\n */\nexport abstract class EventSourcedAggregateRoot {\n  /**\n   * \u672A\u63D0\u4EA4\u7684\u9886\u57DF\u4E8B\u4EF6\u5217\u8868\n   * \u7528\u4E8E\u6536\u96C6\u805A\u5408\u6839\u5728\u4E1A\u52A1\u64CD\u4F5C\u4E2D\u4EA7\u751F\u7684\u6240\u6709\u4E8B\u4EF6\n   */\n  private domainEvents: DomainEvent[] = [];\n\n  /**\n   * @method addDomainEvent\n   * @description\n   * \u6DFB\u52A0\u9886\u57DF\u4E8B\u4EF6\u5230\u672A\u63D0\u4EA4\u4E8B\u4EF6\u5217\u8868\u3002\u6B64\u65B9\u6CD5\u7528\u4E8E\u5728\u4E1A\u52A1\u64CD\u4F5C\u4E2D\u6536\u96C6\u4EA7\u751F\u7684\u9886\u57DF\u4E8B\u4EF6\u3002\n   *\n   * \u529F\u80FD\u4E0E\u804C\u8D23\uFF1A\n   * 1. \u5C06\u65B0\u4EA7\u751F\u7684\u9886\u57DF\u4E8B\u4EF6\u6DFB\u52A0\u5230\u5185\u90E8\u4E8B\u4EF6\u5217\u8868\n   * 2. \u786E\u4FDD\u4E8B\u4EF6\u5728\u4E8B\u52A1\u63D0\u4EA4\u524D\u88AB\u6B63\u786E\u6536\u96C6\n   * 3. \u652F\u6301\u591A\u4E2A\u4E8B\u4EF6\u5728\u540C\u4E00\u4E2A\u4E1A\u52A1\u64CD\u4F5C\u4E2D\u4EA7\u751F\n   * 4. \u4E3A\u4E8B\u4EF6\u5B58\u50A8\u548C\u53D1\u5E03\u63D0\u4F9B\u6570\u636E\u6E90\n   *\n   * \u4F7F\u7528\u573A\u666F\uFF1A\n   * 1. \u805A\u5408\u6839\u6267\u884C\u4E1A\u52A1\u65B9\u6CD5\u65F6\u4EA7\u751F\u4E8B\u4EF6\n   * 2. \u72B6\u6001\u53D8\u66F4\u9700\u8981\u901A\u77E5\u5176\u4ED6\u805A\u5408\u6839\n   * 3. \u9700\u8981\u8BB0\u5F55\u4E1A\u52A1\u64CD\u4F5C\u7684\u5BA1\u8BA1\u65E5\u5FD7\n   * 4. \u89E6\u53D1\u540E\u7EED\u7684\u4E1A\u52A1\u6D41\u7A0B\n   *\n   * @param {DomainEvent} event \u8981\u6DFB\u52A0\u7684\u9886\u57DF\u4E8B\u4EF6\n   * @returns {void}\n   * @throws {Error} \u5F53\u4E8B\u4EF6\u4E3Anull\u6216undefined\u65F6\u629B\u51FA\u9519\u8BEF\n   * @protected\n   *\n   * @example\n   * ```typescript\n   * // \u5728\u4E1A\u52A1\u65B9\u6CD5\u4E2D\u6DFB\u52A0\u4E8B\u4EF6\n   * createUser(email: string, tenantId: string): void {\n   *   // \u6267\u884C\u4E1A\u52A1\u903B\u8F91\n   *   const user = new User(email, tenantId);\n   *\n   *   // \u6DFB\u52A0\u9886\u57DF\u4E8B\u4EF6\n   *   this.addDomainEvent(new UserCreatedEvent(user.id, email, tenantId));\n   * }\n   * ```\n   */\n  protected addDomainEvent(event: DomainEvent): void {\n    this.domainEvents.push(event);\n  }\n\n  /**\n   * @method getDomainEvents\n   * @description\n   * \u83B7\u53D6\u805A\u5408\u6839\u7684\u6240\u6709\u672A\u63D0\u4EA4\u9886\u57DF\u4E8B\u4EF6\u3002\u6B64\u65B9\u6CD5\u7528\u4E8E\u5728\u4E8B\u52A1\u63D0\u4EA4\u524D\u83B7\u53D6\u6240\u6709\u5F85\u5904\u7406\u7684\u4E8B\u4EF6\u3002\n   *\n   * \u529F\u80FD\u4E0E\u804C\u8D23\uFF1A\n   * 1. \u8FD4\u56DE\u805A\u5408\u6839\u5F53\u524D\u6536\u96C6\u7684\u6240\u6709\u672A\u63D0\u4EA4\u4E8B\u4EF6\n   * 2. \u4E3A\u4E8B\u4EF6\u5B58\u50A8\u548C\u53D1\u5E03\u63D0\u4F9B\u4E8B\u4EF6\u5217\u8868\n   * 3. \u652F\u6301\u4E8B\u4EF6\u9A71\u52A8\u67B6\u6784\u7684\u4E8B\u4EF6\u5904\u7406\u6D41\u7A0B\n   * 4. \u786E\u4FDD\u4E8B\u4EF6\u5728\u4E8B\u52A1\u8FB9\u754C\u5185\u88AB\u6B63\u786E\u5904\u7406\n   *\n   * \u4F7F\u7528\u573A\u666F\uFF1A\n   * 1. \u4E8B\u52A1\u63D0\u4EA4\u524D\u83B7\u53D6\u6240\u6709\u5F85\u5904\u7406\u4E8B\u4EF6\n   * 2. \u4E8B\u4EF6\u5B58\u50A8\u670D\u52A1\u4FDD\u5B58\u4E8B\u4EF6\u5230\u6570\u636E\u5E93\n   * 3. \u4E8B\u4EF6\u603B\u7EBF\u53D1\u5E03\u4E8B\u4EF6\u5230\u6D88\u606F\u961F\u5217\n   * 4. \u4E8B\u4EF6\u5904\u7406\u5668\u5904\u7406\u4E1A\u52A1\u903B\u8F91\n   *\n   * @returns {DomainEvent[]} \u672A\u63D0\u4EA4\u7684\u9886\u57DF\u4E8B\u4EF6\u5217\u8868\uFF0C\u8FD4\u56DE\u526F\u672C\u4EE5\u907F\u514D\u5916\u90E8\u4FEE\u6539\n   *\n   * @example\n   * ```typescript\n   * // \u5728\u4E8B\u52A1\u63D0\u4EA4\u524D\u83B7\u53D6\u4E8B\u4EF6\n   * const events = aggregate.getDomainEvents();\n   *\n   * // \u4FDD\u5B58\u5230\u4E8B\u4EF6\u5B58\u50A8\n   * await eventStore.saveEvents(aggregateId, events, expectedVersion);\n   *\n   * // \u53D1\u5E03\u5230\u4E8B\u4EF6\u603B\u7EBF\n   * await eventBus.publishAll(events);\n   *\n   * // \u6807\u8BB0\u4E8B\u4EF6\u5DF2\u63D0\u4EA4\n   * aggregate.markEventsAsCommitted();\n   * ```\n   */\n  public getDomainEvents(): DomainEvent[] {\n    return [...this.domainEvents]; // \u8FD4\u56DE\u526F\u672C\u4EE5\u907F\u514D\u5916\u90E8\u4FEE\u6539\n  }\n\n  /**\n   * @method clearDomainEvents\n   * @description\n   * \u6E05\u9664\u805A\u5408\u6839\u7684\u6240\u6709\u672A\u63D0\u4EA4\u9886\u57DF\u4E8B\u4EF6\u3002\u6B64\u65B9\u6CD5\u7528\u4E8E\u5728\u4E8B\u4EF6\u5904\u7406\u5B8C\u6210\u540E\u6E05\u7406\u5185\u90E8\u4E8B\u4EF6\u5217\u8868\u3002\n   *\n   * \u529F\u80FD\u4E0E\u804C\u8D23\uFF1A\n   * 1. \u6E05\u7A7A\u805A\u5408\u6839\u5185\u90E8\u7684\u672A\u63D0\u4EA4\u4E8B\u4EF6\u5217\u8868\n   * 2. \u91CA\u653E\u4E8B\u4EF6\u5BF9\u8C61\u5360\u7528\u7684\u5185\u5B58\u7A7A\u95F4\n   * 3. \u4E3A\u4E0B\u4E00\u6B21\u4E1A\u52A1\u64CD\u4F5C\u51C6\u5907\u5E72\u51C0\u7684\u72B6\u6001\n   * 4. \u9632\u6B62\u4E8B\u4EF6\u91CD\u590D\u5904\u7406\n   *\n   * \u4F7F\u7528\u573A\u666F\uFF1A\n   * 1. \u4E8B\u4EF6\u6210\u529F\u4FDD\u5B58\u5230\u4E8B\u4EF6\u5B58\u50A8\u540E\n   * 2. \u4E8B\u4EF6\u6210\u529F\u53D1\u5E03\u5230\u6D88\u606F\u961F\u5217\u540E\n   * 3. \u4E8B\u52A1\u63D0\u4EA4\u6210\u529F\u540E\n   * 4. \u805A\u5408\u6839\u72B6\u6001\u91CD\u7F6E\u65F6\n   *\n   * \u6CE8\u610F\u4E8B\u9879\uFF1A\n   * 1. \u53EA\u6709\u5728\u786E\u8BA4\u4E8B\u4EF6\u5DF2\u6B63\u786E\u5904\u7406\u540E\u624D\u80FD\u8C03\u7528\u6B64\u65B9\u6CD5\n   * 2. \u8C03\u7528\u540E\u65E0\u6CD5\u6062\u590D\u5DF2\u6E05\u9664\u7684\u4E8B\u4EF6\n   * 3. \u5EFA\u8BAE\u5728\u4E8B\u52A1\u63D0\u4EA4\u6210\u529F\u540E\u8C03\u7528\n   *\n   * @returns {void}\n   *\n   * @example\n   * ```typescript\n   * // \u5728\u4E8B\u4EF6\u5904\u7406\u5B8C\u6210\u540E\u6E05\u9664\u4E8B\u4EF6\n   * try {\n   *   const events = aggregate.getDomainEvents();\n   *   await eventStore.saveEvents(aggregateId, events, expectedVersion);\n   *   await eventBus.publishAll(events);\n   *\n   *   // \u4E8B\u4EF6\u5904\u7406\u6210\u529F\uFF0C\u6E05\u9664\u4E8B\u4EF6\u5217\u8868\n   *   aggregate.clearDomainEvents();\n   * } catch (error) {\n   *   // \u4E8B\u4EF6\u5904\u7406\u5931\u8D25\uFF0C\u4FDD\u7559\u4E8B\u4EF6\u5217\u8868\u4EE5\u4FBF\u91CD\u8BD5\n   *   throw error;\n   * }\n   * ```\n   */\n  public clearDomainEvents(): void {\n    this.domainEvents = [];\n  }\n\n  /**\n   * @method markEventsAsCommitted\n   * @description\n   * \u6807\u8BB0\u6240\u6709\u672A\u63D0\u4EA4\u4E8B\u4EF6\u4E3A\u5DF2\u63D0\u4EA4\u72B6\u6001\u3002\u6B64\u65B9\u6CD5\u7528\u4E8E\u5728\u4E8B\u4EF6\u6210\u529F\u5904\u7406\u540E\u66F4\u65B0\u805A\u5408\u6839\u7684\u72B6\u6001\u3002\n   *\n   * \u529F\u80FD\u4E0E\u804C\u8D23\uFF1A\n   * 1. \u6807\u8BB0\u805A\u5408\u6839\u7684\u6240\u6709\u4E8B\u4EF6\u4E3A\u5DF2\u63D0\u4EA4\u72B6\u6001\n   * 2. \u6E05\u9664\u5185\u90E8\u672A\u63D0\u4EA4\u4E8B\u4EF6\u5217\u8868\n   * 3. \u66F4\u65B0\u805A\u5408\u6839\u7684\u5185\u90E8\u72B6\u6001\n   * 4. \u4E3A\u4E0B\u4E00\u6B21\u4E1A\u52A1\u64CD\u4F5C\u51C6\u5907\u5E72\u51C0\u7684\u72B6\u6001\n   *\n   * \u4F7F\u7528\u573A\u666F\uFF1A\n   * 1. \u4E8B\u4EF6\u6210\u529F\u4FDD\u5B58\u5230\u4E8B\u4EF6\u5B58\u50A8\u540E\n   * 2. \u4E8B\u4EF6\u6210\u529F\u53D1\u5E03\u5230\u6D88\u606F\u961F\u5217\u540E\n   * 3. \u4E8B\u52A1\u6210\u529F\u63D0\u4EA4\u540E\n   * 4. \u805A\u5408\u6839\u72B6\u6001\u540C\u6B65\u5B8C\u6210\u540E\n   *\n   * \u4E0EclearDomainEvents\u7684\u533A\u522B\uFF1A\n   * 1. markEventsAsCommitted\u8BED\u4E49\u66F4\u660E\u786E\uFF0C\u8868\u793A\u4E8B\u4EF6\u5DF2\u6210\u529F\u5904\u7406\n   * 2. clearDomainEvents\u53EA\u662F\u6E05\u9664\u4E8B\u4EF6\uFF0C\u4E0D\u8868\u793A\u5904\u7406\u72B6\u6001\n   * 3. \u5EFA\u8BAE\u5728\u4E8B\u4EF6\u5904\u7406\u6210\u529F\u540E\u4F7F\u7528markEventsAsCommitted\n   *\n   * @returns {void}\n   *\n   * @example\n   * ```typescript\n   * // \u5728\u4E8B\u4EF6\u5904\u7406\u6210\u529F\u540E\u6807\u8BB0\u4E3A\u5DF2\u63D0\u4EA4\n   * try {\n   *   const events = aggregate.getDomainEvents();\n   *   await eventStore.saveEvents(aggregateId, events, expectedVersion);\n   *   await eventBus.publishAll(events);\n   *\n   *   // \u6807\u8BB0\u4E8B\u4EF6\u5DF2\u63D0\u4EA4\n   *   aggregate.markEventsAsCommitted();\n   * } catch (error) {\n   *   // \u4E8B\u4EF6\u5904\u7406\u5931\u8D25\uFF0C\u4E0D\u6807\u8BB0\u4E3A\u5DF2\u63D0\u4EA4\n   *   throw error;\n   * }\n   * ```\n   */\n  public markEventsAsCommitted(): void {\n    this.clearDomainEvents();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "67edaaea3cf2659bc75fddf96a748953a7c93348"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1akguy5enw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1akguy5enw();
cov_1akguy5enw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1akguy5enw().s[1]++;
exports.EventSourcedAggregateRoot = void 0;
/**
 * @class EventSourcedAggregateRoot
 * @description
 * 事件溯源聚合根基类，负责管理聚合根的事件收集、存储和重放功能。
 *
 * 事件溯源职责：
 * 1. 收集聚合根产生的领域事件
 * 2. 管理未提交事件的生命周期
 * 3. 支持事件的重放和状态重建
 * 4. 提供事件提交和清理机制
 *
 * 事件管理机制：
 * 1. 事件收集：通过addDomainEvent方法收集业务事件
 * 2. 事件存储：维护未提交事件的内部列表
 * 3. 事件提交：通过markEventsAsCommitted标记事件已提交
 * 4. 事件清理：通过clearDomainEvents清理已处理事件
 *
 * 设计原则：
 * 1. 所有事件溯源聚合根都应该继承此类
 * 2. 提供统一的事件管理接口和行为
 * 3. 支持事件驱动架构的完整实现
 * 4. 确保事件的一致性和完整性
 * 5. 为事件存储和重放提供基础支持
 *
 * @property {DomainEvent[]} domainEvents 未提交的领域事件列表
 *
 * @example
 * ```typescript
 * export class UserAggregate extends EventSourcedAggregateRoot {
 *   constructor(private userId: string) {
 *     super();
 *   }
 *
 *   createUser(email: string, tenantId: string): void {
 *     // 业务逻辑
 *     this.addDomainEvent(new UserCreatedEvent(this.userId, email, tenantId));
 *   }
 *
 *   // 获取未提交事件
 *   getUncommittedEvents(): DomainEvent[] {
 *     return this.getDomainEvents();
 *   }
 * }
 * ```
 * @since 1.0.0
 */
class EventSourcedAggregateRoot {
  constructor() {
    /* istanbul ignore next */
    cov_1akguy5enw().f[0]++;
    cov_1akguy5enw().s[2]++;
    /**
     * 未提交的领域事件列表
     * 用于收集聚合根在业务操作中产生的所有事件
     */
    this.domainEvents = [];
  }
  /**
   * @method addDomainEvent
   * @description
   * 添加领域事件到未提交事件列表。此方法用于在业务操作中收集产生的领域事件。
   *
   * 功能与职责：
   * 1. 将新产生的领域事件添加到内部事件列表
   * 2. 确保事件在事务提交前被正确收集
   * 3. 支持多个事件在同一个业务操作中产生
   * 4. 为事件存储和发布提供数据源
   *
   * 使用场景：
   * 1. 聚合根执行业务方法时产生事件
   * 2. 状态变更需要通知其他聚合根
   * 3. 需要记录业务操作的审计日志
   * 4. 触发后续的业务流程
   *
   * @param {DomainEvent} event 要添加的领域事件
   * @returns {void}
   * @throws {Error} 当事件为null或undefined时抛出错误
   * @protected
   *
   * @example
   * ```typescript
   * // 在业务方法中添加事件
   * createUser(email: string, tenantId: string): void {
   *   // 执行业务逻辑
   *   const user = new User(email, tenantId);
   *
   *   // 添加领域事件
   *   this.addDomainEvent(new UserCreatedEvent(user.id, email, tenantId));
   * }
   * ```
   */
  addDomainEvent(event) {
    /* istanbul ignore next */
    cov_1akguy5enw().f[1]++;
    cov_1akguy5enw().s[3]++;
    this.domainEvents.push(event);
  }
  /**
   * @method getDomainEvents
   * @description
   * 获取聚合根的所有未提交领域事件。此方法用于在事务提交前获取所有待处理的事件。
   *
   * 功能与职责：
   * 1. 返回聚合根当前收集的所有未提交事件
   * 2. 为事件存储和发布提供事件列表
   * 3. 支持事件驱动架构的事件处理流程
   * 4. 确保事件在事务边界内被正确处理
   *
   * 使用场景：
   * 1. 事务提交前获取所有待处理事件
   * 2. 事件存储服务保存事件到数据库
   * 3. 事件总线发布事件到消息队列
   * 4. 事件处理器处理业务逻辑
   *
   * @returns {DomainEvent[]} 未提交的领域事件列表，返回副本以避免外部修改
   *
   * @example
   * ```typescript
   * // 在事务提交前获取事件
   * const events = aggregate.getDomainEvents();
   *
   * // 保存到事件存储
   * await eventStore.saveEvents(aggregateId, events, expectedVersion);
   *
   * // 发布到事件总线
   * await eventBus.publishAll(events);
   *
   * // 标记事件已提交
   * aggregate.markEventsAsCommitted();
   * ```
   */
  getDomainEvents() {
    /* istanbul ignore next */
    cov_1akguy5enw().f[2]++;
    cov_1akguy5enw().s[4]++;
    return [...this.domainEvents]; // 返回副本以避免外部修改
  }
  /**
   * @method clearDomainEvents
   * @description
   * 清除聚合根的所有未提交领域事件。此方法用于在事件处理完成后清理内部事件列表。
   *
   * 功能与职责：
   * 1. 清空聚合根内部的未提交事件列表
   * 2. 释放事件对象占用的内存空间
   * 3. 为下一次业务操作准备干净的状态
   * 4. 防止事件重复处理
   *
   * 使用场景：
   * 1. 事件成功保存到事件存储后
   * 2. 事件成功发布到消息队列后
   * 3. 事务提交成功后
   * 4. 聚合根状态重置时
   *
   * 注意事项：
   * 1. 只有在确认事件已正确处理后才能调用此方法
   * 2. 调用后无法恢复已清除的事件
   * 3. 建议在事务提交成功后调用
   *
   * @returns {void}
   *
   * @example
   * ```typescript
   * // 在事件处理完成后清除事件
   * try {
   *   const events = aggregate.getDomainEvents();
   *   await eventStore.saveEvents(aggregateId, events, expectedVersion);
   *   await eventBus.publishAll(events);
   *
   *   // 事件处理成功，清除事件列表
   *   aggregate.clearDomainEvents();
   * } catch (error) {
   *   // 事件处理失败，保留事件列表以便重试
   *   throw error;
   * }
   * ```
   */
  clearDomainEvents() {
    /* istanbul ignore next */
    cov_1akguy5enw().f[3]++;
    cov_1akguy5enw().s[5]++;
    this.domainEvents = [];
  }
  /**
   * @method markEventsAsCommitted
   * @description
   * 标记所有未提交事件为已提交状态。此方法用于在事件成功处理后更新聚合根的状态。
   *
   * 功能与职责：
   * 1. 标记聚合根的所有事件为已提交状态
   * 2. 清除内部未提交事件列表
   * 3. 更新聚合根的内部状态
   * 4. 为下一次业务操作准备干净的状态
   *
   * 使用场景：
   * 1. 事件成功保存到事件存储后
   * 2. 事件成功发布到消息队列后
   * 3. 事务成功提交后
   * 4. 聚合根状态同步完成后
   *
   * 与clearDomainEvents的区别：
   * 1. markEventsAsCommitted语义更明确，表示事件已成功处理
   * 2. clearDomainEvents只是清除事件，不表示处理状态
   * 3. 建议在事件处理成功后使用markEventsAsCommitted
   *
   * @returns {void}
   *
   * @example
   * ```typescript
   * // 在事件处理成功后标记为已提交
   * try {
   *   const events = aggregate.getDomainEvents();
   *   await eventStore.saveEvents(aggregateId, events, expectedVersion);
   *   await eventBus.publishAll(events);
   *
   *   // 标记事件已提交
   *   aggregate.markEventsAsCommitted();
   * } catch (error) {
   *   // 事件处理失败，不标记为已提交
   *   throw error;
   * }
   * ```
   */
  markEventsAsCommitted() {
    /* istanbul ignore next */
    cov_1akguy5enw().f[4]++;
    cov_1akguy5enw().s[6]++;
    this.clearDomainEvents();
  }
}
/* istanbul ignore next */
cov_1akguy5enw().s[7]++;
exports.EventSourcedAggregateRoot = EventSourcedAggregateRoot;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,