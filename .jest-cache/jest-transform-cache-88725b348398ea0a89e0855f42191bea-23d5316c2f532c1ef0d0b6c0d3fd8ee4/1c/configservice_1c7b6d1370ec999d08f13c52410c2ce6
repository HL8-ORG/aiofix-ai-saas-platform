9cb1f33340f3790b53a6ce6cd9fd72c9
"use strict";

/* istanbul ignore next */
function cov_db1hjtgq9() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.service.ts";
  var hash = "0c8d1d92671cd31f81bad774087674891e2859fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "16": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "17": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "18": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 332,
          column: 1
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "20": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 29
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "23": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 55
        }
      },
      "24": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "25": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "26": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 41
        }
      },
      "27": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "28": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "29": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "30": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 49
        }
      },
      "31": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "32": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "33": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 77
        }
      },
      "34": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 163,
          column: 11
        }
      },
      "35": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 32
        }
      },
      "36": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 37
        }
      },
      "37": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 42
        }
      },
      "38": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 39
        }
      },
      "39": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 37
        }
      },
      "40": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 39
        }
      },
      "41": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 41
        }
      },
      "42": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 41
        }
      },
      "43": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 42
        }
      },
      "44": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 71
        }
      },
      "45": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "46": {
        start: {
          line: 294,
          column: 22
        },
        end: {
          line: 294,
          column: 38
        }
      },
      "47": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "48": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 300,
          column: 15
        }
      },
      "49": {
        start: {
          line: 298,
          column: 71
        },
        end: {
          line: 298,
          column: 138
        }
      },
      "50": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 77
        }
      },
      "51": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "52": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 21
        }
      },
      "53": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 43
        }
      },
      "54": {
        start: {
          line: 333,
          column: 0
        },
        end: {
          line: 333,
          column: 38
        }
      },
      "55": {
        start: {
          line: 334,
          column: 0
        },
        end: {
          line: 337,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 23
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 81
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 57
          },
          end: {
            line: 85,
            column: 58
          }
        },
        loc: {
          start: {
            line: 85,
            column: 75
          },
          end: {
            line: 87,
            column: 13
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 119
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 24
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 151
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 173
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 25
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 183
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 22
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 20
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 22
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 213
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 24
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 233
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 25
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 243
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 38
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 253
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 34
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 263
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 13
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 293
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 298,
            column: 66
          },
          end: {
            line: 298,
            column: 67
          }
        },
        loc: {
          start: {
            line: 298,
            column: 71
          },
          end: {
            line: 298,
            column: 138
          }
        },
        line: 298
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 13
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 329
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "14": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 30
          }
        }, {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 174,
            column: 36
          }
        }],
        line: 174
      },
      "17": {
        loc: {
          start: {
            line: 184,
            column: 15
          },
          end: {
            line: 184,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 15
          },
          end: {
            line: 184,
            column: 35
          }
        }, {
          start: {
            line: 184,
            column: 39
          },
          end: {
            line: 184,
            column: 41
          }
        }],
        line: 184
      },
      "18": {
        loc: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 32
          }
        }, {
          start: {
            line: 194,
            column: 36
          },
          end: {
            line: 194,
            column: 38
          }
        }],
        line: 194
      },
      "19": {
        loc: {
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 30
          }
        }, {
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 204,
            column: 36
          }
        }],
        line: 204
      },
      "20": {
        loc: {
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 32
          }
        }, {
          start: {
            line: 214,
            column: 36
          },
          end: {
            line: 214,
            column: 38
          }
        }],
        line: 214
      },
      "21": {
        loc: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 34
          }
        }, {
          start: {
            line: 224,
            column: 38
          },
          end: {
            line: 224,
            column: 40
          }
        }],
        line: 224
      },
      "22": {
        loc: {
          start: {
            line: 234,
            column: 15
          },
          end: {
            line: 234,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 15
          },
          end: {
            line: 234,
            column: 34
          }
        }, {
          start: {
            line: 234,
            column: 38
          },
          end: {
            line: 234,
            column: 40
          }
        }],
        line: 234
      },
      "23": {
        loc: {
          start: {
            line: 244,
            column: 15
          },
          end: {
            line: 244,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 15
          },
          end: {
            line: 244,
            column: 35
          }
        }, {
          start: {
            line: 244,
            column: 39
          },
          end: {
            line: 244,
            column: 41
          }
        }],
        line: 244
      },
      "24": {
        loc: {
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 254,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 254,
            column: 64
          }
        }, {
          start: {
            line: 254,
            column: 68
          },
          end: {
            line: 254,
            column: 70
          }
        }],
        line: 254
      },
      "25": {
        loc: {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 264,
            column: 61
          }
        }, {
          start: {
            line: 264,
            column: 65
          },
          end: {
            line: 266,
            column: 9
          }
        }],
        line: 264
      },
      "26": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "27": {
        loc: {
          start: {
            line: 298,
            column: 71
          },
          end: {
            line: 298,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 71
          },
          end: {
            line: 298,
            column: 90
          }
        }, {
          start: {
            line: 298,
            column: 94
          },
          end: {
            line: 298,
            column: 114
          }
        }, {
          start: {
            line: 298,
            column: 118
          },
          end: {
            line: 298,
            column: 138
          }
        }],
        line: 298
      },
      "28": {
        loc: {
          start: {
            line: 336,
            column: 37
          },
          end: {
            line: 336,
            column: 161
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 150
          },
          end: {
            line: 336,
            column: 152
          }
        }, {
          start: {
            line: 336,
            column: 155
          },
          end: {
            line: 336,
            column: 161
          }
        }],
        line: 336
      },
      "29": {
        loc: {
          start: {
            line: 336,
            column: 50
          },
          end: {
            line: 336,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 50
          },
          end: {
            line: 336,
            column: 100
          }
        }, {
          start: {
            line: 336,
            column: 104
          },
          end: {
            line: 336,
            column: 131
          }
        }],
        line: 336
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config.service.ts"],
      sourcesContent: ["import { Injectable } from '@nestjs/common';\nimport { MikroOrmModuleOptions } from '@mikro-orm/nestjs';\nimport { KnexModuleOptions } from 'nest-knexjs';\nimport { getConfig } from './config-loader';\nimport { PinoLoggerService, LogContext } from '@aiofix/logging';\n\n/**\n * @interface IamConfig\n * @description\n * IAM\u7CFB\u7EDF\u914D\u7F6E\u63A5\u53E3\uFF0C\u5B9A\u4E49\u4E86\u7CFB\u7EDF\u4E2D\u6240\u6709\u914D\u7F6E\u6A21\u5757\u7684\u7ED3\u6784\u3002\n * \u8BE5\u63A5\u53E3\u5305\u542B\u4E86\u5E94\u7528\u57FA\u7840\u914D\u7F6E\u3001\u6570\u636E\u5E93\u914D\u7F6E\u3001\u7F13\u5B58\u914D\u7F6E\u3001\u8BA4\u8BC1\u914D\u7F6E\u7B49\u5404\u4E2A\u6A21\u5757\u7684\u914D\u7F6E\u5B9A\u4E49\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u4F7F\u7528TypeScript\u63A5\u53E3\u5B9A\u4E49\u914D\u7F6E\u7ED3\u6784\uFF0C\u786E\u4FDD\u7C7B\u578B\u5B89\u5168\n * 2. \u6BCF\u4E2A\u914D\u7F6E\u6A21\u5757\u90FD\u6709\u72EC\u7ACB\u7684\u547D\u540D\u7A7A\u95F4\uFF0C\u907F\u514D\u914D\u7F6E\u51B2\u7A81\n * 3. \u652F\u6301\u914D\u7F6E\u7684\u5D4C\u5957\u7ED3\u6784\uFF0C\u4FBF\u4E8E\u7EC4\u7EC7\u590D\u6742\u7684\u914D\u7F6E\u9879\n * 4. \u4F7F\u7528Record<string, unknown>\u7C7B\u578B\u63D0\u4F9B\u7075\u6D3B\u6027\uFF0C\u5177\u4F53\u7C7B\u578B\u5728\u8FD0\u884C\u65F6\u786E\u5B9A\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u5E94\u7528\u57FA\u7840\u914D\u7F6E\uFF08app\uFF09\uFF1A\u5E94\u7528\u540D\u79F0\u3001\u7248\u672C\u3001\u73AF\u5883\u7B49\n * 2. \u6570\u636E\u5E93\u914D\u7F6E\uFF08database\uFF09\uFF1A\u6570\u636E\u5E93\u8FDE\u63A5\u3001ORM\u914D\u7F6E\u7B49\n * 3. \u7F13\u5B58\u914D\u7F6E\uFF08redis\uFF09\uFF1ARedis\u8FDE\u63A5\u3001\u7F13\u5B58\u7B56\u7565\u7B49\n * 4. \u8BA4\u8BC1\u914D\u7F6E\uFF08jwt\uFF09\uFF1AJWT\u5BC6\u94A5\u3001\u4EE4\u724C\u914D\u7F6E\u7B49\n * 5. \u90AE\u4EF6\u914D\u7F6E\uFF08email\uFF09\uFF1A\u90AE\u4EF6\u670D\u52A1\u3001\u6A21\u677F\u914D\u7F6E\u7B49\n * 6. \u65E5\u5FD7\u914D\u7F6E\uFF08logging\uFF09\uFF1A\u65E5\u5FD7\u7EA7\u522B\u3001\u8F93\u51FA\u914D\u7F6E\u7B49\n * 7. \u7CFB\u7EDF\u8BBE\u7F6E\uFF08setting\uFF09\uFF1A\u7CFB\u7EDF\u7EA7\u914D\u7F6E\u9879\n * 8. \u7B2C\u4E09\u65B9\u96C6\u6210\uFF08keycloak\uFF09\uFF1AKeycloak\u8BA4\u8BC1\u670D\u52A1\u914D\u7F6E\n */\nexport interface IamConfig {\n  /** \u5E94\u7528\u57FA\u7840\u914D\u7F6E */\n  app: Record<string, unknown>;\n  /** \u6570\u636E\u5E93\u914D\u7F6E */\n  database: Record<string, unknown>;\n  /** Redis\u7F13\u5B58\u914D\u7F6E */\n  redis: Record<string, unknown>;\n  /** JWT\u8BA4\u8BC1\u914D\u7F6E */\n  jwt: Record<string, unknown>;\n  /** \u90AE\u4EF6\u670D\u52A1\u914D\u7F6E */\n  email: Record<string, unknown>;\n  /** \u65E5\u5FD7\u7CFB\u7EDF\u914D\u7F6E */\n  logging: Record<string, unknown>;\n  /** \u7CFB\u7EDF\u8BBE\u7F6E\u914D\u7F6E */\n  setting: Record<string, unknown>;\n  /** Keycloak\u96C6\u6210\u914D\u7F6E */\n  keycloak: Record<string, unknown>;\n}\n\n/**\n * @class ConfigService\n * @description\n * IAM\u7CFB\u7EDF\u914D\u7F6E\u670D\u52A1\uFF0C\u8D1F\u8D23\u7BA1\u7406\u548C\u63D0\u4F9B\u7CFB\u7EDF\u4E2D\u6240\u6709\u914D\u7F6E\u4FE1\u606F\u3002\n * \u8BE5\u670D\u52A1\u662F\u914D\u7F6E\u7BA1\u7406\u7684\u6838\u5FC3\u7EC4\u4EF6\uFF0C\u63D0\u4F9B\u4E86\u914D\u7F6E\u7684\u52A0\u8F7D\u3001\u83B7\u53D6\u3001\u9A8C\u8BC1\u7B49\u529F\u80FD\u3002\n *\n * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n * 1. \u4F7F\u7528NestJS\u7684\u4F9D\u8D56\u6CE8\u5165\u673A\u5236\uFF0C\u4F5C\u4E3A\u5168\u5C40\u670D\u52A1\u63D0\u4F9B\u914D\u7F6E\u8BBF\u95EE\n * 2. \u5728\u6784\u9020\u51FD\u6570\u4E2D\u5F02\u6B65\u521D\u59CB\u5316\u914D\u7F6E\uFF0C\u786E\u4FDD\u914D\u7F6E\u5728\u670D\u52A1\u542F\u52A8\u65F6\u52A0\u8F7D\u5B8C\u6210\n * 3. \u4F7F\u7528\u53EA\u8BFB\u914D\u7F6E\u5BF9\u8C61\uFF0C\u9632\u6B62\u8FD0\u884C\u65F6\u914D\u7F6E\u88AB\u610F\u5916\u4FEE\u6539\n * 4. \u63D0\u4F9B\u7C7B\u578B\u5B89\u5168\u7684\u914D\u7F6E\u8BBF\u95EE\u65B9\u6CD5\uFF0C\u652F\u6301\u6CDB\u578B\u7EA6\u675F\n * 5. \u96C6\u6210\u73AF\u5883\u53D8\u91CF\u7BA1\u7406\uFF0C\u652F\u6301\u52A8\u6001\u914D\u7F6E\u66F4\u65B0\n * 6. \u4F7F\u7528\u81EA\u5B9A\u4E49\u7684PinoLoggerService\u8FDB\u884C\u65E5\u5FD7\u8BB0\u5F55\uFF0C\u63D0\u4F9B\u9AD8\u6027\u80FD\u7684\u7ED3\u6784\u5316\u65E5\u5FD7\n *\n * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u914D\u7F6E\u52A0\u8F7D\u548C\u521D\u59CB\u5316\n * 2. \u914D\u7F6E\u83B7\u53D6\u548C\u9A8C\u8BC1\n * 3. \u73AF\u5883\u53D8\u91CF\u7BA1\u7406\n * 4. \u914D\u7F6E\u6A21\u5757\u5316\u8BBF\u95EE\n * 5. \u7C7B\u578B\u5B89\u5168\u7684\u914D\u7F6E\u64CD\u4F5C\n * 6. \u7ED3\u6784\u5316\u65E5\u5FD7\u8BB0\u5F55\n */\n@Injectable()\nexport class ConfigService {\n  /** \u73AF\u5883\u914D\u7F6E\u5BF9\u8C61 */\n  private readonly environment = {\n    production: process.env.NODE_ENV === 'production',\n    env: {} as Record<string, string>,\n  };\n  /** \u65E5\u5FD7\u670D\u52A1\u5B9E\u4F8B */\n  private readonly logger: PinoLoggerService;\n  /** \u7CFB\u7EDF\u914D\u7F6E\u5BF9\u8C61 */\n  private config: Partial<IamConfig> = {};\n\n  /**\n   * @constructor\n   * @description\n   * \u914D\u7F6E\u670D\u52A1\u6784\u9020\u51FD\u6570\uFF0C\u5728\u670D\u52A1\u5B9E\u4F8B\u5316\u65F6\u81EA\u52A8\u521D\u59CB\u5316\u914D\u7F6E\u3002\n   * \u7531\u4E8E\u6784\u9020\u51FD\u6570\u4E0D\u80FD\u662F\u5F02\u6B65\u7684\uFF0C\u6240\u4EE5\u4F7F\u7528void\u8C03\u7528\u5F02\u6B65\u521D\u59CB\u5316\u65B9\u6CD5\u3002\n   *\n   * @param logger \u81EA\u5B9A\u4E49\u7684Pino\u65E5\u5FD7\u670D\u52A1\u5B9E\u4F8B\n   */\n  constructor(logger: PinoLoggerService) {\n    this.logger = logger;\n    void this.initConfig();\n  }\n\n  /**\n   * @function initConfig\n   * @description\n   * \u521D\u59CB\u5316\u914D\u7F6E\u548C\u73AF\u5883\u53D8\u91CF\u3002\u8BE5\u65B9\u6CD5\u5728\u670D\u52A1\u542F\u52A8\u65F6\u88AB\u8C03\u7528\uFF0C\u8D1F\u8D23\u52A0\u8F7D\u6240\u6709\u914D\u7F6E\u4FE1\u606F\n   * \u5E76\u8BBE\u7F6E\u73AF\u5883\u53D8\u91CF\u3002\u7531\u4E8E\u6784\u9020\u51FD\u6570\u4E0D\u80FD\u662F\u5F02\u6B65\u7684\uFF0C\u6240\u4EE5\u4F7F\u7528\u72EC\u7ACB\u7684\u5F02\u6B65\u65B9\u6CD5\u3002\n   *\n   * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n   * 1. \u8C03\u7528getConfig()\u65B9\u6CD5\u83B7\u53D6\u5B8C\u6574\u7684\u914D\u7F6E\u5BF9\u8C61\n   * 2. \u904D\u5386\u73AF\u5883\u914D\u7F6E\uFF0C\u52A8\u6001\u8BBE\u7F6Eprocess.env\u73AF\u5883\u53D8\u91CF\n   * 3. \u8BB0\u5F55\u751F\u4EA7\u73AF\u5883\u72B6\u6001\u5230\u65E5\u5FD7\u4E2D\n   * 4. \u786E\u4FDD\u914D\u7F6E\u5728\u670D\u52A1\u542F\u52A8\u524D\u5B8C\u6210\u52A0\u8F7D\n   * 5. \u4F7F\u7528\u81EA\u5B9A\u4E49\u7684PinoLoggerService\u8BB0\u5F55\u7ED3\u6784\u5316\u65E5\u5FD7\n   *\n   * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n   * 1. \u914D\u7F6E\u52A0\u8F7D\u548C\u521D\u59CB\u5316\n   * 2. \u73AF\u5883\u53D8\u91CF\u8BBE\u7F6E\n   * 3. \u542F\u52A8\u72B6\u6001\u65E5\u5FD7\u8BB0\u5F55\n   * 4. \u914D\u7F6E\u9A8C\u8BC1\u548C\u9519\u8BEF\u5904\u7406\n   * 5. \u7ED3\u6784\u5316\u65E5\u5FD7\u8BB0\u5F55\n   *\n   * @returns {Promise<void>} \u8FD4\u56DE\u4E00\u4E2APromise\uFF0C\u8868\u793A\u914D\u7F6E\u521D\u59CB\u5316\u8FC7\u7A0B\n   */\n  private async initConfig(): Promise<void> {\n    this.config = getConfig();\n\n    // \u52A8\u6001\u8BBE\u7F6E\u73AF\u5883\u53D8\u91CF\n    if (this.environment.env) {\n      Object.entries(this.environment.env).forEach(([key, value]) => {\n        process.env[key] = value;\n      });\n    }\n\n    if (this.logger) {\n      this.logger.info(\n        `\u914D\u7F6E\u670D\u52A1\u521D\u59CB\u5316\u5B8C\u6210\uFF0C\u751F\u4EA7\u73AF\u5883\u72B6\u6001: ${this.environment.production}`,\n        LogContext.CONFIG,\n        {\n          isProduction: this.environment.production,\n          nodeEnv: process.env.NODE_ENV,\n          configKeys: Object.keys(this.config),\n        },\n      );\n    }\n  }\n\n  /**\n   * @function getConfig\n   * @description\n   * \u83B7\u53D6\u5B8C\u6574\u7684\u914D\u7F6E\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u53EA\u8BFB\u7684\u914D\u7F6E\u526F\u672C\u3002\u8BE5\u65B9\u6CD5\u63D0\u4F9B\u4E86\u5BF9\u7CFB\u7EDF\u6240\u6709\u914D\u7F6E\u7684\u8BBF\u95EE\uFF0C\n   * \u540C\u65F6\u786E\u4FDD\u8FD4\u56DE\u7684\u914D\u7F6E\u5BF9\u8C61\u4E0D\u4F1A\u88AB\u610F\u5916\u4FEE\u6539\u3002\n   *\n   * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n   * 1. \u4F7F\u7528Object.freeze()\u521B\u5EFA\u4E0D\u53EF\u53D8\u7684\u914D\u7F6E\u5BF9\u8C61\n   * 2. \u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26\u521B\u5EFA\u914D\u7F6E\u5BF9\u8C61\u7684\u6DF1\u62F7\u8D1D\n   * 3. \u8FD4\u56DE\u53EA\u8BFB\u7C7B\u578B\uFF0C\u9632\u6B62\u8FD0\u884C\u65F6\u4FEE\u6539\n   * 4. \u63D0\u4F9B\u7C7B\u578B\u5B89\u5168\u7684\u914D\u7F6E\u8BBF\u95EE\n   * 5. \u8BB0\u5F55\u914D\u7F6E\u8BBF\u95EE\u65E5\u5FD7\uFF0C\u4FBF\u4E8E\u5BA1\u8BA1\u548C\u8C03\u8BD5\n   *\n   * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n   * 1. \u5B8C\u6574\u914D\u7F6E\u83B7\u53D6\n   * 2. \u914D\u7F6E\u5BF9\u8C61\u4FDD\u62A4\n   * 3. \u7C7B\u578B\u5B89\u5168\u8BBF\u95EE\n   * 4. \u914D\u7F6E\u5B8C\u6574\u6027\u4FDD\u8BC1\n   * 5. \u914D\u7F6E\u8BBF\u95EE\u5BA1\u8BA1\n   *\n   * @returns {Readonly<Partial<IamConfig>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u5B8C\u6574\u914D\u7F6E\u5BF9\u8C61\n   */\n  public getConfig(): Readonly<Partial<IamConfig>> {\n    this.logger.debug('\u83B7\u53D6\u5B8C\u6574\u914D\u7F6E\u5BF9\u8C61', LogContext.CONFIG, {\n      configKeys: Object.keys(this.config),\n      timestamp: new Date().toISOString(),\n    });\n    return Object.freeze({ ...this.config });\n  }\n\n  /**\n   * @function getConfigValue\n   * @description\n   * \u83B7\u53D6\u6307\u5B9A\u7684\u914D\u7F6E\u503C\uFF0C\u652F\u6301\u6CDB\u578B\u7C7B\u578B\u5B89\u5168\u3002\u8BE5\u65B9\u6CD5\u63D0\u4F9B\u4E86\u5BF9\u7279\u5B9A\u914D\u7F6E\u6A21\u5757\u7684\u8BBF\u95EE\uFF0C\n   * \u5982\u679C\u914D\u7F6E\u952E\u4E0D\u5B58\u5728\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\n   *\n   * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n   * 1. \u4F7F\u7528\u6CDB\u578BK\u7EA6\u675F\u914D\u7F6E\u952E\u7684\u7C7B\u578B\n   * 2. \u68C0\u67E5\u914D\u7F6E\u952E\u662F\u5426\u5B58\u5728\uFF0C\u4E0D\u5B58\u5728\u5219\u629B\u51FA\u9519\u8BEF\n   * 3. \u8FD4\u56DE\u53EA\u8BFB\u7684\u914D\u7F6E\u503C\uFF0C\u786E\u4FDD\u7C7B\u578B\u5B89\u5168\n   * 4. \u652F\u6301TypeScript\u7684\u7C7B\u578B\u63A8\u65AD\n   * 5. \u8BB0\u5F55\u914D\u7F6E\u8BBF\u95EE\u65E5\u5FD7\uFF0C\u4FBF\u4E8E\u5BA1\u8BA1\u548C\u8C03\u8BD5\n   *\n   * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n   * 1. \u7279\u5B9A\u914D\u7F6E\u83B7\u53D6\n   * 2. \u914D\u7F6E\u952E\u9A8C\u8BC1\n   * 3. \u7C7B\u578B\u5B89\u5168\u8BBF\u95EE\n   * 4. \u9519\u8BEF\u5904\u7406\u548C\u63D0\u793A\n   * 5. \u914D\u7F6E\u8BBF\u95EE\u5BA1\u8BA1\n   *\n   * @template K - \u914D\u7F6E\u952E\u7684\u7C7B\u578B\n   * @param {K} key - \u8981\u83B7\u53D6\u7684\u914D\u7F6E\u952E\n   * @returns {Readonly<IamConfig[K]>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u914D\u7F6E\u503C\n   * @throws {Error} \u5F53\u914D\u7F6E\u952E\u4E0D\u5B58\u5728\u65F6\u629B\u51FA\u9519\u8BEF\n   */\n  public getConfigValue<K extends keyof IamConfig>(\n    key: K,\n  ): Readonly<IamConfig[K]> {\n    if (!(key in this.config)) {\n      this.logger.error(`\u914D\u7F6E\u952E\u4E0D\u5B58\u5728: ${String(key)}`, LogContext.CONFIG, {\n        requestedKey: String(key),\n        availableKeys: Object.keys(this.config),\n        timestamp: new Date().toISOString(),\n      });\n      throw new Error(`Configuration key \"${String(key)}\" not found.`);\n    }\n\n    this.logger.debug(`\u83B7\u53D6\u914D\u7F6E\u503C: ${String(key)}`, LogContext.CONFIG, {\n      configKey: String(key),\n      timestamp: new Date().toISOString(),\n    });\n\n    return this.config[key] as Readonly<IamConfig[K]>;\n  }\n\n  /**\n   * @getter appConfig\n   * @description\n   * \u83B7\u53D6\u5E94\u7528\u57FA\u7840\u914D\u7F6E\uFF0C\u5305\u542B\u5E94\u7528\u540D\u79F0\u3001\u7248\u672C\u3001\u73AF\u5883\u7B49\u57FA\u7840\u4FE1\u606F\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u5E94\u7528\u914D\u7F6E\u5BF9\u8C61\n   */\n  get appConfig(): Readonly<Record<string, unknown>> {\n    return this.config.app ?? {};\n  }\n\n  /**\n   * @getter databaseConfig\n   * @description\n   * \u83B7\u53D6\u6570\u636E\u5E93\u914D\u7F6E\uFF0C\u5305\u542B\u6570\u636E\u5E93\u8FDE\u63A5\u3001ORM\u914D\u7F6E\u3001\u8FDE\u63A5\u6C60\u7B49\u8BBE\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u6570\u636E\u5E93\u914D\u7F6E\u5BF9\u8C61\n   */\n  get databaseConfig(): Readonly<Record<string, unknown>> {\n    return this.config.database ?? {};\n  }\n\n  /**\n   * @getter redisConfig\n   * @description\n   * \u83B7\u53D6Redis\u7F13\u5B58\u914D\u7F6E\uFF0C\u5305\u542B\u8FDE\u63A5\u4FE1\u606F\u3001\u7F13\u5B58\u7B56\u7565\u3001\u5206\u5E03\u5F0F\u9501\u7B49\u8BBE\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684Redis\u914D\u7F6E\u5BF9\u8C61\n   */\n  get redisConfig(): Readonly<Record<string, unknown>> {\n    return this.config.redis ?? {};\n  }\n\n  /**\n   * @getter jwtConfig\n   * @description\n   * \u83B7\u53D6JWT\u8BA4\u8BC1\u914D\u7F6E\uFF0C\u5305\u542B\u5BC6\u94A5\u3001\u4EE4\u724C\u8FC7\u671F\u65F6\u95F4\u3001\u591A\u79DF\u6237\u652F\u6301\u7B49\u8BBE\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684JWT\u914D\u7F6E\u5BF9\u8C61\n   */\n  get jwtConfig(): Readonly<Record<string, unknown>> {\n    return this.config.jwt ?? {};\n  }\n\n  /**\n   * @getter emailConfig\n   * @description\n   * \u83B7\u53D6\u90AE\u4EF6\u670D\u52A1\u914D\u7F6E\uFF0C\u5305\u542BSMTP\u8BBE\u7F6E\u3001\u90AE\u4EF6\u6A21\u677F\u3001\u53D1\u9001\u7B56\u7565\u7B49\u914D\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u90AE\u4EF6\u914D\u7F6E\u5BF9\u8C61\n   */\n  get emailConfig(): Readonly<Record<string, unknown>> {\n    return this.config.email ?? {};\n  }\n\n  /**\n   * @getter loggingConfig\n   * @description\n   * \u83B7\u53D6\u65E5\u5FD7\u7CFB\u7EDF\u914D\u7F6E\uFF0C\u5305\u542B\u65E5\u5FD7\u7EA7\u522B\u3001\u8F93\u51FA\u683C\u5F0F\u3001\u805A\u5408\u8BBE\u7F6E\u7B49\u914D\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u65E5\u5FD7\u914D\u7F6E\u5BF9\u8C61\n   */\n  get loggingConfig(): Readonly<Record<string, unknown>> {\n    return this.config.logging ?? {};\n  }\n\n  /**\n   * @getter settingConfig\n   * @description\n   * \u83B7\u53D6\u7CFB\u7EDF\u8BBE\u7F6E\u914D\u7F6E\uFF0C\u5305\u542B\u7CFB\u7EDF\u7EA7\u914D\u7F6E\u9879\u548C\u5168\u5C40\u8BBE\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684\u7CFB\u7EDF\u8BBE\u7F6E\u914D\u7F6E\u5BF9\u8C61\n   */\n  get settingConfig(): Readonly<Record<string, unknown>> {\n    return this.config.setting ?? {};\n  }\n\n  /**\n   * @getter keycloakConfig\n   * @description\n   * \u83B7\u53D6Keycloak\u96C6\u6210\u914D\u7F6E\uFF0C\u5305\u542B\u7B2C\u4E09\u65B9\u8BA4\u8BC1\u670D\u52A1\u7684\u8FDE\u63A5\u548C\u8BBE\u7F6E\u3002\n   *\n   * @returns {Readonly<Record<string, unknown>>} \u8FD4\u56DE\u53EA\u8BFB\u7684Keycloak\u914D\u7F6E\u5BF9\u8C61\n   */\n  get keycloakConfig(): Readonly<Record<string, unknown>> {\n    return this.config.keycloak ?? {};\n  }\n\n  /**\n   * @getter dbMikroOrmConnectionOptions\n   * @description\n   * \u83B7\u53D6MikroORM\u8FDE\u63A5\u914D\u7F6E\u9009\u9879\uFF0C\u7528\u4E8E\u6570\u636E\u5E93\u8FDE\u63A5\u548CORM\u64CD\u4F5C\u3002\n   *\n   * @returns {Readonly<MikroOrmModuleOptions>} \u8FD4\u56DE\u53EA\u8BFB\u7684MikroORM\u914D\u7F6E\u5BF9\u8C61\n   */\n  get dbMikroOrmConnectionOptions(): Readonly<MikroOrmModuleOptions> {\n    return this.config.database?.dbMikroOrmConnectionOptions ?? {};\n  }\n\n  /**\n   * @getter dbKnexConnectionOptions\n   * @description\n   * \u83B7\u53D6Knex\u8FDE\u63A5\u914D\u7F6E\u9009\u9879\uFF0C\u7528\u4E8E\u590D\u6742\u67E5\u8BE2\u548C\u6570\u636E\u5E93\u8FC1\u79FB\u3002\n   *\n   * @returns {Readonly<KnexModuleOptions>} \u8FD4\u56DE\u53EA\u8BFB\u7684Knex\u914D\u7F6E\u5BF9\u8C61\n   */\n  get dbKnexConnectionOptions(): Readonly<KnexModuleOptions> {\n    return (this.config.database?.dbKnexConnectionOptions ?? {\n      config: {},\n    }) as Readonly<KnexModuleOptions>;\n  }\n\n  /**\n   * @function get\n   * @description\n   * \u83B7\u53D6\u73AF\u5883\u53D8\u91CF\u503C\uFF0C\u652F\u6301\u7C7B\u578B\u63A8\u65AD\u3002\u8BE5\u65B9\u6CD5\u63D0\u4F9B\u4E86\u5BF9\u73AF\u5883\u53D8\u91CF\u7684\u7C7B\u578B\u5B89\u5168\u8BBF\u95EE\uFF0C\n   * \u5982\u679C\u73AF\u5883\u53D8\u91CF\u4E0D\u5B58\u5728\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\n   *\n   * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n   * 1. \u4F7F\u7528\u6CDB\u578BK\u7EA6\u675F\u73AF\u5883\u53D8\u91CF\u952E\u7684\u7C7B\u578B\n   * 2. \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\u662F\u5426\u5B58\u5728\uFF0C\u4E0D\u5B58\u5728\u5219\u629B\u51FA\u9519\u8BEF\n   * 3. \u8FD4\u56DE\u7C7B\u578B\u5B89\u5168\u7684\u73AF\u5883\u53D8\u91CF\u503C\n   * 4. \u652F\u6301TypeScript\u7684\u7C7B\u578B\u63A8\u65AD\u548C\u81EA\u52A8\u8865\u5168\n   * 5. \u8BB0\u5F55\u73AF\u5883\u53D8\u91CF\u8BBF\u95EE\u65E5\u5FD7\uFF0C\u4FBF\u4E8E\u5BA1\u8BA1\u548C\u8C03\u8BD5\n   *\n   * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n   * 1. \u73AF\u5883\u53D8\u91CF\u83B7\u53D6\n   * 2. \u7C7B\u578B\u5B89\u5168\u8BBF\u95EE\n   * 3. \u9519\u8BEF\u5904\u7406\u548C\u63D0\u793A\n   * 4. \u73AF\u5883\u53D8\u91CF\u9A8C\u8BC1\n   * 5. \u73AF\u5883\u53D8\u91CF\u8BBF\u95EE\u5BA1\u8BA1\n   *\n   * @template K - \u73AF\u5883\u53D8\u91CF\u952E\u7684\u7C7B\u578B\n   * @param {K} key - \u8981\u83B7\u53D6\u7684\u73AF\u5883\u53D8\u91CF\u952E\n   * @returns {string} \u8FD4\u56DE\u5BF9\u5E94\u7684\u73AF\u5883\u53D8\u91CF\u503C\n   * @throws {Error} \u5F53\u73AF\u5883\u53D8\u91CF\u4E0D\u5B58\u5728\u65F6\u629B\u51FA\u9519\u8BEF\n   */\n  get<K extends string>(key: K): string {\n    const value = process.env[key];\n    if (!value) {\n      this.logger.error(`\u73AF\u5883\u53D8\u91CF\u672A\u5B9A\u4E49: ${key}`, LogContext.CONFIG, {\n        requestedKey: key,\n        availableEnvVars: Object.keys(process.env).filter(\n          k =>\n            k.startsWith('DB_') || k.startsWith('LOG_') || k.startsWith('JWT_'),\n        ),\n        timestamp: new Date().toISOString(),\n      });\n      throw new Error(`Environment variable \"${key}\" is not defined.`);\n    }\n\n    this.logger.debug(`\u83B7\u53D6\u73AF\u5883\u53D8\u91CF: ${key}`, LogContext.CONFIG, {\n      envKey: key,\n      hasValue: !!value,\n      timestamp: new Date().toISOString(),\n    });\n\n    return value;\n  }\n\n  /**\n   * @function isProd\n   * @description\n   * \u68C0\u67E5\u5E94\u7528\u662F\u5426\u8FD0\u884C\u5728\u751F\u4EA7\u73AF\u5883\u6A21\u5F0F\u3002\u8BE5\u65B9\u6CD5\u7528\u4E8E\u5224\u65AD\u5F53\u524D\u8FD0\u884C\u73AF\u5883\uFF0C\n   * \u5E2E\u52A9\u5E94\u7528\u6839\u636E\u73AF\u5883\u8C03\u6574\u884C\u4E3A\u3002\n   *\n   * \u4E3B\u8981\u539F\u7406\u4E0E\u673A\u5236\u5982\u4E0B\uFF1A\n   * 1. \u4ECE\u73AF\u5883\u914D\u7F6E\u4E2D\u83B7\u53D6production\u6807\u5FD7\n   * 2. \u8FD4\u56DE\u5E03\u5C14\u503C\u8868\u793A\u662F\u5426\u4E3A\u751F\u4EA7\u73AF\u5883\n   * 3. \u7528\u4E8E\u6761\u4EF6\u903B\u8F91\u548C\u73AF\u5883\u76F8\u5173\u914D\u7F6E\n   *\n   * \u529F\u80FD\u4E0E\u4E1A\u52A1\u89C4\u5219\uFF1A\n   * 1. \u73AF\u5883\u5224\u65AD\n   * 2. \u6761\u4EF6\u903B\u8F91\u652F\u6301\n   * 3. \u73AF\u5883\u76F8\u5173\u914D\u7F6E\n   * 4. \u8C03\u8BD5\u548C\u90E8\u7F72\u652F\u6301\n   *\n   * @returns {boolean} \u8FD4\u56DEtrue\u8868\u793A\u751F\u4EA7\u73AF\u5883\uFF0Cfalse\u8868\u793A\u975E\u751F\u4EA7\u73AF\u5883\n   */\n  isProd(): boolean {\n    return this.environment.production;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c8d1d92671cd31f81bad774087674891e2859fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_db1hjtgq9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_db1hjtgq9();
var __decorate =
/* istanbul ignore next */
(cov_db1hjtgq9().s[0]++,
/* istanbul ignore next */
(cov_db1hjtgq9().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_db1hjtgq9().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_db1hjtgq9().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_db1hjtgq9().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_db1hjtgq9().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_db1hjtgq9().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_db1hjtgq9().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_db1hjtgq9().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_db1hjtgq9().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_db1hjtgq9().b[3][0]++;
    cov_db1hjtgq9().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_db1hjtgq9().b[3][1]++;
    cov_db1hjtgq9().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_db1hjtgq9().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_db1hjtgq9().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_db1hjtgq9().b[5][0]++;
        cov_db1hjtgq9().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_db1hjtgq9().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_db1hjtgq9().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_db1hjtgq9().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_db1hjtgq9().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_db1hjtgq9().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_db1hjtgq9().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_db1hjtgq9().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_db1hjtgq9().s[9]++;
  return /* istanbul ignore next */(cov_db1hjtgq9().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_db1hjtgq9().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_db1hjtgq9().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_db1hjtgq9().s[10]++,
/* istanbul ignore next */
(cov_db1hjtgq9().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_db1hjtgq9().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_db1hjtgq9().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_db1hjtgq9().f[1]++;
  cov_db1hjtgq9().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_db1hjtgq9().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_db1hjtgq9().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_db1hjtgq9().b[11][0]++;
    cov_db1hjtgq9().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_db1hjtgq9().b[11][1]++;
  }
}));
var _a;
/* istanbul ignore next */
cov_db1hjtgq9().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_db1hjtgq9().s[14]++;
exports.ConfigService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_db1hjtgq9().s[15]++, require("@nestjs/common"));
const config_loader_1 =
/* istanbul ignore next */
(cov_db1hjtgq9().s[16]++, require("./config-loader"));
const logging_1 =
/* istanbul ignore next */
(cov_db1hjtgq9().s[17]++, require("@aiofix/logging"));
/**
 * @class ConfigService
 * @description
 * IAM系统配置服务，负责管理和提供系统中所有配置信息。
 * 该服务是配置管理的核心组件，提供了配置的加载、获取、验证等功能。
 *
 * 主要原理与机制如下：
 * 1. 使用NestJS的依赖注入机制，作为全局服务提供配置访问
 * 2. 在构造函数中异步初始化配置，确保配置在服务启动时加载完成
 * 3. 使用只读配置对象，防止运行时配置被意外修改
 * 4. 提供类型安全的配置访问方法，支持泛型约束
 * 5. 集成环境变量管理，支持动态配置更新
 * 6. 使用自定义的PinoLoggerService进行日志记录，提供高性能的结构化日志
 *
 * 功能与业务规则：
 * 1. 配置加载和初始化
 * 2. 配置获取和验证
 * 3. 环境变量管理
 * 4. 配置模块化访问
 * 5. 类型安全的配置操作
 * 6. 结构化日志记录
 */
/* istanbul ignore next */
cov_db1hjtgq9().s[18]++;
let ConfigService = class ConfigService {
  /**
   * @constructor
   * @description
   * 配置服务构造函数，在服务实例化时自动初始化配置。
   * 由于构造函数不能是异步的，所以使用void调用异步初始化方法。
   *
   * @param logger 自定义的Pino日志服务实例
   */
  constructor(logger) {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[2]++;
    cov_db1hjtgq9().s[19]++;
    /** 环境配置对象 */
    this.environment = {
      production: process.env.NODE_ENV === 'production',
      env: {}
    };
    /** 系统配置对象 */
    /* istanbul ignore next */
    cov_db1hjtgq9().s[20]++;
    this.config = {};
    /* istanbul ignore next */
    cov_db1hjtgq9().s[21]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_db1hjtgq9().s[22]++;
    void this.initConfig();
  }
  /**
   * @function initConfig
   * @description
   * 初始化配置和环境变量。该方法在服务启动时被调用，负责加载所有配置信息
   * 并设置环境变量。由于构造函数不能是异步的，所以使用独立的异步方法。
   *
   * 主要原理与机制如下：
   * 1. 调用getConfig()方法获取完整的配置对象
   * 2. 遍历环境配置，动态设置process.env环境变量
   * 3. 记录生产环境状态到日志中
   * 4. 确保配置在服务启动前完成加载
   * 5. 使用自定义的PinoLoggerService记录结构化日志
   *
   * 功能与业务规则：
   * 1. 配置加载和初始化
   * 2. 环境变量设置
   * 3. 启动状态日志记录
   * 4. 配置验证和错误处理
   * 5. 结构化日志记录
   *
   * @returns {Promise<void>} 返回一个Promise，表示配置初始化过程
   */
  async initConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[3]++;
    cov_db1hjtgq9().s[23]++;
    this.config = (0, config_loader_1.getConfig)();
    // 动态设置环境变量
    /* istanbul ignore next */
    cov_db1hjtgq9().s[24]++;
    if (this.environment.env) {
      /* istanbul ignore next */
      cov_db1hjtgq9().b[13][0]++;
      cov_db1hjtgq9().s[25]++;
      Object.entries(this.environment.env).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_db1hjtgq9().f[4]++;
        cov_db1hjtgq9().s[26]++;
        process.env[key] = value;
      });
    } else
    /* istanbul ignore next */
    {
      cov_db1hjtgq9().b[13][1]++;
    }
    cov_db1hjtgq9().s[27]++;
    if (this.logger) {
      /* istanbul ignore next */
      cov_db1hjtgq9().b[14][0]++;
      cov_db1hjtgq9().s[28]++;
      this.logger.info(`配置服务初始化完成，生产环境状态: ${this.environment.production}`, logging_1.LogContext.CONFIG, {
        isProduction: this.environment.production,
        nodeEnv: process.env.NODE_ENV,
        configKeys: Object.keys(this.config)
      });
    } else
    /* istanbul ignore next */
    {
      cov_db1hjtgq9().b[14][1]++;
    }
  }
  /**
   * @function getConfig
   * @description
   * 获取完整的配置对象，返回一个只读的配置副本。该方法提供了对系统所有配置的访问，
   * 同时确保返回的配置对象不会被意外修改。
   *
   * 主要原理与机制如下：
   * 1. 使用Object.freeze()创建不可变的配置对象
   * 2. 使用展开运算符创建配置对象的深拷贝
   * 3. 返回只读类型，防止运行时修改
   * 4. 提供类型安全的配置访问
   * 5. 记录配置访问日志，便于审计和调试
   *
   * 功能与业务规则：
   * 1. 完整配置获取
   * 2. 配置对象保护
   * 3. 类型安全访问
   * 4. 配置完整性保证
   * 5. 配置访问审计
   *
   * @returns {Readonly<Partial<IamConfig>>} 返回只读的完整配置对象
   */
  getConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[5]++;
    cov_db1hjtgq9().s[29]++;
    this.logger.debug('获取完整配置对象', logging_1.LogContext.CONFIG, {
      configKeys: Object.keys(this.config),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_db1hjtgq9().s[30]++;
    return Object.freeze({
      ...this.config
    });
  }
  /**
   * @function getConfigValue
   * @description
   * 获取指定的配置值，支持泛型类型安全。该方法提供了对特定配置模块的访问，
   * 如果配置键不存在会抛出错误。
   *
   * 主要原理与机制如下：
   * 1. 使用泛型K约束配置键的类型
   * 2. 检查配置键是否存在，不存在则抛出错误
   * 3. 返回只读的配置值，确保类型安全
   * 4. 支持TypeScript的类型推断
   * 5. 记录配置访问日志，便于审计和调试
   *
   * 功能与业务规则：
   * 1. 特定配置获取
   * 2. 配置键验证
   * 3. 类型安全访问
   * 4. 错误处理和提示
   * 5. 配置访问审计
   *
   * @template K - 配置键的类型
   * @param {K} key - 要获取的配置键
   * @returns {Readonly<IamConfig[K]>} 返回只读的配置值
   * @throws {Error} 当配置键不存在时抛出错误
   */
  getConfigValue(key) {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[6]++;
    cov_db1hjtgq9().s[31]++;
    if (!(key in this.config)) {
      /* istanbul ignore next */
      cov_db1hjtgq9().b[15][0]++;
      cov_db1hjtgq9().s[32]++;
      this.logger.error(`配置键不存在: ${String(key)}`, logging_1.LogContext.CONFIG, {
        requestedKey: String(key),
        availableKeys: Object.keys(this.config),
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_db1hjtgq9().s[33]++;
      throw new Error(`Configuration key "${String(key)}" not found.`);
    } else
    /* istanbul ignore next */
    {
      cov_db1hjtgq9().b[15][1]++;
    }
    cov_db1hjtgq9().s[34]++;
    this.logger.debug(`获取配置值: ${String(key)}`, logging_1.LogContext.CONFIG, {
      configKey: String(key),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_db1hjtgq9().s[35]++;
    return this.config[key];
  }
  /**
   * @getter appConfig
   * @description
   * 获取应用基础配置，包含应用名称、版本、环境等基础信息。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的应用配置对象
   */
  get appConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[7]++;
    cov_db1hjtgq9().s[36]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[16][0]++, this.config.app) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[16][1]++, {});
  }
  /**
   * @getter databaseConfig
   * @description
   * 获取数据库配置，包含数据库连接、ORM配置、连接池等设置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的数据库配置对象
   */
  get databaseConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[8]++;
    cov_db1hjtgq9().s[37]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[17][0]++, this.config.database) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[17][1]++, {});
  }
  /**
   * @getter redisConfig
   * @description
   * 获取Redis缓存配置，包含连接信息、缓存策略、分布式锁等设置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的Redis配置对象
   */
  get redisConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[9]++;
    cov_db1hjtgq9().s[38]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[18][0]++, this.config.redis) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[18][1]++, {});
  }
  /**
   * @getter jwtConfig
   * @description
   * 获取JWT认证配置，包含密钥、令牌过期时间、多租户支持等设置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的JWT配置对象
   */
  get jwtConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[10]++;
    cov_db1hjtgq9().s[39]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[19][0]++, this.config.jwt) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[19][1]++, {});
  }
  /**
   * @getter emailConfig
   * @description
   * 获取邮件服务配置，包含SMTP设置、邮件模板、发送策略等配置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的邮件配置对象
   */
  get emailConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[11]++;
    cov_db1hjtgq9().s[40]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[20][0]++, this.config.email) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[20][1]++, {});
  }
  /**
   * @getter loggingConfig
   * @description
   * 获取日志系统配置，包含日志级别、输出格式、聚合设置等配置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的日志配置对象
   */
  get loggingConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[12]++;
    cov_db1hjtgq9().s[41]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[21][0]++, this.config.logging) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[21][1]++, {});
  }
  /**
   * @getter settingConfig
   * @description
   * 获取系统设置配置，包含系统级配置项和全局设置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的系统设置配置对象
   */
  get settingConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[13]++;
    cov_db1hjtgq9().s[42]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[22][0]++, this.config.setting) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[22][1]++, {});
  }
  /**
   * @getter keycloakConfig
   * @description
   * 获取Keycloak集成配置，包含第三方认证服务的连接和设置。
   *
   * @returns {Readonly<Record<string, unknown>>} 返回只读的Keycloak配置对象
   */
  get keycloakConfig() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[14]++;
    cov_db1hjtgq9().s[43]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[23][0]++, this.config.keycloak) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[23][1]++, {});
  }
  /**
   * @getter dbMikroOrmConnectionOptions
   * @description
   * 获取MikroORM连接配置选项，用于数据库连接和ORM操作。
   *
   * @returns {Readonly<MikroOrmModuleOptions>} 返回只读的MikroORM配置对象
   */
  get dbMikroOrmConnectionOptions() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[15]++;
    cov_db1hjtgq9().s[44]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[24][0]++, this.config.database?.dbMikroOrmConnectionOptions) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[24][1]++, {});
  }
  /**
   * @getter dbKnexConnectionOptions
   * @description
   * 获取Knex连接配置选项，用于复杂查询和数据库迁移。
   *
   * @returns {Readonly<KnexModuleOptions>} 返回只读的Knex配置对象
   */
  get dbKnexConnectionOptions() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[16]++;
    cov_db1hjtgq9().s[45]++;
    return /* istanbul ignore next */(cov_db1hjtgq9().b[25][0]++, this.config.database?.dbKnexConnectionOptions) ??
    /* istanbul ignore next */
    (cov_db1hjtgq9().b[25][1]++, {
      config: {}
    });
  }
  /**
   * @function get
   * @description
   * 获取环境变量值，支持类型推断。该方法提供了对环境变量的类型安全访问，
   * 如果环境变量不存在会抛出错误。
   *
   * 主要原理与机制如下：
   * 1. 使用泛型K约束环境变量键的类型
   * 2. 检查环境变量是否存在，不存在则抛出错误
   * 3. 返回类型安全的环境变量值
   * 4. 支持TypeScript的类型推断和自动补全
   * 5. 记录环境变量访问日志，便于审计和调试
   *
   * 功能与业务规则：
   * 1. 环境变量获取
   * 2. 类型安全访问
   * 3. 错误处理和提示
   * 4. 环境变量验证
   * 5. 环境变量访问审计
   *
   * @template K - 环境变量键的类型
   * @param {K} key - 要获取的环境变量键
   * @returns {string} 返回对应的环境变量值
   * @throws {Error} 当环境变量不存在时抛出错误
   */
  get(key) {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[17]++;
    const value =
    /* istanbul ignore next */
    (cov_db1hjtgq9().s[46]++, process.env[key]);
    /* istanbul ignore next */
    cov_db1hjtgq9().s[47]++;
    if (!value) {
      /* istanbul ignore next */
      cov_db1hjtgq9().b[26][0]++;
      cov_db1hjtgq9().s[48]++;
      this.logger.error(`环境变量未定义: ${key}`, logging_1.LogContext.CONFIG, {
        requestedKey: key,
        availableEnvVars: Object.keys(process.env).filter(k => {
          /* istanbul ignore next */
          cov_db1hjtgq9().f[18]++;
          cov_db1hjtgq9().s[49]++;
          return /* istanbul ignore next */(cov_db1hjtgq9().b[27][0]++, k.startsWith('DB_')) ||
          /* istanbul ignore next */
          (cov_db1hjtgq9().b[27][1]++, k.startsWith('LOG_')) ||
          /* istanbul ignore next */
          (cov_db1hjtgq9().b[27][2]++, k.startsWith('JWT_'));
        }),
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_db1hjtgq9().s[50]++;
      throw new Error(`Environment variable "${key}" is not defined.`);
    } else
    /* istanbul ignore next */
    {
      cov_db1hjtgq9().b[26][1]++;
    }
    cov_db1hjtgq9().s[51]++;
    this.logger.debug(`获取环境变量: ${key}`, logging_1.LogContext.CONFIG, {
      envKey: key,
      hasValue: !!value,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_db1hjtgq9().s[52]++;
    return value;
  }
  /**
   * @function isProd
   * @description
   * 检查应用是否运行在生产环境模式。该方法用于判断当前运行环境，
   * 帮助应用根据环境调整行为。
   *
   * 主要原理与机制如下：
   * 1. 从环境配置中获取production标志
   * 2. 返回布尔值表示是否为生产环境
   * 3. 用于条件逻辑和环境相关配置
   *
   * 功能与业务规则：
   * 1. 环境判断
   * 2. 条件逻辑支持
   * 3. 环境相关配置
   * 4. 调试和部署支持
   *
   * @returns {boolean} 返回true表示生产环境，false表示非生产环境
   */
  isProd() {
    /* istanbul ignore next */
    cov_db1hjtgq9().f[19]++;
    cov_db1hjtgq9().s[53]++;
    return this.environment.production;
  }
};
/* istanbul ignore next */
cov_db1hjtgq9().s[54]++;
exports.ConfigService = ConfigService;
/* istanbul ignore next */
cov_db1hjtgq9().s[55]++;
exports.ConfigService = ConfigService = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_db1hjtgq9().b[29][0]++, typeof logging_1.PinoLoggerService !== "undefined") &&
/* istanbul ignore next */
(cov_db1hjtgq9().b[29][1]++, logging_1.PinoLoggerService)) === "function" ?
/* istanbul ignore next */
(cov_db1hjtgq9().b[28][0]++, _a) :
/* istanbul ignore next */
(cov_db1hjtgq9().b[28][1]++, Object)])], ConfigService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,