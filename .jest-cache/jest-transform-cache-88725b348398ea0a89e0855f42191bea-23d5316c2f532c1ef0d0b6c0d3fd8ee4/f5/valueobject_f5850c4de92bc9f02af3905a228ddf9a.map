{"version":3,"names":["ValueObject","constructor","value","cov_tn7b26wh","f","s","_value","Object","freeze","equals","other","b","undefined","deepEquals","a","Array","isArray","length","i","keysA","keys","keysB","key","includes","toString","JSON","stringify","hashCode","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/value-object.ts"],"sourcesContent":["/**\n * 值对象基类\n *\n * 设计原理：\n * - 值对象是不可变的\n * - 值对象通过值相等性进行比较\n * - 值对象不包含标识符\n * - 值对象封装业务概念和规则\n *\n * 业务规则：\n * - 值对象一旦创建就不能修改\n * - 值对象通过值而不是引用进行比较\n * - 值对象可以包含验证逻辑\n */\nexport abstract class ValueObject<T> {\n  protected readonly _value: T;\n\n  constructor(value: T) {\n    this._value = Object.freeze(value);\n  }\n\n  /**\n   * 获取值对象的值\n   *\n   * @returns 值对象的值\n   */\n  public get value(): T {\n    return this._value;\n  }\n\n  /**\n   * 比较两个值对象是否相等\n   *\n   * @param other 另一个值对象\n   * @returns 是否相等\n   */\n  public equals(other: ValueObject<T>): boolean {\n    if (other === null || other === undefined) {\n      return false;\n    }\n\n    if (this === other) {\n      return true;\n    }\n\n    return this.deepEquals(this._value, other._value);\n  }\n\n  /**\n   * 深度比较两个值是否相等\n   *\n   * @param a 第一个值\n   * @param b 第二个值\n   * @returns 是否相等\n   */\n  private deepEquals(a: any, b: any): boolean {\n    if (a === b) {\n      return true;\n    }\n\n    if (a === null || b === null || a === undefined || b === undefined) {\n      return false;\n    }\n\n    if (typeof a !== typeof b) {\n      return false;\n    }\n\n    if (typeof a === 'object') {\n      if (Array.isArray(a) !== Array.isArray(b)) {\n        return false;\n      }\n\n      if (Array.isArray(a)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (!this.deepEquals(a[i], b[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      const keysA = Object.keys(a);\n      const keysB = Object.keys(b);\n\n      if (keysA.length !== keysB.length) {\n        return false;\n      }\n\n      for (const key of keysA) {\n        if (!keysB.includes(key)) {\n          return false;\n        }\n        if (!this.deepEquals(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * 获取值对象的字符串表示\n   *\n   * @returns 字符串表示\n   */\n  public toString(): string {\n    if (typeof this._value === 'string') {\n      return this._value;\n    }\n    return JSON.stringify(this._value);\n  }\n\n  /**\n   * 获取值对象的哈希码\n   *\n   * @returns 哈希码\n   */\n  public hashCode(): string {\n    return this.toString();\n  }\n}\n"],"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","ignoreList":[]}