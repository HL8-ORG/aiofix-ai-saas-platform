{"version":3,"names":["common_1","cov_193qd4fmbp","s","require","logging_interface_1","PinoLoggerConfigService","constructor","customConfig","f","config","initializeConfig","getConfig","updateConfig","newConfig","validateConfig","getLevel","level","setLevel","getFormat","format","setFormat","isProduction","process","env","NODE_ENV","isDevelopment","shouldUsePrettyFormat","b","LogFormat","TEXT","resetToDefaults","validLevels","validFormats","JSON","includes","Error","join","rotation","maxSize","isValidFileSize","remote","url","timeout","retries","defaultFormat","defaultConfig","LOG_LEVEL","LOG_FORMAT","colorize","timestamp","requestId","tenantId","userId","performance","stackTrace","filePath","LOG_FILE_PATH","maxFiles","interval","LOG_REMOTE_URL","token","LOG_REMOTE_TOKEN","undefined","size","sizeRegex","test","exports","__decorate","Injectable","__param","Optional","Inject","Partial","_a","Object","defaultLoggingConfig"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger-config.service.ts"],"sourcesContent":["import { Inject, Injectable, Optional } from '@nestjs/common';\nimport { LogConfig, LogFormat } from '../interfaces/logging.interface';\n\nexport type LogLevel = 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';\n\n/**\n * @class PinoLoggerConfigService\n * @description\n * Pino日志配置管理服务，负责日志配置的初始化、验证和管理。\n *\n * 主要功能包括：\n * 1. 从环境变量和默认值初始化配置\n * 2. 配置验证和类型检查\n * 3. 配置更新和动态调整\n * 4. 环境相关的配置适配\n * 5. 配置持久化和恢复\n *\n * 设计原则：\n * - 单一职责：只负责配置管理\n * - 可测试性：配置逻辑独立，易于单元测试\n * - 可扩展性：支持多种配置源和验证规则\n */\n@Injectable()\nexport class PinoLoggerConfigService {\n  private config: LogConfig = {} as LogConfig;\n\n  constructor(\n    @Optional()\n    @Inject('LOGGING_CONFIG')\n    private customConfig?: Partial<LogConfig>,\n  ) {\n    this.initializeConfig();\n  }\n\n  /**\n   * @method getConfig\n   * @description 获取当前日志配置\n   * @returns {LogConfig} 当前配置的副本\n   */\n  getConfig(): LogConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * @method updateConfig\n   * @description 更新日志配置\n   * @param {Partial<LogConfig>} newConfig 新的配置项\n   */\n  updateConfig(newConfig: Partial<LogConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.validateConfig(this.config);\n  }\n\n  /**\n   * @method getLevel\n   * @description 获取当前日志级别\n   * @returns {LogLevel} 当前日志级别\n   */\n  getLevel(): LogLevel {\n    return this.config.level;\n  }\n\n  /**\n   * @method setLevel\n   * @description 设置日志级别\n   * @param {LogLevel} level 新的日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.updateConfig({ level });\n  }\n\n  /**\n   * @method getFormat\n   * @description 获取当前日志格式\n   * @returns {LogFormat} 当前日志格式\n   */\n  getFormat(): LogFormat {\n    return this.config.format;\n  }\n\n  /**\n   * @method setFormat\n   * @description 设置日志格式\n   * @param {LogFormat} format 新的日志格式\n   */\n  setFormat(format: LogFormat): void {\n    this.updateConfig({ format });\n  }\n\n  /**\n   * @method isProduction\n   * @description 检查是否为生产环境\n   * @returns {boolean} 是否为生产环境\n   */\n  isProduction(): boolean {\n    return process.env.NODE_ENV === 'production';\n  }\n\n  /**\n   * @method isDevelopment\n   * @description 检查是否为开发环境\n   * @returns {boolean} 是否为开发环境\n   */\n  isDevelopment(): boolean {\n    return process.env.NODE_ENV !== 'production';\n  }\n\n  /**\n   * @method shouldUsePrettyFormat\n   * @description 判断是否应该使用美化格式\n   * @returns {boolean} 是否使用美化格式\n   */\n  shouldUsePrettyFormat(): boolean {\n    return this.config.format === LogFormat.TEXT && this.isDevelopment();\n  }\n\n  /**\n   * @method resetToDefaults\n   * @description 重置为默认配置\n   */\n  resetToDefaults(): void {\n    this.initializeConfig();\n  }\n\n  /**\n   * @method validateConfig\n   * @description 验证配置的有效性\n   * @param {LogConfig} config 要验证的配置\n   * @throws {Error} 配置无效时抛出错误\n   */\n  validateConfig(config: LogConfig): void {\n    const validLevels: LogLevel[] = [\n      'fatal',\n      'error',\n      'warn',\n      'info',\n      'debug',\n      'trace',\n    ];\n    const validFormats: LogFormat[] = [LogFormat.JSON, LogFormat.TEXT];\n\n    if (!validLevels.includes(config.level)) {\n      throw new Error(\n        `Invalid log level: ${config.level}. Valid levels are: ${validLevels.join(', ')}`,\n      );\n    }\n\n    if (!validFormats.includes(config.format)) {\n      throw new Error(\n        `Invalid log format: ${config.format}. Valid formats are: ${validFormats.join(', ')}`,\n      );\n    }\n\n    if (config.rotation) {\n      if (\n        config.rotation.maxSize &&\n        !this.isValidFileSize(config.rotation.maxSize)\n      ) {\n        throw new Error(\n          `Invalid maxSize format: ${config.rotation.maxSize}. Use format like '10m', '1g'`,\n        );\n      }\n    }\n\n    if (config.remote) {\n      if (!config.remote.url) {\n        throw new Error(\n          'Remote logging URL is required when remote logging is enabled',\n        );\n      }\n      if (config.remote.timeout && config.remote.timeout <= 0) {\n        throw new Error('Remote logging timeout must be positive');\n      }\n      if (config.remote.retries && config.remote.retries < 0) {\n        throw new Error('Remote logging retries must be non-negative');\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @method initializeConfig\n   * @description 初始化日志配置\n   */\n  private initializeConfig(): void {\n    // 根据环境确定默认格式\n    const defaultFormat = this.isProduction() ? LogFormat.JSON : LogFormat.TEXT;\n\n    // 默认配置\n    const defaultConfig: LogConfig = {\n      level: (process.env.LOG_LEVEL as LogLevel | undefined) ?? 'info',\n      format:\n        (process.env.LOG_FORMAT as LogFormat | undefined) ?? defaultFormat,\n      colorize: this.isDevelopment(),\n      timestamp: true,\n      requestId: true,\n      tenantId: true,\n      userId: true,\n      performance: true,\n      stackTrace: true,\n      filePath: process.env.LOG_FILE_PATH,\n      rotation: {\n        maxSize: '10m',\n        maxFiles: 5,\n        interval: '1d',\n      },\n      remote: process.env.LOG_REMOTE_URL\n        ? {\n            url: process.env.LOG_REMOTE_URL,\n            token: process.env.LOG_REMOTE_TOKEN,\n            timeout: 5000,\n            retries: 3,\n          }\n        : undefined,\n    };\n\n    // 合并自定义配置\n    this.config = {\n      ...defaultConfig,\n      ...this.customConfig,\n    };\n\n    this.validateConfig(this.config);\n  }\n\n  /**\n   * @private\n   * @method isValidFileSize\n   * @description 验证文件大小格式是否有效\n   * @param {string} size 文件大小字符串\n   * @returns {boolean} 是否有效\n   */\n  private isValidFileSize(size: string): boolean {\n    const sizeRegex = /^\\d+[kmg]?$/i;\n    return sizeRegex.test(size);\n  }\n}\n\n/**\n * @constant defaultLoggingConfig\n * @description 默认日志配置\n */\nexport const defaultLoggingConfig: LogConfig = {\n  level: 'info',\n  format: LogFormat.JSON,\n  colorize: false,\n  timestamp: true,\n  requestId: true,\n  tenantId: true,\n  userId: true,\n  performance: true,\n  stackTrace: true,\n  rotation: {\n    maxSize: '10m',\n    maxFiles: 5,\n    interval: '1d',\n  },\n};\n"],"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","ignoreList":[]}