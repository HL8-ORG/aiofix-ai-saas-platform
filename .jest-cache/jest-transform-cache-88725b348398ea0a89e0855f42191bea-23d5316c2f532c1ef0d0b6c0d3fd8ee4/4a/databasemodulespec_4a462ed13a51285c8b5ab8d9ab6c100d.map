{"file":"/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/database.module.spec.ts","mappings":";AAAA;;;GAGG;;AAOH,yDAAyD;AACzD,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;AAN3C,6CAAsD;AACtD,2CAA8C;AAC9C,uDAAmD;AAMnD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,MAAqB,CAAC;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,GAAG,MAAM,cAAI,CAAC,mBAAmB,CAAC;YACtC,OAAO,EAAE;gBACP,qBAAY,CAAC,OAAO,CAAC;oBACnB,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,WAAW;iBACzB,CAAC;gBACF,gCAAc,CAAC,QAAQ,CAAC;oBACtB,UAAU,EAAE,KAAK,EAAE,sBAAsB;iBAC1C,CAAC;aACH;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;YAC7B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/database.module.spec.ts"],"sourcesContent":["/**\n * @file database.module.spec.ts\n * @description 数据库模块单元测试\n */\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './database.module';\nimport { DatabaseConfig } from './config/database.config';\n\n// Mock the adapters to avoid actual database connections\njest.mock('./adapters/postgresql.adapter');\n\ndescribe('DatabaseModule', () => {\n  let module: TestingModule;\n\n  beforeEach(async () => {\n    module = await Test.createTestingModule({\n      imports: [\n        ConfigModule.forRoot({\n          isGlobal: true,\n          envFilePath: '.env.test',\n        }),\n        DatabaseModule.register({\n          postgresql: false, // 禁用PostgreSQL以避免连接测试\n        }),\n      ],\n    }).compile();\n  });\n\n  afterEach(async () => {\n    if (module) {\n      await module.close();\n    }\n  });\n\n  describe('Module Registration', () => {\n    it('should be defined', () => {\n      expect(module).toBeDefined();\n    });\n\n    it('should have database name provider', () => {\n      const name = module.get('DATABASE_NAME');\n      expect(name).toBeDefined();\n      expect(name).toBe('postgresql');\n    });\n  });\n\n  describe('Module Structure', () => {\n    it('should be a valid NestJS module', () => {\n      expect(module).toBeDefined();\n      expect(module.get).toBeDefined();\n    });\n\n    it('should have DATABASE_NAME provider', () => {\n      const name = module.get('DATABASE_NAME');\n      expect(name).toBe('postgresql');\n    });\n  });\n});\n"],"version":3}