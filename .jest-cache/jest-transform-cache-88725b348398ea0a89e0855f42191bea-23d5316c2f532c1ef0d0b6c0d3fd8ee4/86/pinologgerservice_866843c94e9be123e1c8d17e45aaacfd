ed215738f6149ed43ec8b517857dc0e2
"use strict";

/* istanbul ignore next */
function cov_179xblmwcd() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts";
  var hash = "4f13f01e0fed1a3e83269f8a421ddfbf47505df4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "15": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "16": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "17": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "18": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 70
        }
      },
      "19": {
        start: {
          line: 19,
          column: 37
        },
        end: {
          line: 19,
          column: 76
        }
      },
      "20": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 73
        }
      },
      "21": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 333,
          column: 1
        }
      },
      "22": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "23": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "25": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "26": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 25
        }
      },
      "27": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "29": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 25
        }
      },
      "30": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 61
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 60
        }
      },
      "32": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 60
        }
      },
      "33": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 61
        }
      },
      "34": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 61
        }
      },
      "35": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 61
        }
      },
      "36": {
        start: {
          line: 120,
          column: 36
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "37": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 149
        }
      },
      "38": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 85
        }
      },
      "39": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 81
        }
      },
      "40": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 39
        }
      },
      "41": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 151,
          column: 10
        }
      },
      "42": {
        start: {
          line: 153,
          column: 29
        },
        end: {
          line: 153,
          column: 121
        }
      },
      "43": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 42
        }
      },
      "44": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "45": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 28
        }
      },
      "46": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 43
        }
      },
      "47": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 56
        }
      },
      "48": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 45
        }
      },
      "49": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 48
        }
      },
      "50": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 56
        }
      },
      "51": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 46
        }
      },
      "52": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "53": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 194,
          column: 46
        }
      },
      "54": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "55": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 29
        }
      },
      "56": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 27
        }
      },
      "57": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 27
        }
      },
      "58": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "59": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 31
        }
      },
      "60": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 266,
          column: 10
        }
      },
      "61": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "62": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 60
        }
      },
      "63": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 39
        }
      },
      "64": {
        start: {
          line: 285,
          column: 23
        },
        end: {
          line: 285,
          column: 53
        }
      },
      "65": {
        start: {
          line: 287,
          column: 26
        },
        end: {
          line: 287,
          column: 51
        }
      },
      "66": {
        start: {
          line: 288,
          column: 25
        },
        end: {
          line: 288,
          column: 49
        }
      },
      "67": {
        start: {
          line: 289,
          column: 23
        },
        end: {
          line: 289,
          column: 45
        }
      },
      "68": {
        start: {
          line: 290,
          column: 24
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "69": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "70": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 305,
          column: 14
        }
      },
      "71": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 98
        }
      },
      "72": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 36
        }
      },
      "73": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 319,
          column: 11
        }
      },
      "74": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 31
        }
      },
      "75": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 40
        }
      },
      "76": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 44
        }
      },
      "77": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 43
        }
      },
      "78": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 44
        }
      },
      "79": {
        start: {
          line: 334,
          column: 0
        },
        end: {
          line: 334,
          column: 46
        }
      },
      "80": {
        start: {
          line: 335,
          column: 0
        },
        end: {
          line: 338,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 65
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 45
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 44
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 45
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 98
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 45
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 105
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 112
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 56
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 139
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 29
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 146
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 162
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 170
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 177
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 18
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 192
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 18
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 204
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 28
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 15
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 218
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 17
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 233
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 22
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 242
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 30
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 273
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 50
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 283
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 41
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 326
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 126,
            column: 73
          },
          end: {
            line: 126,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 73
          },
          end: {
            line: 126,
            column: 80
          }
        }, {
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 126,
            column: 126
          }
        }],
        line: 126
      },
      "14": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "15": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 197,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 197,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "16": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 42
          }
        }, {
          start: {
            line: 195,
            column: 46
          },
          end: {
            line: 195,
            column: 61
          }
        }, {
          start: {
            line: 195,
            column: 65
          },
          end: {
            line: 195,
            column: 81
          }
        }],
        line: 195
      },
      "17": {
        loc: {
          start: {
            line: 223,
            column: 28
          },
          end: {
            line: 225,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 18
          },
          end: {
            line: 224,
            column: 64
          }
        }, {
          start: {
            line: 225,
            column: 18
          },
          end: {
            line: 225,
            column: 19
          }
        }],
        line: 223
      },
      "18": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "19": {
        loc: {
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 292,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 292,
            column: 28
          }
        }, {
          start: {
            line: 292,
            column: 32
          },
          end: {
            line: 292,
            column: 69
          }
        }],
        line: 292
      },
      "20": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "21": {
        loc: {
          start: {
            line: 302,
            column: 23
          },
          end: {
            line: 302,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 43
          },
          end: {
            line: 302,
            column: 54
          }
        }, {
          start: {
            line: 302,
            column: 57
          },
          end: {
            line: 302,
            column: 66
          }
        }],
        line: 302
      },
      "22": {
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 39
          }
        }, {
          start: {
            line: 308,
            column: 43
          },
          end: {
            line: 308,
            column: 80
          }
        }],
        line: 308
      },
      "23": {
        loc: {
          start: {
            line: 315,
            column: 21
          },
          end: {
            line: 315,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 21
          },
          end: {
            line: 315,
            column: 28
          }
        }, {
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 315,
            column: 69
          }
        }],
        line: 315
      },
      "24": {
        loc: {
          start: {
            line: 337,
            column: 37
          },
          end: {
            line: 337,
            column: 165
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 337,
            column: 154
          },
          end: {
            line: 337,
            column: 156
          }
        }, {
          start: {
            line: 337,
            column: 159
          },
          end: {
            line: 337,
            column: 165
          }
        }],
        line: 337
      },
      "25": {
        loc: {
          start: {
            line: 337,
            column: 50
          },
          end: {
            line: 337,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 50
          },
          end: {
            line: 337,
            column: 102
          }
        }, {
          start: {
            line: 337,
            column: 106
          },
          end: {
            line: 337,
            column: 135
          }
        }],
        line: 337
      },
      "26": {
        loc: {
          start: {
            line: 337,
            column: 167
          },
          end: {
            line: 337,
            column: 341
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 337,
            column: 330
          },
          end: {
            line: 337,
            column: 332
          }
        }, {
          start: {
            line: 337,
            column: 335
          },
          end: {
            line: 337,
            column: 341
          }
        }],
        line: 337
      },
      "27": {
        loc: {
          start: {
            line: 337,
            column: 180
          },
          end: {
            line: 337,
            column: 311
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 180
          },
          end: {
            line: 337,
            column: 255
          }
        }, {
          start: {
            line: 337,
            column: 259
          },
          end: {
            line: 337,
            column: 311
          }
        }],
        line: 337
      },
      "28": {
        loc: {
          start: {
            line: 337,
            column: 343
          },
          end: {
            line: 337,
            column: 491
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 337,
            column: 480
          },
          end: {
            line: 337,
            column: 482
          }
        }, {
          start: {
            line: 337,
            column: 485
          },
          end: {
            line: 337,
            column: 491
          }
        }],
        line: 337
      },
      "29": {
        loc: {
          start: {
            line: 337,
            column: 356
          },
          end: {
            line: 337,
            column: 461
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 356
          },
          end: {
            line: 337,
            column: 418
          }
        }, {
          start: {
            line: 337,
            column: 422
          },
          end: {
            line: 337,
            column: 461
          }
        }],
        line: 337
      },
      "30": {
        loc: {
          start: {
            line: 337,
            column: 493
          },
          end: {
            line: 337,
            column: 609
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 337,
            column: 598
          },
          end: {
            line: 337,
            column: 600
          }
        }, {
          start: {
            line: 337,
            column: 603
          },
          end: {
            line: 337,
            column: 609
          }
        }],
        line: 337
      },
      "31": {
        loc: {
          start: {
            line: 337,
            column: 506
          },
          end: {
            line: 337,
            column: 579
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 506
          },
          end: {
            line: 337,
            column: 552
          }
        }, {
          start: {
            line: 337,
            column: 556
          },
          end: {
            line: 337,
            column: 579
          }
        }],
        line: 337
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts"],
      sourcesContent: ["import { Injectable, OnModuleDestroy } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { ClsService } from 'nestjs-cls';\nimport pino from 'pino';\nimport {\n  ILoggerService,\n  LogContext,\n  LogConfig,\n  LogMetadata,\n} from '../interfaces/logging.interface';\nimport {\n  PinoLoggerConfigService,\n  LogLevel,\n} from './pino-logger-config.service';\nimport { PinoLoggerFactory } from '../factories/pino-logger.factory';\n\n/**\n * @class PinoLoggerService\n * @description\n * \u57FA\u4E8EPino\u7684\u65E5\u5FD7\u670D\u52A1\u5B9E\u73B0\u7C7B\uFF0C\u63D0\u4F9B\u9AD8\u6027\u80FD\u7684\u7ED3\u6784\u5316\u65E5\u5FD7\u529F\u80FD\u3002\n *\n * \u4E3B\u8981\u529F\u80FD\u5305\u62EC\uFF1A\n * 1. \u652F\u6301\u591A\u79CD\u65E5\u5FD7\u7EA7\u522B\uFF08trace, debug, info, warn, error, fatal\uFF09\n * 2. \u7ED3\u6784\u5316\u65E5\u5FD7\u8F93\u51FA\uFF08JSON\u683C\u5F0F\uFF09\n * 3. \u65E5\u5FD7\u4E0A\u4E0B\u6587\u548C\u5143\u6570\u636E\u652F\u6301\n * 4. \u6027\u80FD\u76D1\u63A7\u548C\u9519\u8BEF\u8FFD\u8E2A\n * 5. \u65E5\u5FD7\u914D\u7F6E\u7BA1\u7406\u548C\u52A8\u6001\u66F4\u65B0\n * 6. \u5B50\u65E5\u5FD7\u5668\u521B\u5EFA\u548C\u7BA1\u7406\n * 7. \u65E5\u5FD7\u7EDF\u8BA1\u548C\u76D1\u63A7\n *\n * @implements {ILoggerService}\n * @implements {OnModuleDestroy}\n */\n@Injectable()\nexport class PinoLoggerService implements ILoggerService, OnModuleDestroy {\n  private logger: pino.Logger = {} as pino.Logger;\n  private stats: {\n    totalLogs: number;\n    logsByLevel: Record<LogLevel, number>;\n    logsByContext: Record<LogContext, number>;\n    totalLogSize: number;\n    lastLogTime?: Date;\n  } = {\n    totalLogs: 0,\n    logsByLevel: {\n      fatal: 0,\n      error: 0,\n      warn: 0,\n      info: 0,\n      debug: 0,\n      trace: 0,\n    },\n    logsByContext: {\n      [LogContext.HTTP_REQUEST]: 0,\n      [LogContext.DATABASE]: 0,\n      [LogContext.BUSINESS]: 0,\n      [LogContext.AUTH]: 0,\n      [LogContext.CONFIG]: 0,\n      [LogContext.CACHE]: 0,\n      [LogContext.EVENT]: 0,\n      [LogContext.SYSTEM]: 0,\n      [LogContext.EXTERNAL]: 0,\n      [LogContext.PERFORMANCE]: 0,\n    },\n    totalLogSize: 0,\n  };\n\n  constructor(\n    private readonly eventEmitter: EventEmitter2,\n    private readonly configService: PinoLoggerConfigService,\n    private readonly loggerFactory: PinoLoggerFactory,\n    private readonly cls: ClsService,\n  ) {\n    this.initializeStats();\n    // \u5EF6\u8FDF\u521D\u59CB\u5316logger\uFF0C\u907F\u514D\u5FAA\u73AF\u4F9D\u8D56\n    this.logger = {} as pino.Logger;\n  }\n\n  /**\n   * @method debug\n   * @description \u8BB0\u5F55\u8C03\u8BD5\u65E5\u5FD7\n   */\n  debug(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('debug', message, context, metadata, error);\n  }\n\n  /**\n   * @method info\n   * @description \u8BB0\u5F55\u4FE1\u606F\u65E5\u5FD7\n   */\n  info(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('info', message, context, metadata, error);\n  }\n\n  /**\n   * @method warn\n   * @description \u8BB0\u5F55\u8B66\u544A\u65E5\u5FD7\n   */\n  warn(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('warn', message, context, metadata, error);\n  }\n\n  /**\n   * @method error\n   * @description \u8BB0\u5F55\u9519\u8BEF\u65E5\u5FD7\n   */\n  error(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('error', message, context, metadata, error);\n  }\n\n  /**\n   * @method fatal\n   * @description \u8BB0\u5F55\u81F4\u547D\u9519\u8BEF\u65E5\u5FD7\n   */\n  fatal(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('fatal', message, context, metadata, error);\n  }\n\n  /**\n   * @method trace\n   * @description \u8BB0\u5F55\u8DDF\u8E2A\u65E5\u5FD7\n   */\n  trace(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('trace', message, context, metadata, error);\n  }\n\n  /**\n   * @method performance\n   * @description \u8BB0\u5F55\u6027\u80FD\u65E5\u5FD7\n   */\n  performance(\n    operation: string,\n    duration: number,\n    context?: LogContext,\n    metadata?: LogMetadata,\n  ): void {\n    const performanceMetadata: LogMetadata = {\n      ...metadata,\n      operation,\n      duration,\n      type: 'performance',\n    };\n    this.log(\n      'info',\n      `Performance: ${operation} took ${duration}ms`,\n      context ?? LogContext.PERFORMANCE,\n      performanceMetadata,\n    );\n  }\n\n  /**\n   * @method business\n   * @description \u8BB0\u5F55\u4E1A\u52A1\u65E5\u5FD7\n   */\n  business(message: string, metadata?: LogMetadata): void {\n    this.log('info', message, LogContext.BUSINESS, metadata);\n  }\n\n  /**\n   * @method security\n   * @description \u8BB0\u5F55\u5B89\u5168\u65E5\u5FD7\n   */\n  security(message: string, metadata?: LogMetadata): void {\n    this.log('warn', message, LogContext.AUTH, metadata);\n  }\n\n  /**\n   * @method child\n   * @description \u521B\u5EFA\u5B50\u65E5\u5FD7\u5668\n   */\n  child(context: LogContext, metadata?: LogMetadata): ILoggerService {\n    this.ensureLoggerInitialized();\n    const childLogger = this.loggerFactory.createChildLogger(this.logger, {\n      context,\n      ...metadata,\n    });\n\n    // \u521B\u5EFA\u4E00\u4E2A\u65B0\u7684PinoLoggerService\u5B9E\u4F8B\uFF0C\u4F7F\u7528\u5B50\u65E5\u5FD7\u5668\n    const childService = new PinoLoggerService(\n      this.eventEmitter,\n      this.configService,\n      this.loggerFactory,\n      this.cls,\n    );\n    (\n      childService as unknown as {\n        logger: pino.Logger;\n        stats: PinoLoggerService['stats'];\n      }\n    ).logger = childLogger;\n    (\n      childService as unknown as {\n        logger: pino.Logger;\n        stats: PinoLoggerService['stats'];\n      }\n    ).stats = this.stats;\n\n    return childService;\n  }\n\n  /**\n   * @method setLevel\n   * @description \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B\n   */\n  setLevel(level: LogLevel): void {\n    this.configService.setLevel(level);\n    this.logger = this.loggerFactory.createLogger();\n  }\n\n  /**\n   * @method getLevel\n   * @description \u83B7\u53D6\u65E5\u5FD7\u7EA7\u522B\n   */\n  getLevel(): LogLevel {\n    return this.configService.getLevel();\n  }\n\n  /**\n   * @method updateConfig\n   * @description \u66F4\u65B0\u65E5\u5FD7\u914D\u7F6E\n   */\n  updateConfig(config: Partial<LogConfig>): void {\n    this.configService.updateConfig(config);\n    this.logger = this.loggerFactory.createLogger();\n  }\n\n  /**\n   * @method getConfig\n   * @description \u83B7\u53D6\u65E5\u5FD7\u914D\u7F6E\n   */\n  getConfig(): LogConfig {\n    return this.configService.getConfig();\n  }\n\n  /**\n   * @method flush\n   * @description \u5237\u65B0\u65E5\u5FD7\u7F13\u51B2\u533A\n   */\n  async flush(): Promise<void> {\n    if (typeof this.logger.flush === 'function') {\n      const result = this.logger.flush() as unknown;\n      if (typeof result === 'object' && result !== null && 'then' in result) {\n        await (result as Promise<void>);\n      }\n    }\n  }\n\n  /**\n   * @method close\n   * @description \u5173\u95ED\u65E5\u5FD7\u5668\n   */\n  async close(): Promise<void> {\n    await this.flush();\n  }\n\n  /**\n   * @method onModuleDestroy\n   * @description \u6A21\u5757\u9500\u6BC1\u65F6\u7684\u6E05\u7406\u5DE5\u4F5C\n   */\n  async onModuleDestroy(): Promise<void> {\n    await this.close();\n  }\n\n  /**\n   * @method getStats\n   * @description \u83B7\u53D6\u65E5\u5FD7\u7EDF\u8BA1\u4FE1\u606F\n   */\n  getStats(): {\n    totalLogs: number;\n    logsByLevel: Record<LogLevel, number>;\n    logsByContext: Record<LogContext, number>;\n    averageLogSize: number;\n    lastLogTime?: Date;\n  } {\n    return {\n      totalLogs: this.stats.totalLogs,\n      logsByLevel: { ...this.stats.logsByLevel },\n      logsByContext: { ...this.stats.logsByContext },\n      averageLogSize:\n        this.stats.totalLogs > 0\n          ? this.stats.totalLogSize / this.stats.totalLogs\n          : 0,\n      lastLogTime: this.stats.lastLogTime,\n    };\n  }\n\n  /**\n   * @method resetStats\n   * @description \u91CD\u7F6E\u65E5\u5FD7\u7EDF\u8BA1\n   */\n  resetStats(): void {\n    this.initializeStats();\n  }\n\n  // \u79C1\u6709\u8F85\u52A9\u65B9\u6CD5\n\n  /**\n   * @private\n   * @method initializeStats\n   * @description \u521D\u59CB\u5316\u7EDF\u8BA1\u4FE1\u606F\n   */\n  private initializeStats(): void {\n    this.stats = {\n      totalLogs: 0,\n      logsByLevel: {\n        trace: 0,\n        debug: 0,\n        info: 0,\n        warn: 0,\n        error: 0,\n        fatal: 0,\n      },\n      logsByContext: {\n        [LogContext.HTTP_REQUEST]: 0,\n        [LogContext.DATABASE]: 0,\n        [LogContext.BUSINESS]: 0,\n        [LogContext.AUTH]: 0,\n        [LogContext.CONFIG]: 0,\n        [LogContext.CACHE]: 0,\n        [LogContext.EVENT]: 0,\n        [LogContext.SYSTEM]: 0,\n        [LogContext.EXTERNAL]: 0,\n        [LogContext.PERFORMANCE]: 0,\n      },\n      totalLogSize: 0,\n    };\n  }\n\n  /**\n   * @private\n   * @method ensureLoggerInitialized\n   * @description \u786E\u4FDD\u65E5\u5FD7\u5668\u5DF2\u521D\u59CB\u5316\n   */\n  private ensureLoggerInitialized(): void {\n    if (Object.keys(this.logger).length === 0) {\n      this.logger = this.loggerFactory.createLogger();\n    }\n  }\n\n  /**\n   * @private\n   * @method log\n   * @description \u5185\u90E8\u65E5\u5FD7\u8BB0\u5F55\u65B9\u6CD5\n   */\n  private log(\n    level: LogLevel,\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.ensureLoggerInitialized();\n    const config = this.configService.getConfig();\n\n    // \u4ECECLS\u83B7\u53D6\u4E0A\u4E0B\u6587\u4FE1\u606F\n    const requestId = this.cls.get<string>('requestId');\n    const tenantId = this.cls.get<string>('tenantId');\n    const userId = this.cls.get<string>('userId');\n\n    const logData: Record<string, unknown> = {\n      message,\n      context: context ?? LogContext.SYSTEM,\n      timestamp: new Date().toISOString(),\n      requestId,\n      tenantId,\n      userId,\n      ...metadata,\n    };\n\n    if (error) {\n      logData.error = {\n        message: error.message,\n        stack: config.stackTrace ? error.stack : undefined,\n        code: (error as unknown as Record<string, unknown>).code,\n        name: error.name,\n      };\n    }\n\n    // \u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\n    this.updateStats(level, context ?? LogContext.SYSTEM, message.length);\n\n    // \u8BB0\u5F55\u65E5\u5FD7\n    this.logger[level](logData);\n\n    // \u53D1\u9001\u4E8B\u4EF6\n    this.eventEmitter.emit('logger.log', {\n      level,\n      message,\n      context: context ?? LogContext.SYSTEM,\n      metadata,\n      error,\n      timestamp: new Date(),\n    });\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description \u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\n   */\n  private updateStats(\n    level: LogLevel,\n    context: LogContext,\n    logSize: number,\n  ): void {\n    this.stats.totalLogs++;\n    this.stats.logsByLevel[level]++;\n    this.stats.logsByContext[context]++;\n    this.stats.totalLogSize += logSize;\n    this.stats.lastLogTime = new Date();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f13f01e0fed1a3e83269f8a421ddfbf47505df4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_179xblmwcd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_179xblmwcd();
var __decorate =
/* istanbul ignore next */
(cov_179xblmwcd().s[0]++,
/* istanbul ignore next */
(cov_179xblmwcd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_179xblmwcd().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_179xblmwcd().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_179xblmwcd().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_179xblmwcd().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_179xblmwcd().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_179xblmwcd().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_179xblmwcd().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_179xblmwcd().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_179xblmwcd().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_179xblmwcd().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_179xblmwcd().b[3][0]++;
    cov_179xblmwcd().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_179xblmwcd().b[3][1]++;
    cov_179xblmwcd().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_179xblmwcd().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_179xblmwcd().b[5][0]++;
        cov_179xblmwcd().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_179xblmwcd().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_179xblmwcd().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_179xblmwcd().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_179xblmwcd().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_179xblmwcd().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_179xblmwcd().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_179xblmwcd().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_179xblmwcd().s[9]++;
  return /* istanbul ignore next */(cov_179xblmwcd().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_179xblmwcd().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_179xblmwcd().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_179xblmwcd().s[10]++,
/* istanbul ignore next */
(cov_179xblmwcd().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_179xblmwcd().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_179xblmwcd().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_179xblmwcd().f[1]++;
  cov_179xblmwcd().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_179xblmwcd().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_179xblmwcd().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_179xblmwcd().b[11][0]++;
    cov_179xblmwcd().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_179xblmwcd().b[11][1]++;
  }
}));
var PinoLoggerService_1;
var _a, _b, _c, _d;
/* istanbul ignore next */
cov_179xblmwcd().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_179xblmwcd().s[14]++;
exports.PinoLoggerService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_179xblmwcd().s[15]++, require("@nestjs/common"));
const event_emitter_1 =
/* istanbul ignore next */
(cov_179xblmwcd().s[16]++, require("@nestjs/event-emitter"));
const nestjs_cls_1 =
/* istanbul ignore next */
(cov_179xblmwcd().s[17]++, require("nestjs-cls"));
const logging_interface_1 =
/* istanbul ignore next */
(cov_179xblmwcd().s[18]++, require("../interfaces/logging.interface"));
const pino_logger_config_service_1 =
/* istanbul ignore next */
(cov_179xblmwcd().s[19]++, require("./pino-logger-config.service"));
const pino_logger_factory_1 =
/* istanbul ignore next */
(cov_179xblmwcd().s[20]++, require("../factories/pino-logger.factory"));
/**
 * @class PinoLoggerService
 * @description
 * 基于Pino的日志服务实现类，提供高性能的结构化日志功能。
 *
 * 主要功能包括：
 * 1. 支持多种日志级别（trace, debug, info, warn, error, fatal）
 * 2. 结构化日志输出（JSON格式）
 * 3. 日志上下文和元数据支持
 * 4. 性能监控和错误追踪
 * 5. 日志配置管理和动态更新
 * 6. 子日志器创建和管理
 * 7. 日志统计和监控
 *
 * @implements {ILoggerService}
 * @implements {OnModuleDestroy}
 */
let PinoLoggerService =
/* istanbul ignore next */
(cov_179xblmwcd().s[21]++, PinoLoggerService_1 = class PinoLoggerService {
  constructor(eventEmitter, configService, loggerFactory, cls) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[2]++;
    cov_179xblmwcd().s[22]++;
    this.eventEmitter = eventEmitter;
    /* istanbul ignore next */
    cov_179xblmwcd().s[23]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_179xblmwcd().s[24]++;
    this.loggerFactory = loggerFactory;
    /* istanbul ignore next */
    cov_179xblmwcd().s[25]++;
    this.cls = cls;
    /* istanbul ignore next */
    cov_179xblmwcd().s[26]++;
    this.logger = {};
    /* istanbul ignore next */
    cov_179xblmwcd().s[27]++;
    this.stats = {
      totalLogs: 0,
      logsByLevel: {
        fatal: 0,
        error: 0,
        warn: 0,
        info: 0,
        debug: 0,
        trace: 0
      },
      logsByContext: {
        [logging_interface_1.LogContext.HTTP_REQUEST]: 0,
        [logging_interface_1.LogContext.DATABASE]: 0,
        [logging_interface_1.LogContext.BUSINESS]: 0,
        [logging_interface_1.LogContext.AUTH]: 0,
        [logging_interface_1.LogContext.CONFIG]: 0,
        [logging_interface_1.LogContext.CACHE]: 0,
        [logging_interface_1.LogContext.EVENT]: 0,
        [logging_interface_1.LogContext.SYSTEM]: 0,
        [logging_interface_1.LogContext.EXTERNAL]: 0,
        [logging_interface_1.LogContext.PERFORMANCE]: 0
      },
      totalLogSize: 0
    };
    /* istanbul ignore next */
    cov_179xblmwcd().s[28]++;
    this.initializeStats();
    // 延迟初始化logger，避免循环依赖
    /* istanbul ignore next */
    cov_179xblmwcd().s[29]++;
    this.logger = {};
  }
  /**
   * @method debug
   * @description 记录调试日志
   */
  debug(message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[3]++;
    cov_179xblmwcd().s[30]++;
    this.log('debug', message, context, metadata, error);
  }
  /**
   * @method info
   * @description 记录信息日志
   */
  info(message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[4]++;
    cov_179xblmwcd().s[31]++;
    this.log('info', message, context, metadata, error);
  }
  /**
   * @method warn
   * @description 记录警告日志
   */
  warn(message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[5]++;
    cov_179xblmwcd().s[32]++;
    this.log('warn', message, context, metadata, error);
  }
  /**
   * @method error
   * @description 记录错误日志
   */
  error(message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[6]++;
    cov_179xblmwcd().s[33]++;
    this.log('error', message, context, metadata, error);
  }
  /**
   * @method fatal
   * @description 记录致命错误日志
   */
  fatal(message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[7]++;
    cov_179xblmwcd().s[34]++;
    this.log('fatal', message, context, metadata, error);
  }
  /**
   * @method trace
   * @description 记录跟踪日志
   */
  trace(message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[8]++;
    cov_179xblmwcd().s[35]++;
    this.log('trace', message, context, metadata, error);
  }
  /**
   * @method performance
   * @description 记录性能日志
   */
  performance(operation, duration, context, metadata) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[9]++;
    const performanceMetadata =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[36]++, {
      ...metadata,
      operation,
      duration,
      type: 'performance'
    });
    /* istanbul ignore next */
    cov_179xblmwcd().s[37]++;
    this.log('info', `Performance: ${operation} took ${duration}ms`,
    /* istanbul ignore next */
    (cov_179xblmwcd().b[13][0]++, context) ??
    /* istanbul ignore next */
    (cov_179xblmwcd().b[13][1]++, logging_interface_1.LogContext.PERFORMANCE), performanceMetadata);
  }
  /**
   * @method business
   * @description 记录业务日志
   */
  business(message, metadata) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[10]++;
    cov_179xblmwcd().s[38]++;
    this.log('info', message, logging_interface_1.LogContext.BUSINESS, metadata);
  }
  /**
   * @method security
   * @description 记录安全日志
   */
  security(message, metadata) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[11]++;
    cov_179xblmwcd().s[39]++;
    this.log('warn', message, logging_interface_1.LogContext.AUTH, metadata);
  }
  /**
   * @method child
   * @description 创建子日志器
   */
  child(context, metadata) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[12]++;
    cov_179xblmwcd().s[40]++;
    this.ensureLoggerInitialized();
    const childLogger =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[41]++, this.loggerFactory.createChildLogger(this.logger, {
      context,
      ...metadata
    }));
    // 创建一个新的PinoLoggerService实例，使用子日志器
    const childService =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[42]++, new PinoLoggerService_1(this.eventEmitter, this.configService, this.loggerFactory, this.cls));
    /* istanbul ignore next */
    cov_179xblmwcd().s[43]++;
    childService.logger = childLogger;
    /* istanbul ignore next */
    cov_179xblmwcd().s[44]++;
    childService.stats = this.stats;
    /* istanbul ignore next */
    cov_179xblmwcd().s[45]++;
    return childService;
  }
  /**
   * @method setLevel
   * @description 设置日志级别
   */
  setLevel(level) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[13]++;
    cov_179xblmwcd().s[46]++;
    this.configService.setLevel(level);
    /* istanbul ignore next */
    cov_179xblmwcd().s[47]++;
    this.logger = this.loggerFactory.createLogger();
  }
  /**
   * @method getLevel
   * @description 获取日志级别
   */
  getLevel() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[14]++;
    cov_179xblmwcd().s[48]++;
    return this.configService.getLevel();
  }
  /**
   * @method updateConfig
   * @description 更新日志配置
   */
  updateConfig(config) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[15]++;
    cov_179xblmwcd().s[49]++;
    this.configService.updateConfig(config);
    /* istanbul ignore next */
    cov_179xblmwcd().s[50]++;
    this.logger = this.loggerFactory.createLogger();
  }
  /**
   * @method getConfig
   * @description 获取日志配置
   */
  getConfig() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[16]++;
    cov_179xblmwcd().s[51]++;
    return this.configService.getConfig();
  }
  /**
   * @method flush
   * @description 刷新日志缓冲区
   */
  async flush() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[17]++;
    cov_179xblmwcd().s[52]++;
    if (typeof this.logger.flush === 'function') {
      /* istanbul ignore next */
      cov_179xblmwcd().b[14][0]++;
      const result =
      /* istanbul ignore next */
      (cov_179xblmwcd().s[53]++, this.logger.flush());
      /* istanbul ignore next */
      cov_179xblmwcd().s[54]++;
      if (
      /* istanbul ignore next */
      (cov_179xblmwcd().b[16][0]++, typeof result === 'object') &&
      /* istanbul ignore next */
      (cov_179xblmwcd().b[16][1]++, result !== null) &&
      /* istanbul ignore next */
      (cov_179xblmwcd().b[16][2]++, 'then' in result)) {
        /* istanbul ignore next */
        cov_179xblmwcd().b[15][0]++;
        cov_179xblmwcd().s[55]++;
        await result;
      } else
      /* istanbul ignore next */
      {
        cov_179xblmwcd().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_179xblmwcd().b[14][1]++;
    }
  }
  /**
   * @method close
   * @description 关闭日志器
   */
  async close() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[18]++;
    cov_179xblmwcd().s[56]++;
    await this.flush();
  }
  /**
   * @method onModuleDestroy
   * @description 模块销毁时的清理工作
   */
  async onModuleDestroy() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[19]++;
    cov_179xblmwcd().s[57]++;
    await this.close();
  }
  /**
   * @method getStats
   * @description 获取日志统计信息
   */
  getStats() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[20]++;
    cov_179xblmwcd().s[58]++;
    return {
      totalLogs: this.stats.totalLogs,
      logsByLevel: {
        ...this.stats.logsByLevel
      },
      logsByContext: {
        ...this.stats.logsByContext
      },
      averageLogSize: this.stats.totalLogs > 0 ?
      /* istanbul ignore next */
      (cov_179xblmwcd().b[17][0]++, this.stats.totalLogSize / this.stats.totalLogs) :
      /* istanbul ignore next */
      (cov_179xblmwcd().b[17][1]++, 0),
      lastLogTime: this.stats.lastLogTime
    };
  }
  /**
   * @method resetStats
   * @description 重置日志统计
   */
  resetStats() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[21]++;
    cov_179xblmwcd().s[59]++;
    this.initializeStats();
  }
  // 私有辅助方法
  /**
   * @private
   * @method initializeStats
   * @description 初始化统计信息
   */
  initializeStats() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[22]++;
    cov_179xblmwcd().s[60]++;
    this.stats = {
      totalLogs: 0,
      logsByLevel: {
        trace: 0,
        debug: 0,
        info: 0,
        warn: 0,
        error: 0,
        fatal: 0
      },
      logsByContext: {
        [logging_interface_1.LogContext.HTTP_REQUEST]: 0,
        [logging_interface_1.LogContext.DATABASE]: 0,
        [logging_interface_1.LogContext.BUSINESS]: 0,
        [logging_interface_1.LogContext.AUTH]: 0,
        [logging_interface_1.LogContext.CONFIG]: 0,
        [logging_interface_1.LogContext.CACHE]: 0,
        [logging_interface_1.LogContext.EVENT]: 0,
        [logging_interface_1.LogContext.SYSTEM]: 0,
        [logging_interface_1.LogContext.EXTERNAL]: 0,
        [logging_interface_1.LogContext.PERFORMANCE]: 0
      },
      totalLogSize: 0
    };
  }
  /**
   * @private
   * @method ensureLoggerInitialized
   * @description 确保日志器已初始化
   */
  ensureLoggerInitialized() {
    /* istanbul ignore next */
    cov_179xblmwcd().f[23]++;
    cov_179xblmwcd().s[61]++;
    if (Object.keys(this.logger).length === 0) {
      /* istanbul ignore next */
      cov_179xblmwcd().b[18][0]++;
      cov_179xblmwcd().s[62]++;
      this.logger = this.loggerFactory.createLogger();
    } else
    /* istanbul ignore next */
    {
      cov_179xblmwcd().b[18][1]++;
    }
  }
  /**
   * @private
   * @method log
   * @description 内部日志记录方法
   */
  log(level, message, context, metadata, error) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[24]++;
    cov_179xblmwcd().s[63]++;
    this.ensureLoggerInitialized();
    const config =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[64]++, this.configService.getConfig());
    // 从CLS获取上下文信息
    const requestId =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[65]++, this.cls.get('requestId'));
    const tenantId =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[66]++, this.cls.get('tenantId'));
    const userId =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[67]++, this.cls.get('userId'));
    const logData =
    /* istanbul ignore next */
    (cov_179xblmwcd().s[68]++, {
      message,
      context:
      /* istanbul ignore next */
      (cov_179xblmwcd().b[19][0]++, context) ??
      /* istanbul ignore next */
      (cov_179xblmwcd().b[19][1]++, logging_interface_1.LogContext.SYSTEM),
      timestamp: new Date().toISOString(),
      requestId,
      tenantId,
      userId,
      ...metadata
    });
    /* istanbul ignore next */
    cov_179xblmwcd().s[69]++;
    if (error) {
      /* istanbul ignore next */
      cov_179xblmwcd().b[20][0]++;
      cov_179xblmwcd().s[70]++;
      logData.error = {
        message: error.message,
        stack: config.stackTrace ?
        /* istanbul ignore next */
        (cov_179xblmwcd().b[21][0]++, error.stack) :
        /* istanbul ignore next */
        (cov_179xblmwcd().b[21][1]++, undefined),
        code: error.code,
        name: error.name
      };
    } else
    /* istanbul ignore next */
    {
      cov_179xblmwcd().b[20][1]++;
    }
    // 更新统计信息
    cov_179xblmwcd().s[71]++;
    this.updateStats(level,
    /* istanbul ignore next */
    (cov_179xblmwcd().b[22][0]++, context) ??
    /* istanbul ignore next */
    (cov_179xblmwcd().b[22][1]++, logging_interface_1.LogContext.SYSTEM), message.length);
    // 记录日志
    /* istanbul ignore next */
    cov_179xblmwcd().s[72]++;
    this.logger[level](logData);
    // 发送事件
    /* istanbul ignore next */
    cov_179xblmwcd().s[73]++;
    this.eventEmitter.emit('logger.log', {
      level,
      message,
      context:
      /* istanbul ignore next */
      (cov_179xblmwcd().b[23][0]++, context) ??
      /* istanbul ignore next */
      (cov_179xblmwcd().b[23][1]++, logging_interface_1.LogContext.SYSTEM),
      metadata,
      error,
      timestamp: new Date()
    });
  }
  /**
   * @private
   * @method updateStats
   * @description 更新统计信息
   */
  updateStats(level, context, logSize) {
    /* istanbul ignore next */
    cov_179xblmwcd().f[25]++;
    cov_179xblmwcd().s[74]++;
    this.stats.totalLogs++;
    /* istanbul ignore next */
    cov_179xblmwcd().s[75]++;
    this.stats.logsByLevel[level]++;
    /* istanbul ignore next */
    cov_179xblmwcd().s[76]++;
    this.stats.logsByContext[context]++;
    /* istanbul ignore next */
    cov_179xblmwcd().s[77]++;
    this.stats.totalLogSize += logSize;
    /* istanbul ignore next */
    cov_179xblmwcd().s[78]++;
    this.stats.lastLogTime = new Date();
  }
});
/* istanbul ignore next */
cov_179xblmwcd().s[79]++;
exports.PinoLoggerService = PinoLoggerService;
/* istanbul ignore next */
cov_179xblmwcd().s[80]++;
exports.PinoLoggerService = PinoLoggerService = PinoLoggerService_1 = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_179xblmwcd().b[25][0]++, typeof event_emitter_1.EventEmitter2 !== "undefined") &&
/* istanbul ignore next */
(cov_179xblmwcd().b[25][1]++, event_emitter_1.EventEmitter2)) === "function" ?
/* istanbul ignore next */
(cov_179xblmwcd().b[24][0]++, _a) :
/* istanbul ignore next */
(cov_179xblmwcd().b[24][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_179xblmwcd().b[27][0]++, typeof pino_logger_config_service_1.PinoLoggerConfigService !== "undefined") &&
/* istanbul ignore next */
(cov_179xblmwcd().b[27][1]++, pino_logger_config_service_1.PinoLoggerConfigService)) === "function" ?
/* istanbul ignore next */
(cov_179xblmwcd().b[26][0]++, _b) :
/* istanbul ignore next */
(cov_179xblmwcd().b[26][1]++, Object), typeof (_c =
/* istanbul ignore next */
(cov_179xblmwcd().b[29][0]++, typeof pino_logger_factory_1.PinoLoggerFactory !== "undefined") &&
/* istanbul ignore next */
(cov_179xblmwcd().b[29][1]++, pino_logger_factory_1.PinoLoggerFactory)) === "function" ?
/* istanbul ignore next */
(cov_179xblmwcd().b[28][0]++, _c) :
/* istanbul ignore next */
(cov_179xblmwcd().b[28][1]++, Object), typeof (_d =
/* istanbul ignore next */
(cov_179xblmwcd().b[31][0]++, typeof nestjs_cls_1.ClsService !== "undefined") &&
/* istanbul ignore next */
(cov_179xblmwcd().b[31][1]++, nestjs_cls_1.ClsService)) === "function" ?
/* istanbul ignore next */
(cov_179xblmwcd().b[30][0]++, _d) :
/* istanbul ignore next */
(cov_179xblmwcd().b[30][1]++, Object)])], PinoLoggerService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,