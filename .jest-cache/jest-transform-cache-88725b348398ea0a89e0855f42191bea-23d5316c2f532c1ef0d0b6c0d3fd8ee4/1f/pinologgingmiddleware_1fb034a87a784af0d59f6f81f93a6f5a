ffc56a397031ace802617a58830e6cd5
"use strict";

/* istanbul ignore next */
function cov_11bqy023sr() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/middleware/pino-logging.middleware.ts";
  var hash = "5fab5a9d755a5eabfcda7841db9c2f2614ee948a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/middleware/pino-logging.middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 111
        }
      },
      "2": {
        start: {
          line: 3,
          column: 70
        },
        end: {
          line: 3,
          column: 111
        }
      },
      "3": {
        start: {
          line: 3,
          column: 112
        },
        end: {
          line: 3,
          column: 121
        }
      },
      "4": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 29
        }
      },
      "5": {
        start: {
          line: 4,
          column: 37
        },
        end: {
          line: 4,
          column: 100
        }
      },
      "6": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 91
        }
      },
      "7": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 108
        }
      },
      "8": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "9": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "11": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "12": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "13": {
        start: {
          line: 10,
          column: 33
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "14": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "15": {
        start: {
          line: 11,
          column: 40
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "16": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 182
        }
      },
      "17": {
        start: {
          line: 12,
          column: 48
        },
        end: {
          line: 12,
          column: 136
        }
      },
      "18": {
        start: {
          line: 12,
          column: 58
        },
        end: {
          line: 12,
          column: 136
        }
      },
      "19": {
        start: {
          line: 12,
          column: 137
        },
        end: {
          line: 12,
          column: 179
        }
      },
      "20": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 134
        }
      },
      "21": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "22": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "23": {
        start: {
          line: 15,
          column: 35
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "24": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "25": {
        start: {
          line: 16,
          column: 63
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "26": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "27": {
        start: {
          line: 17,
          column: 40
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "28": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "29": {
        start: {
          line: 18,
          column: 40
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "30": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "31": {
        start: {
          line: 19,
          column: 41
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "32": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "33": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "34": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "35": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "36": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "37": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "38": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 16
        }
      },
      "39": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "40": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "41": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "42": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "43": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 96
        }
      },
      "44": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "45": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "46": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "47": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "48": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 121
        }
      },
      "49": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "50": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 39
        }
      },
      "51": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "52": {
        start: {
          line: 43,
          column: 15
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "53": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 70
        }
      },
      "54": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 299,
          column: 4
        }
      },
      "55": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "56": {
        start: {
          line: 60,
          column: 34
        },
        end: {
          line: 60,
          column: 36
        }
      },
      "57": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "58": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "59": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "60": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 75,
          column: 54
        }
      },
      "61": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "62": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "63": {
        start: {
          line: 79,
          column: 35
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "64": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 44
        }
      },
      "65": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 96,
          column: 32
        }
      },
      "66": {
        start: {
          line: 98,
          column: 33
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "67": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 120,
          column: 14
        }
      },
      "68": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "69": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "70": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 105,
          column: 61
        }
      },
      "71": {
        start: {
          line: 108,
          column: 33
        },
        end: {
          line: 108,
          column: 55
        }
      },
      "72": {
        start: {
          line: 109,
          column: 40
        },
        end: {
          line: 114,
          column: 17
        }
      },
      "73": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 118,
          column: 19
        }
      },
      "74": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 54
        }
      },
      "75": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 55
        }
      },
      "76": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 19
        }
      },
      "77": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 36
        }
      },
      "78": {
        start: {
          line: 141,
          column: 35
        },
        end: {
          line: 141,
          column: 91
        }
      },
      "79": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 143,
          column: 46
        }
      },
      "80": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 46
        }
      },
      "81": {
        start: {
          line: 145,
          column: 34
        },
        end: {
          line: 146,
          column: 36
        }
      },
      "82": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 148,
          column: 45
        }
      },
      "83": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 45
        }
      },
      "84": {
        start: {
          line: 150,
          column: 33
        },
        end: {
          line: 151,
          column: 35
        }
      },
      "85": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 153,
          column: 44
        }
      },
      "86": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 44
        }
      },
      "87": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 29
        }
      },
      "88": {
        start: {
          line: 165,
          column: 33
        },
        end: {
          line: 165,
          column: 85
        }
      },
      "89": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 167,
          column: 44
        }
      },
      "90": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 44
        }
      },
      "91": {
        start: {
          line: 169,
          column: 32
        },
        end: {
          line: 170,
          column: 34
        }
      },
      "92": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 172,
          column: 43
        }
      },
      "93": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 43
        }
      },
      "94": {
        start: {
          line: 174,
          column: 31
        },
        end: {
          line: 175,
          column: 33
        }
      },
      "95": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 177,
          column: 42
        }
      },
      "96": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 42
        }
      },
      "97": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 29
        }
      },
      "98": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 192,
          column: 27
        }
      },
      "99": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 212,
          column: 15
        }
      },
      "100": {
        start: {
          line: 221,
          column: 29
        },
        end: {
          line: 221,
          column: 69
        }
      },
      "101": {
        start: {
          line: 222,
          column: 30
        },
        end: {
          line: 222,
          column: 51
        }
      },
      "102": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "103": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 262,
          column: 28
        }
      },
      "104": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 28
        }
      },
      "105": {
        start: {
          line: 263,
          column: 36
        },
        end: {
          line: 263,
          column: 74
        }
      },
      "106": {
        start: {
          line: 264,
          column: 30
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "107": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "108": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 268,
          column: 17
        }
      },
      "109": {
        start: {
          line: 267,
          column: 20
        },
        end: {
          line: 267,
          column: 56
        }
      },
      "110": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 29
        }
      },
      "111": {
        start: {
          line: 280,
          column: 37
        },
        end: {
          line: 280,
          column: 77
        }
      },
      "112": {
        start: {
          line: 281,
          column: 30
        },
        end: {
          line: 281,
          column: 44
        }
      },
      "113": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "114": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 285,
          column: 17
        }
      },
      "115": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 57
        }
      },
      "116": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 29
        }
      },
      "117": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 290,
          column: 59
        }
      },
      "118": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "119": {
        start: {
          line: 292,
          column: 26
        },
        end: {
          line: 292,
          column: 104
        }
      },
      "120": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 181
        }
      },
      "121": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 68
        }
      },
      "122": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 150
        }
      },
      "123": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 295,
          column: 150
        }
      },
      "124": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 63
        }
      },
      "125": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 46
        }
      },
      "126": {
        start: {
          line: 300,
          column: 0
        },
        end: {
          line: 300,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 50
          },
          end: {
            line: 2,
            column: 51
          }
        },
        loc: {
          start: {
            line: 2,
            column: 136
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "accept",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 19
          }
        },
        loc: {
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 3,
            column: 123
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 34
          }
        },
        loc: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 12,
            column: 181
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 29,
            column: 61
          }
        },
        loc: {
          start: {
            line: 29,
            column: 100
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 61
          }
        },
        loc: {
          start: {
            line: 36,
            column: 87
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 57,
            column: 30
          }
        },
        loc: {
          start: {
            line: 57,
            column: 35
          },
          end: {
            line: 299,
            column: 1
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        loc: {
          start: {
            line: 73,
            column: 28
          },
          end: {
            line: 122,
            column: 9
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 99,
            column: 23
          },
          end: {
            line: 99,
            column: 24
          }
        },
        loc: {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 99
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 30
          }
        },
        loc: {
          start: {
            line: 116,
            column: 35
          },
          end: {
            line: 118,
            column: 17
          }
        },
        line: 116
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        loc: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        loc: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 139
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        loc: {
          start: {
            line: 163,
            column: 27
          },
          end: {
            line: 179,
            column: 9
          }
        },
        line: 163
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        loc: {
          start: {
            line: 187,
            column: 25
          },
          end: {
            line: 193,
            column: 9
          }
        },
        line: 187
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        loc: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 200
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        loc: {
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 220
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        loc: {
          start: {
            line: 260,
            column: 27
          },
          end: {
            line: 271,
            column: 9
          }
        },
        line: 260
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 265,
            column: 36
          },
          end: {
            line: 265,
            column: 37
          }
        },
        loc: {
          start: {
            line: 265,
            column: 45
          },
          end: {
            line: 269,
            column: 13
          }
        },
        line: 265
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        loc: {
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 288,
            column: 9
          }
        },
        line: 279
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 282,
            column: 37
          },
          end: {
            line: 282,
            column: 38
          }
        },
        loc: {
          start: {
            line: 282,
            column: 47
          },
          end: {
            line: 286,
            column: 13
          }
        },
        line: 282
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 291,
            column: 5
          },
          end: {
            line: 291,
            column: 6
          }
        },
        loc: {
          start: {
            line: 291,
            column: 11
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 291
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 19
          },
          end: {
            line: 28,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 20
          },
          end: {
            line: 2,
            column: 24
          }
        }, {
          start: {
            line: 2,
            column: 28
          },
          end: {
            line: 2,
            column: 45
          }
        }, {
          start: {
            line: 2,
            column: 50
          },
          end: {
            line: 28,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 111
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 3,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 3,
            column: 41
          }
        }, {
          start: {
            line: 3,
            column: 45
          },
          end: {
            line: 3,
            column: 68
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 37
          },
          end: {
            line: 4,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 57
          },
          end: {
            line: 4,
            column: 62
          }
        }, {
          start: {
            line: 4,
            column: 65
          },
          end: {
            line: 4,
            column: 100
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 65
          },
          end: {
            line: 4,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 90
          }
        }, {
          start: {
            line: 4,
            column: 93
          },
          end: {
            line: 4,
            column: 100
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 5,
            column: 84
          }
        }, {
          start: {
            line: 5,
            column: 87
          },
          end: {
            line: 5,
            column: 91
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 30
          }
        }, {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 38
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 63
          },
          end: {
            line: 5,
            column: 67
          }
        }, {
          start: {
            line: 5,
            column: 70
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 6,
            column: 47
          },
          end: {
            line: 6,
            column: 102
          }
        }, {
          start: {
            line: 6,
            column: 105
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 10,
            column: 46
          },
          end: {
            line: 10,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 63
          },
          end: {
            line: 10,
            column: 65
          }
        }, {
          start: {
            line: 10,
            column: 68
          },
          end: {
            line: 10,
            column: 80
          }
        }],
        line: 10
      },
      "11": {
        loc: {
          start: {
            line: 12,
            column: 48
          },
          end: {
            line: 12,
            column: 136
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 48
          },
          end: {
            line: 12,
            column: 136
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "12": {
        loc: {
          start: {
            line: 12,
            column: 167
          },
          end: {
            line: 12,
            column: 176
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 167
          },
          end: {
            line: 12,
            column: 168
          }
        }, {
          start: {
            line: 12,
            column: 172
          },
          end: {
            line: 12,
            column: 176
          }
        }],
        line: 12
      },
      "13": {
        loc: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 62
          },
          end: {
            line: 13,
            column: 106
          }
        }, {
          start: {
            line: 13,
            column: 109
          },
          end: {
            line: 13,
            column: 124
          }
        }],
        line: 13
      },
      "14": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 14
      },
      "15": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "16": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "17": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 31
          }
        }, {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 61
          }
        }],
        line: 16
      },
      "18": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "19": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "20": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "21": {
        loc: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "22": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 37
          }
        }, {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 37
          }
        }],
        line: 22
      },
      "23": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "24": {
        loc: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 35,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 29
          }
        }, {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 55
          }
        }, {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 35,
            column: 1
          }
        }],
        line: 29
      },
      "25": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 63
          }
        }, {
          start: {
            line: 32,
            column: 66
          },
          end: {
            line: 32,
            column: 95
          }
        }],
        line: 32
      },
      "26": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 36
          }
        }],
        line: 34
      },
      "27": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 39,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 29
          }
        }, {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 39,
            column: 1
          }
        }],
        line: 36
      },
      "28": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "29": {
        loc: {
          start: {
            line: 37,
            column: 41
          },
          end: {
            line: 37,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 60
          },
          end: {
            line: 37,
            column: 93
          }
        }, {
          start: {
            line: 37,
            column: 96
          },
          end: {
            line: 37,
            column: 98
          }
        }],
        line: 37
      },
      "30": {
        loc: {
          start: {
            line: 38,
            column: 73
          },
          end: {
            line: 38,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 82
          },
          end: {
            line: 38,
            column: 110
          }
        }, {
          start: {
            line: 38,
            column: 113
          },
          end: {
            line: 38,
            column: 117
          }
        }],
        line: 38
      },
      "31": {
        loc: {
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 87,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 87,
            column: 52
          }
        }, {
          start: {
            line: 87,
            column: 56
          },
          end: {
            line: 87,
            column: 58
          }
        }],
        line: 87
      },
      "32": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "33": {
        loc: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 27
          }
        }, {
          start: {
            line: 100,
            column: 31
          },
          end: {
            line: 100,
            column: 44
          }
        }],
        line: 100
      },
      "34": {
        loc: {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 105,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 104,
            column: 44
          }
        }, {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 105,
            column: 60
          }
        }],
        line: 103
      },
      "35": {
        loc: {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 141,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 141,
            column: 61
          }
        }, {
          start: {
            line: 141,
            column: 65
          },
          end: {
            line: 141,
            column: 91
          }
        }],
        line: 141
      },
      "36": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 143,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 143,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "37": {
        loc: {
          start: {
            line: 145,
            column: 34
          },
          end: {
            line: 146,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 34
          },
          end: {
            line: 145,
            column: 53
          }
        }, {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 36
          }
        }],
        line: 145
      },
      "38": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 148,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 148,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "39": {
        loc: {
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 151,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 150,
            column: 51
          }
        }, {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 151,
            column: 35
          }
        }],
        line: 150
      },
      "40": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 153,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 153,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "41": {
        loc: {
          start: {
            line: 165,
            column: 33
          },
          end: {
            line: 165,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 33
          },
          end: {
            line: 165,
            column: 57
          }
        }, {
          start: {
            line: 165,
            column: 61
          },
          end: {
            line: 165,
            column: 85
          }
        }],
        line: 165
      },
      "42": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 167,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 167,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "43": {
        loc: {
          start: {
            line: 169,
            column: 32
          },
          end: {
            line: 170,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 32
          },
          end: {
            line: 169,
            column: 49
          }
        }, {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 34
          }
        }],
        line: 169
      },
      "44": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 172,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 172,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "45": {
        loc: {
          start: {
            line: 174,
            column: 31
          },
          end: {
            line: 175,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 31
          },
          end: {
            line: 174,
            column: 47
          }
        }, {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 33
          }
        }],
        line: 174
      },
      "46": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 177,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 177,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "47": {
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 192,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 188,
            column: 50
          }
        }, {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 40
          }
        }, {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 22
          }
        }, {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 40
          }
        }, {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 25
          }
        }],
        line: 188
      },
      "48": {
        loc: {
          start: {
            line: 221,
            column: 29
          },
          end: {
            line: 221,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 54
          },
          end: {
            line: 221,
            column: 60
          }
        }, {
          start: {
            line: 221,
            column: 63
          },
          end: {
            line: 221,
            column: 69
          }
        }],
        line: 221
      },
      "49": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 262,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 262,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "50": {
        loc: {
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 261,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 261,
            column: 21
          }
        }, {
          start: {
            line: 261,
            column: 25
          },
          end: {
            line: 261,
            column: 49
          }
        }],
        line: 261
      },
      "51": {
        loc: {
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 268,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 268,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "52": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "53": {
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 76
          },
          end: {
            line: 292,
            column: 95
          }
        }, {
          start: {
            line: 292,
            column: 98
          },
          end: {
            line: 292,
            column: 104
          }
        }],
        line: 292
      },
      "54": {
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 54
          }
        }, {
          start: {
            line: 292,
            column: 58
          },
          end: {
            line: 292,
            column: 73
          }
        }],
        line: 292
      },
      "55": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0, 0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/middleware/pino-logging.middleware.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/middleware/pino-logging.middleware.ts"],
      sourcesContent: ["import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { FastifyRequest, FastifyReply } from 'fastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PinoLoggerService } from '../services/pino-logger.service';\nimport { LogContext } from '../interfaces/logging.interface';\n\n/**\n * @interface RequestLogData\n * @description \u8BF7\u6C42\u65E5\u5FD7\u6570\u636E\u63A5\u53E3\n */\ninterface RequestLogData {\n  requestId: string;\n  method: string;\n  url: string;\n  headers: Record<string, string>;\n  query: Record<string, unknown>;\n  body: unknown;\n  ip: string;\n  userAgent: string;\n  tenantId?: string;\n  userId?: string;\n  timestamp: Date;\n}\n\n/**\n * @interface ResponseLogData\n * @description \u54CD\u5E94\u65E5\u5FD7\u6570\u636E\u63A5\u53E3\n */\ninterface ResponseLogData extends RequestLogData {\n  statusCode: number;\n  duration: number;\n  responseSize?: number;\n  error?: Error;\n}\n\n/**\n * @class PinoLoggingMiddleware\n * @description Pino\u65E5\u5FD7\u4E2D\u95F4\u4EF6\uFF0C\u7528\u4E8E\u8BB0\u5F55HTTP\u8BF7\u6C42\u548C\u54CD\u5E94\u65E5\u5FD7\n *\n * \u4E3B\u8981\u529F\u80FD\uFF1A\n * 1. \u81EA\u52A8\u751F\u6210\u8BF7\u6C42ID\n * 2. \u8BB0\u5F55\u8BF7\u6C42\u8BE6\u60C5\uFF08\u65B9\u6CD5\u3001URL\u3001\u5934\u90E8\u3001\u67E5\u8BE2\u53C2\u6570\u3001\u8BF7\u6C42\u4F53\uFF09\n * 3. \u8BB0\u5F55\u54CD\u5E94\u8BE6\u60C5\uFF08\u72B6\u6001\u7801\u3001\u54CD\u5E94\u65F6\u95F4\u3001\u54CD\u5E94\u5927\u5C0F\uFF09\n * 4. \u652F\u6301\u591A\u79DF\u6237\u548C\u7528\u6237\u4E0A\u4E0B\u6587\n * 5. \u9519\u8BEF\u65E5\u5FD7\u8BB0\u5F55\n * 6. \u6027\u80FD\u76D1\u63A7\n */\n@Injectable()\nexport class PinoLoggingMiddleware implements NestMiddleware {\n  constructor(private readonly logger: PinoLoggerService) {}\n\n  /**\n   * @method use\n   * @description \u4E2D\u95F4\u4EF6\u4E3B\u65B9\u6CD5\uFF0C\u5904\u7406HTTP\u8BF7\u6C42\u548C\u54CD\u5E94\u65E5\u5FD7\n   * @param {FastifyRequest} req Fastify\u8BF7\u6C42\u5BF9\u8C61\n   * @param {FastifyReply} res Fastify\u54CD\u5E94\u5BF9\u8C61\n   * @param {() => void} next \u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u51FD\u6570\n   */\n  use(req: FastifyRequest, res: FastifyReply, next: () => void): void {\n    const startTime = Date.now();\n    const requestId = this.generateRequestId();\n    const tenantId = this.extractTenantId(req);\n    const userId = this.extractUserId(req);\n\n    // \u6784\u5EFA\u8BF7\u6C42\u65E5\u5FD7\u6570\u636E\n    const requestLogData: RequestLogData = {\n      requestId,\n      method: req.method,\n      url: req.url,\n      headers: req.headers as Record<string, string>,\n      query: req.query as Record<string, unknown>,\n      body: req.body,\n      ip: this.getClientIp(req),\n      userAgent: req.headers['user-agent'] || '',\n      tenantId,\n      userId,\n      timestamp: new Date(),\n    };\n\n    // \u8BB0\u5F55\u8BF7\u6C42\u65E5\u5FD7\n    this.logRequest(requestLogData);\n\n    // \u8BBE\u7F6E\u54CD\u5E94\u53D8\u91CF\n    let responseBody: unknown;\n    let responseSize = 0;\n\n    // Fastify\u7684\u54CD\u5E94\u5904\u7406\n    const originalSend = res.send;\n    res.send = (payload?: unknown): FastifyReply => {\n      if (payload && !responseBody) {\n        responseBody = payload;\n        responseSize =\n          typeof payload === 'string'\n            ? payload.length\n            : JSON.stringify(payload).length;\n      }\n\n      // \u8BB0\u5F55\u54CD\u5E94\u65E5\u5FD7\n      const duration = Date.now() - startTime;\n      const responseLogData: ResponseLogData = {\n        ...requestLogData,\n        statusCode: res.statusCode,\n        duration,\n        responseSize,\n      };\n\n      // \u5F02\u6B65\u8BB0\u5F55\u65E5\u5FD7\uFF0C\u4E0D\u963B\u585E\u54CD\u5E94\n      setImmediate(() => {\n        this.logResponse(responseLogData);\n      });\n\n      return originalSend.call(res, payload);\n    };\n\n    next();\n  }\n\n  /**\n   * @private\n   * @method generateRequestId\n   * @description \u751F\u6210\u8BF7\u6C42ID\n   * @returns {string} \u8BF7\u6C42ID\n   */\n  private generateRequestId(): string {\n    return uuidv4();\n  }\n\n  /**\n   * @private\n   * @method extractTenantId\n   * @description \u4ECE\u8BF7\u6C42\u4E2D\u63D0\u53D6\u79DF\u6237ID\n   * @param {FastifyRequest} req Fastify\u8BF7\u6C42\u5BF9\u8C61\n   * @returns {string | undefined} \u79DF\u6237ID\n   */\n  private extractTenantId(req: FastifyRequest): string | undefined {\n    // \u4ECE\u8BF7\u6C42\u5934\u4E2D\u63D0\u53D6\n    const headerTenantId =\n      req.headers['x-tenant-id'] || req.headers['X-Tenant-ID'];\n    if (headerTenantId) return String(headerTenantId);\n\n    // \u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\n    const queryTenantId =\n      (req.query as Record<string, unknown>)?.tenantId ||\n      (req.query as Record<string, unknown>)?.tenant_id;\n    if (queryTenantId) return String(queryTenantId);\n\n    // \u4ECE\u8BF7\u6C42\u4F53\u4E2D\u63D0\u53D6\n    const bodyTenantId =\n      (req.body as Record<string, unknown>)?.tenantId ||\n      (req.body as Record<string, unknown>)?.tenant_id;\n    if (bodyTenantId) return String(bodyTenantId);\n\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @method extractUserId\n   * @description \u4ECE\u8BF7\u6C42\u4E2D\u63D0\u53D6\u7528\u6237ID\n   * @param {FastifyRequest} req Fastify\u8BF7\u6C42\u5BF9\u8C61\n   * @returns {string | undefined} \u7528\u6237ID\n   */\n  private extractUserId(req: FastifyRequest): string | undefined {\n    // \u4ECE\u8BF7\u6C42\u5934\u4E2D\u63D0\u53D6\n    const headerUserId = req.headers['x-user-id'] || req.headers['X-User-ID'];\n    if (headerUserId) return String(headerUserId);\n\n    // \u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\n    const queryUserId =\n      (req.query as Record<string, unknown>)?.userId ||\n      (req.query as Record<string, unknown>)?.user_id;\n    if (queryUserId) return String(queryUserId);\n\n    // \u4ECE\u8BF7\u6C42\u4F53\u4E2D\u63D0\u53D6\n    const bodyUserId =\n      (req.body as Record<string, unknown>)?.userId ||\n      (req.body as Record<string, unknown>)?.user_id;\n    if (bodyUserId) return String(bodyUserId);\n\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @method getClientIp\n   * @description \u83B7\u53D6\u5BA2\u6237\u7AEFIP\u5730\u5740\n   * @param {FastifyRequest} req Fastify\u8BF7\u6C42\u5BF9\u8C61\n   * @returns {string} \u5BA2\u6237\u7AEFIP\u5730\u5740\n   */\n  private getClientIp(req: FastifyRequest): string {\n    return (\n      (req.headers['x-forwarded-for'] as string) ||\n      (req.headers['x-real-ip'] as string) ||\n      req.ip ||\n      req.socket.remoteAddress ||\n      'unknown'\n    );\n  }\n\n  /**\n   * @private\n   * @method logRequest\n   * @description \u8BB0\u5F55\u8BF7\u6C42\u65E5\u5FD7\n   * @param {RequestLogData} data \u8BF7\u6C42\u65E5\u5FD7\u6570\u636E\n   */\n  private logRequest(data: RequestLogData): void {\n    this.logger.info('HTTP Request', LogContext.HTTP_REQUEST, {\n      requestId: data.requestId,\n      method: data.method,\n      url: data.url,\n      ip: data.ip,\n      userAgent: data.userAgent,\n      tenantId: data.tenantId,\n      userId: data.userId,\n      query: data.query,\n      body: this.sanitizeBody(data.body),\n      headers: this.sanitizeHeaders(data.headers),\n    });\n  }\n\n  /**\n   * @private\n   * @method logResponse\n   * @description \u8BB0\u5F55\u54CD\u5E94\u65E5\u5FD7\n   * @param {ResponseLogData} data \u54CD\u5E94\u65E5\u5FD7\u6570\u636E\n   */\n  private logResponse(data: ResponseLogData): void {\n    const logLevel = data.statusCode >= 400 ? 'warn' : 'info';\n    const logMethod = this.logger[logLevel as keyof PinoLoggerService] as (\n      message: string,\n      context: LogContext,\n      metadata?: Record<string, unknown>,\n    ) => void;\n\n    logMethod.call(this.logger, 'HTTP Response', LogContext.HTTP_REQUEST, {\n      requestId: data.requestId,\n      method: data.method,\n      url: data.url,\n      statusCode: data.statusCode,\n      duration: data.duration,\n      responseSize: data.responseSize,\n      tenantId: data.tenantId,\n      userId: data.userId,\n    });\n  }\n\n  /**\n   * @private\n   * @method logError\n   * @description \u8BB0\u5F55\u9519\u8BEF\u65E5\u5FD7\n   * @param {ResponseLogData} data \u9519\u8BEF\u65E5\u5FD7\u6570\u636E\n   */\n  // private logError(data: ResponseLogData): void {\n  //   this.logger.error('HTTP Error', LogContext.HTTP_REQUEST, {\n  //     requestId: data.requestId,\n  //     method: data.method,\n  //     url: data.url,\n  //     statusCode: data.statusCode,\n  //     duration: data.duration,\n  //     error: data.error?.message,\n  //     stack: data.error?.stack,\n  //     tenantId: data.tenantId,\n  //     userId: data.userId,\n  //   });\n  // }\n\n  /**\n   * @private\n   * @method sanitizeBody\n   * @description \u6E05\u7406\u8BF7\u6C42\u4F53\u4E2D\u7684\u654F\u611F\u4FE1\u606F\n   * @param {unknown} body \u8BF7\u6C42\u4F53\n   * @returns {unknown} \u6E05\u7406\u540E\u7684\u8BF7\u6C42\u4F53\n   */\n  private sanitizeBody(body: unknown): unknown {\n    if (!body || typeof body !== 'object') return body;\n\n    const sensitiveFields = ['password', 'token', 'secret', 'key'];\n    const sanitized = { ...(body as Record<string, unknown>) };\n\n    sensitiveFields.forEach(field => {\n      if (sanitized[field]) {\n        sanitized[field] = '***REDACTED***';\n      }\n    });\n\n    return sanitized;\n  }\n\n  /**\n   * @private\n   * @method sanitizeHeaders\n   * @description \u6E05\u7406\u8BF7\u6C42\u5934\u4E2D\u7684\u654F\u611F\u4FE1\u606F\n   * @param {Record<string, string>} headers \u8BF7\u6C42\u5934\n   * @returns {Record<string, string>} \u6E05\u7406\u540E\u7684\u8BF7\u6C42\u5934\n   */\n  private sanitizeHeaders(\n    headers: Record<string, string>,\n  ): Record<string, string> {\n    const sensitiveHeaders = ['authorization', 'cookie', 'x-api-key'];\n    const sanitized = { ...headers };\n\n    sensitiveHeaders.forEach(header => {\n      if (sanitized[header]) {\n        sanitized[header] = '***REDACTED***';\n      }\n    });\n\n    return sanitized;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5fab5a9d755a5eabfcda7841db9c2f2614ee948a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11bqy023sr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11bqy023sr();
var __esDecorate =
/* istanbul ignore next */
(cov_11bqy023sr().s[0]++,
/* istanbul ignore next */
(cov_11bqy023sr().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_11bqy023sr().b[0][1]++, this.__esDecorate) ||
/* istanbul ignore next */
(cov_11bqy023sr().b[0][2]++, function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  /* istanbul ignore next */
  cov_11bqy023sr().f[0]++;
  function accept(f) {
    /* istanbul ignore next */
    cov_11bqy023sr().f[1]++;
    cov_11bqy023sr().s[1]++;
    if (
    /* istanbul ignore next */
    (cov_11bqy023sr().b[2][0]++, f !== void 0) &&
    /* istanbul ignore next */
    (cov_11bqy023sr().b[2][1]++, typeof f !== "function")) {
      /* istanbul ignore next */
      cov_11bqy023sr().b[1][0]++;
      cov_11bqy023sr().s[2]++;
      throw new TypeError("Function expected");
    } else
    /* istanbul ignore next */
    {
      cov_11bqy023sr().b[1][1]++;
    }
    cov_11bqy023sr().s[3]++;
    return f;
  }
  var kind =
    /* istanbul ignore next */
    (cov_11bqy023sr().s[4]++, contextIn.kind),
    key =
    /* istanbul ignore next */
    (cov_11bqy023sr().s[5]++, kind === "getter" ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[3][0]++, "get") :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[3][1]++, kind === "setter" ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[4][0]++, "set") :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[4][1]++, "value")));
  var target =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[6]++,
  /* istanbul ignore next */
  (cov_11bqy023sr().b[6][0]++, !descriptorIn) &&
  /* istanbul ignore next */
  (cov_11bqy023sr().b[6][1]++, ctor) ?
  /* istanbul ignore next */
  (cov_11bqy023sr().b[5][0]++, contextIn["static"] ?
  /* istanbul ignore next */
  (cov_11bqy023sr().b[7][0]++, ctor) :
  /* istanbul ignore next */
  (cov_11bqy023sr().b[7][1]++, ctor.prototype)) :
  /* istanbul ignore next */
  (cov_11bqy023sr().b[5][1]++, null));
  var descriptor =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[7]++,
  /* istanbul ignore next */
  (cov_11bqy023sr().b[8][0]++, descriptorIn) ||
  /* istanbul ignore next */
  (cov_11bqy023sr().b[8][1]++, target ?
  /* istanbul ignore next */
  (cov_11bqy023sr().b[9][0]++, Object.getOwnPropertyDescriptor(target, contextIn.name)) :
  /* istanbul ignore next */
  (cov_11bqy023sr().b[9][1]++, {})));
  var _,
    done =
    /* istanbul ignore next */
    (cov_11bqy023sr().s[8]++, false);
  /* istanbul ignore next */
  cov_11bqy023sr().s[9]++;
  for (var i =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[10]++, decorators.length - 1); i >= 0; i--) {
    var context =
    /* istanbul ignore next */
    (cov_11bqy023sr().s[11]++, {});
    /* istanbul ignore next */
    cov_11bqy023sr().s[12]++;
    for (var p in contextIn) {
      /* istanbul ignore next */
      cov_11bqy023sr().s[13]++;
      context[p] = p === "access" ?
      /* istanbul ignore next */
      (cov_11bqy023sr().b[10][0]++, {}) :
      /* istanbul ignore next */
      (cov_11bqy023sr().b[10][1]++, contextIn[p]);
    }
    /* istanbul ignore next */
    cov_11bqy023sr().s[14]++;
    for (var p in contextIn.access) {
      /* istanbul ignore next */
      cov_11bqy023sr().s[15]++;
      context.access[p] = contextIn.access[p];
    }
    /* istanbul ignore next */
    cov_11bqy023sr().s[16]++;
    context.addInitializer = function (f) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[2]++;
      cov_11bqy023sr().s[17]++;
      if (done) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[11][0]++;
        cov_11bqy023sr().s[18]++;
        throw new TypeError("Cannot add initializers after decoration has completed");
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[11][1]++;
      }
      cov_11bqy023sr().s[19]++;
      extraInitializers.push(accept(
      /* istanbul ignore next */
      (cov_11bqy023sr().b[12][0]++, f) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[12][1]++, null)));
    };
    var result =
    /* istanbul ignore next */
    (cov_11bqy023sr().s[20]++, (0, decorators[i])(kind === "accessor" ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[13][0]++, {
      get: descriptor.get,
      set: descriptor.set
    }) :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[13][1]++, descriptor[key]), context));
    /* istanbul ignore next */
    cov_11bqy023sr().s[21]++;
    if (kind === "accessor") {
      /* istanbul ignore next */
      cov_11bqy023sr().b[14][0]++;
      cov_11bqy023sr().s[22]++;
      if (result === void 0) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[15][0]++;
        cov_11bqy023sr().s[23]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[15][1]++;
      }
      cov_11bqy023sr().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_11bqy023sr().b[17][0]++, result === null) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[17][1]++, typeof result !== "object")) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[16][0]++;
        cov_11bqy023sr().s[25]++;
        throw new TypeError("Object expected");
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[16][1]++;
      }
      cov_11bqy023sr().s[26]++;
      if (_ = accept(result.get)) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[18][0]++;
        cov_11bqy023sr().s[27]++;
        descriptor.get = _;
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[18][1]++;
      }
      cov_11bqy023sr().s[28]++;
      if (_ = accept(result.set)) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[19][0]++;
        cov_11bqy023sr().s[29]++;
        descriptor.set = _;
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[19][1]++;
      }
      cov_11bqy023sr().s[30]++;
      if (_ = accept(result.init)) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[20][0]++;
        cov_11bqy023sr().s[31]++;
        initializers.unshift(_);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[20][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_11bqy023sr().b[14][1]++;
      cov_11bqy023sr().s[32]++;
      if (_ = accept(result)) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[21][0]++;
        cov_11bqy023sr().s[33]++;
        if (kind === "field") {
          /* istanbul ignore next */
          cov_11bqy023sr().b[22][0]++;
          cov_11bqy023sr().s[34]++;
          initializers.unshift(_);
        } else {
          /* istanbul ignore next */
          cov_11bqy023sr().b[22][1]++;
          cov_11bqy023sr().s[35]++;
          descriptor[key] = _;
        }
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[21][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_11bqy023sr().s[36]++;
  if (target) {
    /* istanbul ignore next */
    cov_11bqy023sr().b[23][0]++;
    cov_11bqy023sr().s[37]++;
    Object.defineProperty(target, contextIn.name, descriptor);
  } else
  /* istanbul ignore next */
  {
    cov_11bqy023sr().b[23][1]++;
  }
  cov_11bqy023sr().s[38]++;
  done = true;
}));
var __runInitializers =
/* istanbul ignore next */
(cov_11bqy023sr().s[39]++,
/* istanbul ignore next */
(cov_11bqy023sr().b[24][0]++, this) &&
/* istanbul ignore next */
(cov_11bqy023sr().b[24][1]++, this.__runInitializers) ||
/* istanbul ignore next */
(cov_11bqy023sr().b[24][2]++, function (thisArg, initializers, value) {
  /* istanbul ignore next */
  cov_11bqy023sr().f[3]++;
  var useValue =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[40]++, arguments.length > 2);
  /* istanbul ignore next */
  cov_11bqy023sr().s[41]++;
  for (var i =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[42]++, 0); i < initializers.length; i++) {
    /* istanbul ignore next */
    cov_11bqy023sr().s[43]++;
    value = useValue ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[25][0]++, initializers[i].call(thisArg, value)) :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[25][1]++, initializers[i].call(thisArg));
  }
  /* istanbul ignore next */
  cov_11bqy023sr().s[44]++;
  return useValue ?
  /* istanbul ignore next */
  (cov_11bqy023sr().b[26][0]++, value) :
  /* istanbul ignore next */
  (cov_11bqy023sr().b[26][1]++, void 0);
}));
var __setFunctionName =
/* istanbul ignore next */
(cov_11bqy023sr().s[45]++,
/* istanbul ignore next */
(cov_11bqy023sr().b[27][0]++, this) &&
/* istanbul ignore next */
(cov_11bqy023sr().b[27][1]++, this.__setFunctionName) ||
/* istanbul ignore next */
(cov_11bqy023sr().b[27][2]++, function (f, name, prefix) {
  /* istanbul ignore next */
  cov_11bqy023sr().f[4]++;
  cov_11bqy023sr().s[46]++;
  if (typeof name === "symbol") {
    /* istanbul ignore next */
    cov_11bqy023sr().b[28][0]++;
    cov_11bqy023sr().s[47]++;
    name = name.description ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[29][0]++, "[".concat(name.description, "]")) :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[29][1]++, "");
  } else
  /* istanbul ignore next */
  {
    cov_11bqy023sr().b[28][1]++;
  }
  cov_11bqy023sr().s[48]++;
  return Object.defineProperty(f, "name", {
    configurable: true,
    value: prefix ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[30][0]++, "".concat(prefix, " ", name)) :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[30][1]++, name)
  });
}));
/* istanbul ignore next */
cov_11bqy023sr().s[49]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_11bqy023sr().s[50]++;
exports.PinoLoggingMiddleware = void 0;
const common_1 =
/* istanbul ignore next */
(cov_11bqy023sr().s[51]++, require("@nestjs/common"));
const uuid_1 =
/* istanbul ignore next */
(cov_11bqy023sr().s[52]++, require("uuid"));
const logging_interface_1 =
/* istanbul ignore next */
(cov_11bqy023sr().s[53]++, require("../interfaces/logging.interface"));
/**
 * @class PinoLoggingMiddleware
 * @description Pino日志中间件，用于记录HTTP请求和响应日志
 *
 * 主要功能：
 * 1. 自动生成请求ID
 * 2. 记录请求详情（方法、URL、头部、查询参数、请求体）
 * 3. 记录响应详情（状态码、响应时间、响应大小）
 * 4. 支持多租户和用户上下文
 * 5. 错误日志记录
 * 6. 性能监控
 */
let PinoLoggingMiddleware =
/* istanbul ignore next */
(cov_11bqy023sr().s[54]++, (() => {
  /* istanbul ignore next */
  cov_11bqy023sr().f[5]++;
  let _classDecorators =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[55]++, [(0, common_1.Injectable)()]);
  let _classDescriptor;
  let _classExtraInitializers =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[56]++, []);
  let _classThis;
  var PinoLoggingMiddleware =
  /* istanbul ignore next */
  (cov_11bqy023sr().s[57]++, _classThis = class {
    constructor(logger) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[6]++;
      cov_11bqy023sr().s[58]++;
      this.logger = logger;
    }
    /**
     * @method use
     * @description 中间件主方法，处理HTTP请求和响应日志
     * @param {FastifyRequest} req Fastify请求对象
     * @param {FastifyReply} res Fastify响应对象
     * @param {() => void} next 下一个中间件函数
     */
    use(req, res, next) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[7]++;
      const startTime =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[59]++, Date.now());
      const requestId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[60]++, this.generateRequestId());
      const tenantId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[61]++, this.extractTenantId(req));
      const userId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[62]++, this.extractUserId(req));
      // 构建请求日志数据
      const requestLogData =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[63]++, {
        requestId,
        method: req.method,
        url: req.url,
        headers: req.headers,
        query: req.query,
        body: req.body,
        ip: this.getClientIp(req),
        userAgent:
        /* istanbul ignore next */
        (cov_11bqy023sr().b[31][0]++, req.headers['user-agent']) ||
        /* istanbul ignore next */
        (cov_11bqy023sr().b[31][1]++, ''),
        tenantId,
        userId,
        timestamp: new Date()
      });
      // 记录请求日志
      /* istanbul ignore next */
      cov_11bqy023sr().s[64]++;
      this.logRequest(requestLogData);
      // 设置响应变量
      let responseBody;
      let responseSize =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[65]++, 0);
      // Fastify的响应处理
      const originalSend =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[66]++, res.send);
      /* istanbul ignore next */
      cov_11bqy023sr().s[67]++;
      res.send = payload => {
        /* istanbul ignore next */
        cov_11bqy023sr().f[8]++;
        cov_11bqy023sr().s[68]++;
        if (
        /* istanbul ignore next */
        (cov_11bqy023sr().b[33][0]++, payload) &&
        /* istanbul ignore next */
        (cov_11bqy023sr().b[33][1]++, !responseBody)) {
          /* istanbul ignore next */
          cov_11bqy023sr().b[32][0]++;
          cov_11bqy023sr().s[69]++;
          responseBody = payload;
          /* istanbul ignore next */
          cov_11bqy023sr().s[70]++;
          responseSize = typeof payload === 'string' ?
          /* istanbul ignore next */
          (cov_11bqy023sr().b[34][0]++, payload.length) :
          /* istanbul ignore next */
          (cov_11bqy023sr().b[34][1]++, JSON.stringify(payload).length);
        } else
        /* istanbul ignore next */
        {
          cov_11bqy023sr().b[32][1]++;
        }
        // 记录响应日志
        const duration =
        /* istanbul ignore next */
        (cov_11bqy023sr().s[71]++, Date.now() - startTime);
        const responseLogData =
        /* istanbul ignore next */
        (cov_11bqy023sr().s[72]++, {
          ...requestLogData,
          statusCode: res.statusCode,
          duration,
          responseSize
        });
        // 异步记录日志，不阻塞响应
        /* istanbul ignore next */
        cov_11bqy023sr().s[73]++;
        setImmediate(() => {
          /* istanbul ignore next */
          cov_11bqy023sr().f[9]++;
          cov_11bqy023sr().s[74]++;
          this.logResponse(responseLogData);
        });
        /* istanbul ignore next */
        cov_11bqy023sr().s[75]++;
        return originalSend.call(res, payload);
      };
      /* istanbul ignore next */
      cov_11bqy023sr().s[76]++;
      next();
    }
    /**
     * @private
     * @method generateRequestId
     * @description 生成请求ID
     * @returns {string} 请求ID
     */
    generateRequestId() {
      /* istanbul ignore next */
      cov_11bqy023sr().f[10]++;
      cov_11bqy023sr().s[77]++;
      return (0, uuid_1.v4)();
    }
    /**
     * @private
     * @method extractTenantId
     * @description 从请求中提取租户ID
     * @param {FastifyRequest} req Fastify请求对象
     * @returns {string | undefined} 租户ID
     */
    extractTenantId(req) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[11]++;
      // 从请求头中提取
      const headerTenantId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[78]++,
      /* istanbul ignore next */
      (cov_11bqy023sr().b[35][0]++, req.headers['x-tenant-id']) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[35][1]++, req.headers['X-Tenant-ID']));
      /* istanbul ignore next */
      cov_11bqy023sr().s[79]++;
      if (headerTenantId) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[36][0]++;
        cov_11bqy023sr().s[80]++;
        return String(headerTenantId);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[36][1]++;
      }
      // 从查询参数中提取
      const queryTenantId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[81]++,
      /* istanbul ignore next */
      (cov_11bqy023sr().b[37][0]++, req.query?.tenantId) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[37][1]++, req.query?.tenant_id));
      /* istanbul ignore next */
      cov_11bqy023sr().s[82]++;
      if (queryTenantId) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[38][0]++;
        cov_11bqy023sr().s[83]++;
        return String(queryTenantId);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[38][1]++;
      }
      // 从请求体中提取
      const bodyTenantId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[84]++,
      /* istanbul ignore next */
      (cov_11bqy023sr().b[39][0]++, req.body?.tenantId) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[39][1]++, req.body?.tenant_id));
      /* istanbul ignore next */
      cov_11bqy023sr().s[85]++;
      if (bodyTenantId) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[40][0]++;
        cov_11bqy023sr().s[86]++;
        return String(bodyTenantId);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[40][1]++;
      }
      cov_11bqy023sr().s[87]++;
      return undefined;
    }
    /**
     * @private
     * @method extractUserId
     * @description 从请求中提取用户ID
     * @param {FastifyRequest} req Fastify请求对象
     * @returns {string | undefined} 用户ID
     */
    extractUserId(req) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[12]++;
      // 从请求头中提取
      const headerUserId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[88]++,
      /* istanbul ignore next */
      (cov_11bqy023sr().b[41][0]++, req.headers['x-user-id']) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[41][1]++, req.headers['X-User-ID']));
      /* istanbul ignore next */
      cov_11bqy023sr().s[89]++;
      if (headerUserId) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[42][0]++;
        cov_11bqy023sr().s[90]++;
        return String(headerUserId);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[42][1]++;
      }
      // 从查询参数中提取
      const queryUserId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[91]++,
      /* istanbul ignore next */
      (cov_11bqy023sr().b[43][0]++, req.query?.userId) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[43][1]++, req.query?.user_id));
      /* istanbul ignore next */
      cov_11bqy023sr().s[92]++;
      if (queryUserId) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[44][0]++;
        cov_11bqy023sr().s[93]++;
        return String(queryUserId);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[44][1]++;
      }
      // 从请求体中提取
      const bodyUserId =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[94]++,
      /* istanbul ignore next */
      (cov_11bqy023sr().b[45][0]++, req.body?.userId) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[45][1]++, req.body?.user_id));
      /* istanbul ignore next */
      cov_11bqy023sr().s[95]++;
      if (bodyUserId) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[46][0]++;
        cov_11bqy023sr().s[96]++;
        return String(bodyUserId);
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[46][1]++;
      }
      cov_11bqy023sr().s[97]++;
      return undefined;
    }
    /**
     * @private
     * @method getClientIp
     * @description 获取客户端IP地址
     * @param {FastifyRequest} req Fastify请求对象
     * @returns {string} 客户端IP地址
     */
    getClientIp(req) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[13]++;
      cov_11bqy023sr().s[98]++;
      return /* istanbul ignore next */(cov_11bqy023sr().b[47][0]++, req.headers['x-forwarded-for']) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[47][1]++, req.headers['x-real-ip']) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[47][2]++, req.ip) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[47][3]++, req.socket.remoteAddress) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[47][4]++, 'unknown');
    }
    /**
     * @private
     * @method logRequest
     * @description 记录请求日志
     * @param {RequestLogData} data 请求日志数据
     */
    logRequest(data) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[14]++;
      cov_11bqy023sr().s[99]++;
      this.logger.info('HTTP Request', logging_interface_1.LogContext.HTTP_REQUEST, {
        requestId: data.requestId,
        method: data.method,
        url: data.url,
        ip: data.ip,
        userAgent: data.userAgent,
        tenantId: data.tenantId,
        userId: data.userId,
        query: data.query,
        body: this.sanitizeBody(data.body),
        headers: this.sanitizeHeaders(data.headers)
      });
    }
    /**
     * @private
     * @method logResponse
     * @description 记录响应日志
     * @param {ResponseLogData} data 响应日志数据
     */
    logResponse(data) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[15]++;
      const logLevel =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[100]++, data.statusCode >= 400 ?
      /* istanbul ignore next */
      (cov_11bqy023sr().b[48][0]++, 'warn') :
      /* istanbul ignore next */
      (cov_11bqy023sr().b[48][1]++, 'info'));
      const logMethod =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[101]++, this.logger[logLevel]);
      /* istanbul ignore next */
      cov_11bqy023sr().s[102]++;
      logMethod.call(this.logger, 'HTTP Response', logging_interface_1.LogContext.HTTP_REQUEST, {
        requestId: data.requestId,
        method: data.method,
        url: data.url,
        statusCode: data.statusCode,
        duration: data.duration,
        responseSize: data.responseSize,
        tenantId: data.tenantId,
        userId: data.userId
      });
    }
    /**
     * @private
     * @method logError
     * @description 记录错误日志
     * @param {ResponseLogData} data 错误日志数据
     */
    // private logError(data: ResponseLogData): void {
    //   this.logger.error('HTTP Error', LogContext.HTTP_REQUEST, {
    //     requestId: data.requestId,
    //     method: data.method,
    //     url: data.url,
    //     statusCode: data.statusCode,
    //     duration: data.duration,
    //     error: data.error?.message,
    //     stack: data.error?.stack,
    //     tenantId: data.tenantId,
    //     userId: data.userId,
    //   });
    // }
    /**
     * @private
     * @method sanitizeBody
     * @description 清理请求体中的敏感信息
     * @param {unknown} body 请求体
     * @returns {unknown} 清理后的请求体
     */
    sanitizeBody(body) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[16]++;
      cov_11bqy023sr().s[103]++;
      if (
      /* istanbul ignore next */
      (cov_11bqy023sr().b[50][0]++, !body) ||
      /* istanbul ignore next */
      (cov_11bqy023sr().b[50][1]++, typeof body !== 'object')) {
        /* istanbul ignore next */
        cov_11bqy023sr().b[49][0]++;
        cov_11bqy023sr().s[104]++;
        return body;
      } else
      /* istanbul ignore next */
      {
        cov_11bqy023sr().b[49][1]++;
      }
      const sensitiveFields =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[105]++, ['password', 'token', 'secret', 'key']);
      const sanitized =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[106]++, {
        ...body
      });
      /* istanbul ignore next */
      cov_11bqy023sr().s[107]++;
      sensitiveFields.forEach(field => {
        /* istanbul ignore next */
        cov_11bqy023sr().f[17]++;
        cov_11bqy023sr().s[108]++;
        if (sanitized[field]) {
          /* istanbul ignore next */
          cov_11bqy023sr().b[51][0]++;
          cov_11bqy023sr().s[109]++;
          sanitized[field] = '***REDACTED***';
        } else
        /* istanbul ignore next */
        {
          cov_11bqy023sr().b[51][1]++;
        }
      });
      /* istanbul ignore next */
      cov_11bqy023sr().s[110]++;
      return sanitized;
    }
    /**
     * @private
     * @method sanitizeHeaders
     * @description 清理请求头中的敏感信息
     * @param {Record<string, string>} headers 请求头
     * @returns {Record<string, string>} 清理后的请求头
     */
    sanitizeHeaders(headers) {
      /* istanbul ignore next */
      cov_11bqy023sr().f[18]++;
      const sensitiveHeaders =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[111]++, ['authorization', 'cookie', 'x-api-key']);
      const sanitized =
      /* istanbul ignore next */
      (cov_11bqy023sr().s[112]++, {
        ...headers
      });
      /* istanbul ignore next */
      cov_11bqy023sr().s[113]++;
      sensitiveHeaders.forEach(header => {
        /* istanbul ignore next */
        cov_11bqy023sr().f[19]++;
        cov_11bqy023sr().s[114]++;
        if (sanitized[header]) {
          /* istanbul ignore next */
          cov_11bqy023sr().b[52][0]++;
          cov_11bqy023sr().s[115]++;
          sanitized[header] = '***REDACTED***';
        } else
        /* istanbul ignore next */
        {
          cov_11bqy023sr().b[52][1]++;
        }
      });
      /* istanbul ignore next */
      cov_11bqy023sr().s[116]++;
      return sanitized;
    }
  });
  /* istanbul ignore next */
  cov_11bqy023sr().s[117]++;
  __setFunctionName(_classThis, "PinoLoggingMiddleware");
  /* istanbul ignore next */
  cov_11bqy023sr().s[118]++;
  (() => {
    /* istanbul ignore next */
    cov_11bqy023sr().f[20]++;
    const _metadata =
    /* istanbul ignore next */
    (cov_11bqy023sr().s[119]++,
    /* istanbul ignore next */
    (cov_11bqy023sr().b[54][0]++, typeof Symbol === "function") &&
    /* istanbul ignore next */
    (cov_11bqy023sr().b[54][1]++, Symbol.metadata) ?
    /* istanbul ignore next */
    (cov_11bqy023sr().b[53][0]++, Object.create(null)) :
    /* istanbul ignore next */
    (cov_11bqy023sr().b[53][1]++, void 0));
    /* istanbul ignore next */
    cov_11bqy023sr().s[120]++;
    __esDecorate(null, _classDescriptor = {
      value: _classThis
    }, _classDecorators, {
      kind: "class",
      name: _classThis.name,
      metadata: _metadata
    }, null, _classExtraInitializers);
    /* istanbul ignore next */
    cov_11bqy023sr().s[121]++;
    PinoLoggingMiddleware = _classThis = _classDescriptor.value;
    /* istanbul ignore next */
    cov_11bqy023sr().s[122]++;
    if (_metadata) {
      /* istanbul ignore next */
      cov_11bqy023sr().b[55][0]++;
      cov_11bqy023sr().s[123]++;
      Object.defineProperty(_classThis, Symbol.metadata, {
        enumerable: true,
        configurable: true,
        writable: true,
        value: _metadata
      });
    } else
    /* istanbul ignore next */
    {
      cov_11bqy023sr().b[55][1]++;
    }
    cov_11bqy023sr().s[124]++;
    __runInitializers(_classThis, _classExtraInitializers);
  })();
  /* istanbul ignore next */
  cov_11bqy023sr().s[125]++;
  return PinoLoggingMiddleware = _classThis;
})());
/* istanbul ignore next */
cov_11bqy023sr().s[126]++;
exports.PinoLoggingMiddleware = PinoLoggingMiddleware;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,