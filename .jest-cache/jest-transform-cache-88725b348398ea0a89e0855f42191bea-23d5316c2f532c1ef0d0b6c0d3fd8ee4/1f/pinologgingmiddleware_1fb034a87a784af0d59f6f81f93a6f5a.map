{"version":3,"names":["common_1","cov_11bqy023sr","s","require","uuid_1","logging_interface_1","PinoLoggingMiddleware","f","Injectable","constructor","logger","use","req","res","next","startTime","Date","now","requestId","generateRequestId","tenantId","extractTenantId","userId","extractUserId","requestLogData","method","url","headers","query","body","ip","getClientIp","userAgent","b","timestamp","logRequest","responseBody","responseSize","originalSend","send","payload","length","JSON","stringify","duration","responseLogData","statusCode","setImmediate","logResponse","call","v4","headerTenantId","String","queryTenantId","tenant_id","bodyTenantId","undefined","headerUserId","queryUserId","user_id","bodyUserId","socket","remoteAddress","data","info","LogContext","HTTP_REQUEST","sanitizeBody","sanitizeHeaders","logLevel","logMethod","sensitiveFields","sanitized","forEach","field","sensitiveHeaders","header","__esDecorate","_classDescriptor","value","_classThis","_classDecorators","kind","name","metadata","_metadata","_classExtraInitializers","__runInitializers","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/middleware/pino-logging.middleware.ts"],"sourcesContent":["import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { FastifyRequest, FastifyReply } from 'fastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PinoLoggerService } from '../services/pino-logger.service';\nimport { LogContext } from '../interfaces/logging.interface';\n\n/**\n * @interface RequestLogData\n * @description 请求日志数据接口\n */\ninterface RequestLogData {\n  requestId: string;\n  method: string;\n  url: string;\n  headers: Record<string, string>;\n  query: Record<string, unknown>;\n  body: unknown;\n  ip: string;\n  userAgent: string;\n  tenantId?: string;\n  userId?: string;\n  timestamp: Date;\n}\n\n/**\n * @interface ResponseLogData\n * @description 响应日志数据接口\n */\ninterface ResponseLogData extends RequestLogData {\n  statusCode: number;\n  duration: number;\n  responseSize?: number;\n  error?: Error;\n}\n\n/**\n * @class PinoLoggingMiddleware\n * @description Pino日志中间件，用于记录HTTP请求和响应日志\n *\n * 主要功能：\n * 1. 自动生成请求ID\n * 2. 记录请求详情（方法、URL、头部、查询参数、请求体）\n * 3. 记录响应详情（状态码、响应时间、响应大小）\n * 4. 支持多租户和用户上下文\n * 5. 错误日志记录\n * 6. 性能监控\n */\n@Injectable()\nexport class PinoLoggingMiddleware implements NestMiddleware {\n  constructor(private readonly logger: PinoLoggerService) {}\n\n  /**\n   * @method use\n   * @description 中间件主方法，处理HTTP请求和响应日志\n   * @param {FastifyRequest} req Fastify请求对象\n   * @param {FastifyReply} res Fastify响应对象\n   * @param {() => void} next 下一个中间件函数\n   */\n  use(req: FastifyRequest, res: FastifyReply, next: () => void): void {\n    const startTime = Date.now();\n    const requestId = this.generateRequestId();\n    const tenantId = this.extractTenantId(req);\n    const userId = this.extractUserId(req);\n\n    // 构建请求日志数据\n    const requestLogData: RequestLogData = {\n      requestId,\n      method: req.method,\n      url: req.url,\n      headers: req.headers as Record<string, string>,\n      query: req.query as Record<string, unknown>,\n      body: req.body,\n      ip: this.getClientIp(req),\n      userAgent: req.headers['user-agent'] || '',\n      tenantId,\n      userId,\n      timestamp: new Date(),\n    };\n\n    // 记录请求日志\n    this.logRequest(requestLogData);\n\n    // 设置响应变量\n    let responseBody: unknown;\n    let responseSize = 0;\n\n    // Fastify的响应处理\n    const originalSend = res.send;\n    res.send = (payload?: unknown): FastifyReply => {\n      if (payload && !responseBody) {\n        responseBody = payload;\n        responseSize =\n          typeof payload === 'string'\n            ? payload.length\n            : JSON.stringify(payload).length;\n      }\n\n      // 记录响应日志\n      const duration = Date.now() - startTime;\n      const responseLogData: ResponseLogData = {\n        ...requestLogData,\n        statusCode: res.statusCode,\n        duration,\n        responseSize,\n      };\n\n      // 异步记录日志，不阻塞响应\n      setImmediate(() => {\n        this.logResponse(responseLogData);\n      });\n\n      return originalSend.call(res, payload);\n    };\n\n    next();\n  }\n\n  /**\n   * @private\n   * @method generateRequestId\n   * @description 生成请求ID\n   * @returns {string} 请求ID\n   */\n  private generateRequestId(): string {\n    return uuidv4();\n  }\n\n  /**\n   * @private\n   * @method extractTenantId\n   * @description 从请求中提取租户ID\n   * @param {FastifyRequest} req Fastify请求对象\n   * @returns {string | undefined} 租户ID\n   */\n  private extractTenantId(req: FastifyRequest): string | undefined {\n    // 从请求头中提取\n    const headerTenantId =\n      req.headers['x-tenant-id'] || req.headers['X-Tenant-ID'];\n    if (headerTenantId) return String(headerTenantId);\n\n    // 从查询参数中提取\n    const queryTenantId =\n      (req.query as Record<string, unknown>)?.tenantId ||\n      (req.query as Record<string, unknown>)?.tenant_id;\n    if (queryTenantId) return String(queryTenantId);\n\n    // 从请求体中提取\n    const bodyTenantId =\n      (req.body as Record<string, unknown>)?.tenantId ||\n      (req.body as Record<string, unknown>)?.tenant_id;\n    if (bodyTenantId) return String(bodyTenantId);\n\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @method extractUserId\n   * @description 从请求中提取用户ID\n   * @param {FastifyRequest} req Fastify请求对象\n   * @returns {string | undefined} 用户ID\n   */\n  private extractUserId(req: FastifyRequest): string | undefined {\n    // 从请求头中提取\n    const headerUserId = req.headers['x-user-id'] || req.headers['X-User-ID'];\n    if (headerUserId) return String(headerUserId);\n\n    // 从查询参数中提取\n    const queryUserId =\n      (req.query as Record<string, unknown>)?.userId ||\n      (req.query as Record<string, unknown>)?.user_id;\n    if (queryUserId) return String(queryUserId);\n\n    // 从请求体中提取\n    const bodyUserId =\n      (req.body as Record<string, unknown>)?.userId ||\n      (req.body as Record<string, unknown>)?.user_id;\n    if (bodyUserId) return String(bodyUserId);\n\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @method getClientIp\n   * @description 获取客户端IP地址\n   * @param {FastifyRequest} req Fastify请求对象\n   * @returns {string} 客户端IP地址\n   */\n  private getClientIp(req: FastifyRequest): string {\n    return (\n      (req.headers['x-forwarded-for'] as string) ||\n      (req.headers['x-real-ip'] as string) ||\n      req.ip ||\n      req.socket.remoteAddress ||\n      'unknown'\n    );\n  }\n\n  /**\n   * @private\n   * @method logRequest\n   * @description 记录请求日志\n   * @param {RequestLogData} data 请求日志数据\n   */\n  private logRequest(data: RequestLogData): void {\n    this.logger.info('HTTP Request', LogContext.HTTP_REQUEST, {\n      requestId: data.requestId,\n      method: data.method,\n      url: data.url,\n      ip: data.ip,\n      userAgent: data.userAgent,\n      tenantId: data.tenantId,\n      userId: data.userId,\n      query: data.query,\n      body: this.sanitizeBody(data.body),\n      headers: this.sanitizeHeaders(data.headers),\n    });\n  }\n\n  /**\n   * @private\n   * @method logResponse\n   * @description 记录响应日志\n   * @param {ResponseLogData} data 响应日志数据\n   */\n  private logResponse(data: ResponseLogData): void {\n    const logLevel = data.statusCode >= 400 ? 'warn' : 'info';\n    const logMethod = this.logger[logLevel as keyof PinoLoggerService] as (\n      message: string,\n      context: LogContext,\n      metadata?: Record<string, unknown>,\n    ) => void;\n\n    logMethod.call(this.logger, 'HTTP Response', LogContext.HTTP_REQUEST, {\n      requestId: data.requestId,\n      method: data.method,\n      url: data.url,\n      statusCode: data.statusCode,\n      duration: data.duration,\n      responseSize: data.responseSize,\n      tenantId: data.tenantId,\n      userId: data.userId,\n    });\n  }\n\n  /**\n   * @private\n   * @method logError\n   * @description 记录错误日志\n   * @param {ResponseLogData} data 错误日志数据\n   */\n  // private logError(data: ResponseLogData): void {\n  //   this.logger.error('HTTP Error', LogContext.HTTP_REQUEST, {\n  //     requestId: data.requestId,\n  //     method: data.method,\n  //     url: data.url,\n  //     statusCode: data.statusCode,\n  //     duration: data.duration,\n  //     error: data.error?.message,\n  //     stack: data.error?.stack,\n  //     tenantId: data.tenantId,\n  //     userId: data.userId,\n  //   });\n  // }\n\n  /**\n   * @private\n   * @method sanitizeBody\n   * @description 清理请求体中的敏感信息\n   * @param {unknown} body 请求体\n   * @returns {unknown} 清理后的请求体\n   */\n  private sanitizeBody(body: unknown): unknown {\n    if (!body || typeof body !== 'object') return body;\n\n    const sensitiveFields = ['password', 'token', 'secret', 'key'];\n    const sanitized = { ...(body as Record<string, unknown>) };\n\n    sensitiveFields.forEach(field => {\n      if (sanitized[field]) {\n        sanitized[field] = '***REDACTED***';\n      }\n    });\n\n    return sanitized;\n  }\n\n  /**\n   * @private\n   * @method sanitizeHeaders\n   * @description 清理请求头中的敏感信息\n   * @param {Record<string, string>} headers 请求头\n   * @returns {Record<string, string>} 清理后的请求头\n   */\n  private sanitizeHeaders(\n    headers: Record<string, string>,\n  ): Record<string, string> {\n    const sensitiveHeaders = ['authorization', 'cookie', 'x-api-key'];\n    const sanitized = { ...headers };\n\n    sensitiveHeaders.forEach(header => {\n      if (sanitized[header]) {\n        sanitized[header] = '***REDACTED***';\n      }\n    });\n\n    return sanitized;\n  }\n}\n"],"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","ignoreList":[]}