ab4b19ff6dc0cfb5d7946e72407bde68
"use strict";

/* istanbul ignore next */
function cov_2bz8r2wnn5() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/services/data-isolation.service.ts";
  var hash = "b6cf73c7a3012b5a4db5bfb9b70ce8831725c4e5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/services/data-isolation.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 38
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "4": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "5": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "6": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "7": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 50,
          column: 51
        }
      },
      "8": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "9": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "10": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 55,
          column: 65
        }
      },
      "11": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "12": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 59,
          column: 53
        }
      },
      "13": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "14": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "15": {
        start: {
          line: 84,
          column: 35
        },
        end: {
          line: 84,
          column: 75
        }
      },
      "16": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "17": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 68
        }
      },
      "18": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 87
        }
      },
      "19": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "20": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "21": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "22": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 25
        }
      },
      "23": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "24": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 29
        }
      },
      "25": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 71
        }
      },
      "26": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 83
        }
      },
      "27": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 79
        }
      },
      "28": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 67
        }
      },
      "29": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 71
        }
      },
      "30": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "31": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 24
        }
      },
      "32": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "33": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "34": {
        start: {
          line: 145,
          column: 31
        },
        end: {
          line: 145,
          column: 73
        }
      },
      "35": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "36": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 65
        }
      },
      "37": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 30
        }
      },
      "38": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "39": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "40": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 66
        }
      },
      "41": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 61
        }
      },
      "42": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "43": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 85
        }
      },
      "44": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 58
        }
      },
      "45": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "46": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 47
        }
      },
      "47": {
        start: {
          line: 186,
          column: 23
        },
        end: {
          line: 186,
          column: 61
        }
      },
      "48": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "49": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 48
        }
      },
      "50": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 22
        }
      },
      "51": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "52": {
        start: {
          line: 203,
          column: 35
        },
        end: {
          line: 203,
          column: 75
        }
      },
      "53": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "54": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 63
        }
      },
      "55": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 82
        }
      },
      "56": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 49
        }
      },
      "57": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 25
        }
      },
      "58": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "59": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 54
        }
      },
      "60": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "61": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 52
        }
      },
      "62": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "63": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "64": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "65": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 56
        }
      },
      "66": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 46
        }
      },
      "67": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "68": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 24
        }
      },
      "69": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 56
        }
      },
      "70": {
        start: {
          line: 266,
          column: 35
        },
        end: {
          line: 266,
          column: 98
        }
      },
      "71": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "72": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "73": {
        start: {
          line: 271,
          column: 36
        },
        end: {
          line: 271,
          column: 80
        }
      },
      "74": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "75": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "76": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 84
        }
      },
      "77": {
        start: {
          line: 276,
          column: 48
        },
        end: {
          line: 276,
          column: 82
        }
      },
      "78": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "79": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 40
        }
      },
      "80": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "81": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 44
        }
      },
      "82": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 39
        }
      },
      "83": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 21
        }
      },
      "84": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "85": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 40
        }
      },
      "86": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "87": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 56
        }
      },
      "88": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 45
        }
      },
      "89": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 21
        }
      },
      "90": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "91": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 40
        }
      },
      "92": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "93": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 52
        }
      },
      "94": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 43
        }
      },
      "95": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 21
        }
      },
      "96": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "97": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 40
        }
      },
      "98": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "99": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 40
        }
      },
      "100": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 37
        }
      },
      "101": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 21
        }
      },
      "102": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "103": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 24
        }
      },
      "104": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 60
        }
      },
      "105": {
        start: {
          line: 388,
          column: 35
        },
        end: {
          line: 388,
          column: 98
        }
      },
      "106": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "107": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 25
        }
      },
      "108": {
        start: {
          line: 393,
          column: 35
        },
        end: {
          line: 393,
          column: 98
        }
      },
      "109": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "110": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 397,
          column: 71
        }
      },
      "111": {
        start: {
          line: 396,
          column: 52
        },
        end: {
          line: 397,
          column: 69
        }
      },
      "112": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 399,
          column: 20
        }
      },
      "113": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 411,
          column: 46
        }
      },
      "114": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 53
        }
      },
      "115": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 47
        }
      },
      "116": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 58
        }
      },
      "117": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 57
        }
      },
      "118": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 55
        }
      },
      "119": {
        start: {
          line: 470,
          column: 0
        },
        end: {
          line: 470,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 42
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 55
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 39
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 104
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 135
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 56
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 159
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 36
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 179
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 59
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 200
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 34
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 224
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 44
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 247
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 67
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 264
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 276,
            column: 40
          },
          end: {
            line: 276,
            column: 41
          }
        },
        loc: {
          start: {
            line: 276,
            column: 48
          },
          end: {
            line: 276,
            column: 82
          }
        },
        line: 276
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 39
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 286
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 51
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 308
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 47
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 329
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 35
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 350
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 39
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 370
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 62
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 386
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 396,
            column: 44
          },
          end: {
            line: 396,
            column: 45
          }
        },
        loc: {
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 397,
            column: 69
          }
        },
        line: 396
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 409
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        loc: {
          start: {
            line: 420,
            column: 37
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 420
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 431,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        loc: {
          start: {
            line: 431,
            column: 31
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 431
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        loc: {
          start: {
            line: 442,
            column: 42
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 442
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        },
        loc: {
          start: {
            line: 454,
            column: 57
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 454
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 465,
            column: 4
          },
          end: {
            line: 465,
            column: 5
          }
        },
        loc: {
          start: {
            line: 465,
            column: 38
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 465
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 19
          }
        }, {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 49
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 18
          }
        }, {
          start: {
            line: 105,
            column: 22
          },
          end: {
            line: 105,
            column: 30
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 29
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 71
          }
        }, {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 83
          }
        }, {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 79
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 67
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 126,
            column: 71
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "8": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 19
          }
        }, {
          start: {
            line: 136,
            column: 23
          },
          end: {
            line: 136,
            column: 49
          }
        }],
        line: 136
      },
      "9": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "10": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 160,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 160,
            column: 19
          }
        }, {
          start: {
            line: 160,
            column: 23
          },
          end: {
            line: 160,
            column: 49
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "14": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "15": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "16": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "17": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "18": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "19": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 25
          }
        }, {
          start: {
            line: 228,
            column: 29
          },
          end: {
            line: 228,
            column: 47
          }
        }],
        line: 228
      },
      "20": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "21": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 31
          }
        }, {
          start: {
            line: 231,
            column: 35
          },
          end: {
            line: 231,
            column: 59
          }
        }],
        line: 231
      },
      "22": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "23": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 29
          }
        }, {
          start: {
            line: 234,
            column: 33
          },
          end: {
            line: 234,
            column: 55
          }
        }],
        line: 234
      },
      "24": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "25": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 32
          }
        }, {
          start: {
            line: 272,
            column: 36
          },
          end: {
            line: 272,
            column: 68
          }
        }],
        line: 272
      },
      "28": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "29": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: 295,
            column: 13
          },
          end: {
            line: 297,
            column: 9
          }
        }],
        line: 292
      },
      "30": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "31": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: 316,
            column: 13
          },
          end: {
            line: 318,
            column: 9
          }
        }],
        line: 313
      },
      "32": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: 337,
            column: 13
          },
          end: {
            line: 339,
            column: 9
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "35": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        }, {
          start: {
            line: 358,
            column: 13
          },
          end: {
            line: 360,
            column: 9
          }
        }],
        line: 355
      },
      "36": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "37": {
        loc: {
          start: {
            line: 376,
            column: 18
          },
          end: {
            line: 376,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 18
          },
          end: {
            line: 376,
            column: 32
          }
        }, {
          start: {
            line: 376,
            column: 36
          },
          end: {
            line: 376,
            column: 58
          }
        }],
        line: 376
      },
      "38": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "39": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "40": {
        loc: {
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 397,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 396,
            column: 104
          }
        }, {
          start: {
            line: 397,
            column: 16
          },
          end: {
            line: 397,
            column: 69
          }
        }],
        line: 396
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/services/data-isolation.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/services/data-isolation.service.ts"],
      sourcesContent: ["import {\n  IDataIsolationService,\n  DataIsolationContext,\n  DataClassification,\n  DataIsolationPolicy,\n  IsolationLevel,\n} from '../interfaces/data-isolation.interface';\nimport { ISOLATION_LEVELS } from '@aiofix/common';\n\n/**\n * \u6570\u636E\u9694\u79BB\u670D\u52A1\n *\n * \u5B9E\u73B0\u591A\u79DF\u6237\u6570\u636E\u9694\u79BB\u7684\u6838\u5FC3\u903B\u8F91\uFF0C\u63D0\u4F9B\u6570\u636E\u8BBF\u95EE\u63A7\u5236\u3001\n * \u6743\u9650\u9A8C\u8BC1\u3001\u9694\u79BB\u7B56\u7565\u7BA1\u7406\u7B49\u529F\u80FD\u3002\n *\n * \u6570\u636E\u9694\u79BB\u7684\u6838\u5FC3\u539F\u5219\uFF1A\n * 1. \u5E73\u53F0\u7EA7\u6570\u636E\uFF1A\u53EA\u6709\u5E73\u53F0\u7BA1\u7406\u5458\u53EF\u4EE5\u8BBF\u95EE\n * 2. \u79DF\u6237\u7EA7\u6570\u636E\uFF1A\u53EA\u6709\u79DF\u6237\u5185\u7528\u6237\u53EF\u4EE5\u8BBF\u95EE\n * 3. \u7EC4\u7EC7\u7EA7\u6570\u636E\uFF1A\u53EA\u6709\u7EC4\u7EC7\u5185\u7528\u6237\u53EF\u4EE5\u8BBF\u95EE\n * 4. \u90E8\u95E8\u7EA7\u6570\u636E\uFF1A\u53EA\u6709\u90E8\u95E8\u5185\u7528\u6237\u53EF\u4EE5\u8BBF\u95EE\n * 5. \u7528\u6237\u7EA7\u6570\u636E\uFF1A\u53EA\u6709\u7528\u6237\u672C\u4EBA\u53EF\u4EE5\u8BBF\u95EE\n *\n * @class DataIsolationService\n * @implements {IDataIsolationService}\n * @author AI\u5F00\u53D1\u56E2\u961F\n * @since 1.0.0\n */\nexport class DataIsolationService implements IDataIsolationService {\n  /**\n   * \u6570\u636E\u5206\u7C7B\u7F13\u5B58\n   * \u7F13\u5B58\u6570\u636E\u5206\u7C7B\u4FE1\u606F\uFF0C\u63D0\u9AD8\u67E5\u8BE2\u6027\u80FD\n   */\n  private readonly classificationCache = new Map<string, DataClassification>();\n\n  /**\n   * \u9694\u79BB\u7B56\u7565\u7F13\u5B58\n   * \u7F13\u5B58\u9694\u79BB\u7B56\u7565\u4FE1\u606F\uFF0C\u63D0\u9AD8\u67E5\u8BE2\u6027\u80FD\n   */\n  private readonly policyCache = new Map<IsolationLevel, DataIsolationPolicy>();\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u7684\u6570\u636E\u9694\u79BB\u4E0A\u4E0B\u6587\n   *\n   * @param {string} userId - \u7528\u6237ID\n   * @returns {Promise<DataIsolationContext>} \u6570\u636E\u9694\u79BB\u4E0A\u4E0B\u6587\n   *\n   * @throws {Error} \u5F53\u7528\u6237\u4E0D\u5B58\u5728\u6216\u4E0A\u4E0B\u6587\u83B7\u53D6\u5931\u8D25\u65F6\u629B\u51FA\u9519\u8BEF\n   */\n  async getDataIsolationContext(userId: string): Promise<DataIsolationContext> {\n    if (!userId || userId.trim().length === 0) {\n      throw new Error('\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // TODO: \u4ECE\u7528\u6237\u670D\u52A1\u83B7\u53D6\u7528\u6237\u4FE1\u606F\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u7528\u6237\u670D\u52A1\u5B9E\u73B0\u6765\u83B7\u53D6\u7528\u6237\u4FE1\u606F\n    const user = await this.getUserInfo(userId);\n\n    if (!user) {\n      throw new Error(`\u7528\u6237 ${userId} \u4E0D\u5B58\u5728`);\n    }\n\n    // \u786E\u5B9A\u7528\u6237\u7684\u9694\u79BB\u7EA7\u522B\n    const isolationLevel = this.determineIsolationLevel(user);\n\n    // \u83B7\u53D6\u7528\u6237\u6743\u9650\n    const permissions = await this.getUserPermissions(userId);\n\n    // \u83B7\u53D6\u7528\u6237\u89D2\u8272\n    const roles = await this.getUserRoles(userId);\n\n    return {\n      platformId: user.platformId,\n      tenantId: user.tenantId,\n      organizationId: user.organizationId,\n      departmentId: user.departmentId,\n      userId: user.id,\n      isolationLevel,\n      permissions,\n      roles,\n      createdAt: new Date(),\n      expiresAt: new Date(Date.now() + 30 * 60 * 1000), // 30\u5206\u949F\u8FC7\u671F\n    };\n  }\n\n  /**\n   * \u68C0\u67E5\u6570\u636E\u8BBF\u95EE\u6743\u9650\n   *\n   * @param {string} dataId - \u6570\u636EID\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @param {string} permission - \u6743\u9650\u7C7B\u578B\n   * @returns {Promise<boolean>} \u662F\u5426\u6709\u6743\u9650\n   */\n  async checkDataAccess(\n    dataId: string,\n    context: DataIsolationContext,\n    permission: string,\n  ): Promise<boolean> {\n    try {\n      // \u83B7\u53D6\u6570\u636E\u5206\u7C7B\u4FE1\u606F\n      const classification = await this.getDataClassification(dataId);\n\n      if (!classification) {\n        // \u5982\u679C\u6CA1\u6709\u5206\u7C7B\u4FE1\u606F\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u7B56\u7565\n        return this.checkDefaultAccess(context, permission);\n      }\n\n      // \u68C0\u67E5\u6570\u636E\u5206\u7C7B\u8BBF\u95EE\u6743\u9650\n      return this.checkClassificationAccess(\n        classification,\n        context,\n        permission,\n      );\n    } catch (error) {\n      console.error('\u6570\u636E\u8BBF\u95EE\u6743\u9650\u68C0\u67E5\u5931\u8D25:', error);\n      return false;\n    }\n  }\n\n  /**\n   * \u5E94\u7528\u6570\u636E\u9694\u79BB\u8FC7\u6EE4\u5668\n   *\n   * @param {any} query - \u67E5\u8BE2\u5BF9\u8C61\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @returns {any} \u8FC7\u6EE4\u540E\u7684\u67E5\u8BE2\u5BF9\u8C61\n   */\n  applyDataIsolation(query: any, context: DataIsolationContext): any {\n    if (!query || !context) {\n      return query;\n    }\n\n    // \u6839\u636E\u7528\u6237\u7684\u9694\u79BB\u7EA7\u522B\u5E94\u7528\u76F8\u5E94\u7684\u8FC7\u6EE4\u5668\n    switch (context.isolationLevel) {\n      case ISOLATION_LEVELS.PLATFORM:\n        // \u5E73\u53F0\u7EA7\u7528\u6237\u53EF\u4EE5\u8BBF\u95EE\u6240\u6709\u6570\u636E\n        return query;\n\n      case ISOLATION_LEVELS.TENANT:\n        // \u79DF\u6237\u7EA7\u7528\u6237\u53EA\u80FD\u8BBF\u95EE\u672C\u79DF\u6237\u6570\u636E\n        return this.applyTenantFilter(query, context.tenantId);\n\n      case ISOLATION_LEVELS.ORGANIZATION:\n        // \u7EC4\u7EC7\u7EA7\u7528\u6237\u53EA\u80FD\u8BBF\u95EE\u672C\u7EC4\u7EC7\u6570\u636E\n        return this.applyOrganizationFilter(query, context.organizationId);\n\n      case ISOLATION_LEVELS.DEPARTMENT:\n        // \u90E8\u95E8\u7EA7\u7528\u6237\u53EA\u80FD\u8BBF\u95EE\u672C\u90E8\u95E8\u6570\u636E\n        return this.applyDepartmentFilter(query, context.departmentId);\n\n      case ISOLATION_LEVELS.USER:\n        // \u7528\u6237\u7EA7\u53EA\u80FD\u8BBF\u95EE\u81EA\u5DF1\u7684\u6570\u636E\n        return this.applyUserFilter(query, context.userId);\n\n      default:\n        throw new Error(`\u4E0D\u652F\u6301\u7684\u9694\u79BB\u7EA7\u522B: ${context.isolationLevel}`);\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6570\u636E\u5206\u7C7B\u4FE1\u606F\n   *\n   * @param {string} dataId - \u6570\u636EID\n   * @returns {Promise<DataClassification | null>} \u6570\u636E\u5206\u7C7B\u4FE1\u606F\n   */\n  async getDataClassification(\n    dataId: string,\n  ): Promise<DataClassification | null> {\n    if (!dataId || dataId.trim().length === 0) {\n      return null;\n    }\n\n    // \u5148\u4ECE\u7F13\u5B58\u4E2D\u67E5\u627E\n    if (this.classificationCache.has(dataId)) {\n      return this.classificationCache.get(dataId)!;\n    }\n\n    // TODO: \u4ECE\u6570\u636E\u5E93\u6216\u914D\u7F6E\u4E2D\u83B7\u53D6\u6570\u636E\u5206\u7C7B\u4FE1\u606F\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6570\u636E\u5B58\u50A8\u5B9E\u73B0\u6765\u83B7\u53D6\u5206\u7C7B\u4FE1\u606F\n    const classification = await this.fetchDataClassification(dataId);\n\n    if (classification) {\n      // \u7F13\u5B58\u5206\u7C7B\u4FE1\u606F\n      this.classificationCache.set(dataId, classification);\n    }\n\n    return classification;\n  }\n\n  /**\n   * \u8BBE\u7F6E\u6570\u636E\u5206\u7C7B\n   *\n   * @param {string} dataId - \u6570\u636EID\n   * @param {Partial<DataClassification>} classification - \u5206\u7C7B\u4FE1\u606F\n   * @returns {Promise<void>}\n   */\n  async setDataClassification(\n    dataId: string,\n    classification: Partial<DataClassification>,\n  ): Promise<void> {\n    if (!dataId || dataId.trim().length === 0) {\n      throw new Error('\u6570\u636EID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // TODO: \u4FDD\u5B58\u6570\u636E\u5206\u7C7B\u4FE1\u606F\u5230\u6570\u636E\u5E93\u6216\u914D\u7F6E\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6570\u636E\u5B58\u50A8\u5B9E\u73B0\u6765\u4FDD\u5B58\u5206\u7C7B\u4FE1\u606F\n    await this.saveDataClassification(dataId, classification);\n\n    // \u66F4\u65B0\u7F13\u5B58\n    const existing = this.classificationCache.get(dataId);\n    if (existing) {\n      const updated = { ...existing, ...classification, updatedAt: new Date() };\n      this.classificationCache.set(dataId, updated);\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6570\u636E\u9694\u79BB\u7B56\u7565\n   *\n   * @param {IsolationLevel} level - \u9694\u79BB\u7EA7\u522B\n   * @returns {Promise<DataIsolationPolicy | null>} \u9694\u79BB\u7B56\u7565\n   */\n  async getIsolationPolicy(\n    level: IsolationLevel,\n  ): Promise<DataIsolationPolicy | null> {\n    // \u5148\u4ECE\u7F13\u5B58\u4E2D\u67E5\u627E\n    if (this.policyCache.has(level)) {\n      return this.policyCache.get(level)!;\n    }\n\n    // TODO: \u4ECE\u6570\u636E\u5E93\u6216\u914D\u7F6E\u4E2D\u83B7\u53D6\u9694\u79BB\u7B56\u7565\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u914D\u7F6E\u5B58\u50A8\u5B9E\u73B0\u6765\u83B7\u53D6\u7B56\u7565\u4FE1\u606F\n    const policy = await this.fetchIsolationPolicy(level);\n\n    if (policy) {\n      // \u7F13\u5B58\u7B56\u7565\u4FE1\u606F\n      this.policyCache.set(level, policy);\n    }\n\n    return policy;\n  }\n\n  /**\n   * \u9A8C\u8BC1\u6570\u636E\u9694\u79BB\u5408\u89C4\u6027\n   *\n   * @param {string} dataId - \u6570\u636EID\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @returns {Promise<boolean>} \u662F\u5426\u5408\u89C4\n   */\n  async validateDataIsolationCompliance(\n    dataId: string,\n    context: DataIsolationContext,\n  ): Promise<boolean> {\n    try {\n      // \u83B7\u53D6\u6570\u636E\u5206\u7C7B\u4FE1\u606F\n      const classification = await this.getDataClassification(dataId);\n\n      if (!classification) {\n        // \u5982\u679C\u6CA1\u6709\u5206\u7C7B\u4FE1\u606F\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u5408\u89C4\u68C0\u67E5\n        return this.validateDefaultCompliance(context);\n      }\n\n      // \u68C0\u67E5\u6570\u636E\u5206\u7C7B\u5408\u89C4\u6027\n      return this.validateClassificationCompliance(classification, context);\n    } catch (error) {\n      console.error('\u6570\u636E\u9694\u79BB\u5408\u89C4\u6027\u9A8C\u8BC1\u5931\u8D25:', error);\n      return false;\n    }\n  }\n\n  // \u79C1\u6709\u65B9\u6CD5\n\n  /**\n   * \u786E\u5B9A\u7528\u6237\u7684\u9694\u79BB\u7EA7\u522B\n   *\n   * @param {any} user - \u7528\u6237\u4FE1\u606F\n   * @returns {IsolationLevel} \u9694\u79BB\u7EA7\u522B\n   * @private\n   */\n  private determineIsolationLevel(user: any): IsolationLevel {\n    if (user.isPlatformAdmin) {\n      return ISOLATION_LEVELS.PLATFORM;\n    }\n\n    if (user.tenantId && user.isTenantAdmin) {\n      return ISOLATION_LEVELS.TENANT;\n    }\n\n    if (user.organizationId && user.isOrganizationAdmin) {\n      return ISOLATION_LEVELS.ORGANIZATION;\n    }\n\n    if (user.departmentId && user.isDepartmentAdmin) {\n      return ISOLATION_LEVELS.DEPARTMENT;\n    }\n\n    return ISOLATION_LEVELS.USER;\n  }\n\n  /**\n   * \u68C0\u67E5\u9ED8\u8BA4\u8BBF\u95EE\u6743\u9650\n   *\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @param {string} permission - \u6743\u9650\u7C7B\u578B\n   * @returns {boolean} \u662F\u5426\u6709\u6743\u9650\n   * @private\n   */\n  private checkDefaultAccess(\n    context: DataIsolationContext,\n    permission: string,\n  ): boolean {\n    // \u5E73\u53F0\u7BA1\u7406\u5458\u62E5\u6709\u6240\u6709\u6743\u9650\n    if (context.isolationLevel === ISOLATION_LEVELS.PLATFORM) {\n      return true;\n    }\n\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5177\u6709\u76F8\u5E94\u6743\u9650\n    return context.permissions.includes(permission);\n  }\n\n  /**\n   * \u68C0\u67E5\u6570\u636E\u5206\u7C7B\u8BBF\u95EE\u6743\u9650\n   *\n   * @param {DataClassification} classification - \u6570\u636E\u5206\u7C7B\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @param {string} permission - \u6743\u9650\u7C7B\u578B\n   * @returns {boolean} \u662F\u5426\u6709\u6743\u9650\n   * @private\n   */\n  private checkClassificationAccess(\n    classification: DataClassification,\n    context: DataIsolationContext,\n    permission: string,\n  ): boolean {\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5728\u53EF\u5171\u4EAB\u8303\u56F4\u5185\n    const isInShareableScope = classification.shareableScopes.includes(\n      context.isolationLevel,\n    );\n\n    if (!isInShareableScope) {\n      return false;\n    }\n\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5177\u6709\u76F8\u5E94\u7684\u8BBF\u95EE\u6743\u9650\n    const requiredPermissions =\n      classification.accessPermissions[\n        permission as keyof typeof classification.accessPermissions\n      ];\n    if (!requiredPermissions || requiredPermissions.length === 0) {\n      return true; // \u5982\u679C\u6CA1\u6709\u7279\u5B9A\u6743\u9650\u8981\u6C42\uFF0C\u5219\u5141\u8BB8\u8BBF\u95EE\n    }\n\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5177\u6709\u6240\u9700\u6743\u9650\n    return requiredPermissions.some(perm => context.permissions.includes(perm));\n  }\n\n  /**\n   * \u5E94\u7528\u79DF\u6237\u8FC7\u6EE4\u5668\n   *\n   * @param {any} query - \u67E5\u8BE2\u5BF9\u8C61\n   * @param {string} tenantId - \u79DF\u6237ID\n   * @returns {any} \u8FC7\u6EE4\u540E\u7684\u67E5\u8BE2\u5BF9\u8C61\n   * @private\n   */\n  private applyTenantFilter(query: any, tenantId?: string): any {\n    if (!tenantId) {\n      throw new Error('\u79DF\u6237ID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // TODO: \u6839\u636E\u5B9E\u9645\u7684\u67E5\u8BE2\u6784\u5EFA\u5668\u5B9E\u73B0\u6765\u5E94\u7528\u8FC7\u6EE4\u5668\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u4F7F\u7528\u7684ORM\u6216\u67E5\u8BE2\u6784\u5EFA\u5668\u6765\u8C03\u6574\n    if (query.where) {\n      query.where.tenantId = tenantId;\n    } else {\n      query.where = { tenantId };\n    }\n\n    return query;\n  }\n\n  /**\n   * \u5E94\u7528\u7EC4\u7EC7\u8FC7\u6EE4\u5668\n   *\n   * @param {any} query - \u67E5\u8BE2\u5BF9\u8C61\n   * @param {string} organizationId - \u7EC4\u7EC7ID\n   * @returns {any} \u8FC7\u6EE4\u540E\u7684\u67E5\u8BE2\u5BF9\u8C61\n   * @private\n   */\n  private applyOrganizationFilter(query: any, organizationId?: string): any {\n    if (!organizationId) {\n      throw new Error('\u7EC4\u7EC7ID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // TODO: \u6839\u636E\u5B9E\u9645\u7684\u67E5\u8BE2\u6784\u5EFA\u5668\u5B9E\u73B0\u6765\u5E94\u7528\u8FC7\u6EE4\u5668\n    if (query.where) {\n      query.where.organizationId = organizationId;\n    } else {\n      query.where = { organizationId };\n    }\n\n    return query;\n  }\n\n  /**\n   * \u5E94\u7528\u90E8\u95E8\u8FC7\u6EE4\u5668\n   *\n   * @param {any} query - \u67E5\u8BE2\u5BF9\u8C61\n   * @param {string} departmentId - \u90E8\u95E8ID\n   * @returns {any} \u8FC7\u6EE4\u540E\u7684\u67E5\u8BE2\u5BF9\u8C61\n   * @private\n   */\n  private applyDepartmentFilter(query: any, departmentId?: string): any {\n    if (!departmentId) {\n      throw new Error('\u90E8\u95E8ID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // TODO: \u6839\u636E\u5B9E\u9645\u7684\u67E5\u8BE2\u6784\u5EFA\u5668\u5B9E\u73B0\u6765\u5E94\u7528\u8FC7\u6EE4\u5668\n    if (query.where) {\n      query.where.departmentId = departmentId;\n    } else {\n      query.where = { departmentId };\n    }\n\n    return query;\n  }\n\n  /**\n   * \u5E94\u7528\u7528\u6237\u8FC7\u6EE4\u5668\n   *\n   * @param {any} query - \u67E5\u8BE2\u5BF9\u8C61\n   * @param {string} userId - \u7528\u6237ID\n   * @returns {any} \u8FC7\u6EE4\u540E\u7684\u67E5\u8BE2\u5BF9\u8C61\n   * @private\n   */\n  private applyUserFilter(query: any, userId: string): any {\n    if (!userId) {\n      throw new Error('\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // TODO: \u6839\u636E\u5B9E\u9645\u7684\u67E5\u8BE2\u6784\u5EFA\u5668\u5B9E\u73B0\u6765\u5E94\u7528\u8FC7\u6EE4\u5668\n    if (query.where) {\n      query.where.userId = userId;\n    } else {\n      query.where = { userId };\n    }\n\n    return query;\n  }\n\n  /**\n   * \u9A8C\u8BC1\u9ED8\u8BA4\u5408\u89C4\u6027\n   *\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @returns {boolean} \u662F\u5426\u5408\u89C4\n   * @private\n   */\n  private validateDefaultCompliance(context: DataIsolationContext): boolean {\n    // \u5E73\u53F0\u7BA1\u7406\u5458\u603B\u662F\u5408\u89C4\u7684\n    if (context.isolationLevel === ISOLATION_LEVELS.PLATFORM) {\n      return true;\n    }\n\n    // \u5176\u4ED6\u7528\u6237\u9700\u8981\u68C0\u67E5\u57FA\u672C\u5408\u89C4\u6027\n    return !!(context.userId && context.isolationLevel);\n  }\n\n  /**\n   * \u9A8C\u8BC1\u6570\u636E\u5206\u7C7B\u5408\u89C4\u6027\n   *\n   * @param {DataClassification} classification - \u6570\u636E\u5206\u7C7B\n   * @param {DataIsolationContext} context - \u7528\u6237\u4E0A\u4E0B\u6587\n   * @returns {boolean} \u662F\u5426\u5408\u89C4\n   * @private\n   */\n  private validateClassificationCompliance(\n    classification: DataClassification,\n    context: DataIsolationContext,\n  ): boolean {\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5728\u53EF\u5171\u4EAB\u8303\u56F4\u5185\n    const isInShareableScope = classification.shareableScopes.includes(\n      context.isolationLevel,\n    );\n\n    if (!isInShareableScope) {\n      return false;\n    }\n\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5728\u53D7\u4FDD\u62A4\u8303\u56F4\u5185\n    const isInProtectedScope = classification.protectedScopes.includes(\n      context.isolationLevel,\n    );\n\n    if (isInProtectedScope) {\n      // \u53D7\u4FDD\u62A4\u8303\u56F4\u5185\u7684\u7528\u6237\u9700\u8981\u7279\u6B8A\u6743\u9650\n      return context.permissions.some(\n        perm =>\n          classification.accessPermissions.read.includes(perm) ||\n          classification.accessPermissions.write.includes(perm),\n      );\n    }\n\n    return true;\n  }\n\n  // \u4EE5\u4E0B\u65B9\u6CD5\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6570\u636E\u5B58\u50A8\u5B9E\u73B0\u6765\u5B8C\u5584\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u4FE1\u606F\n   *\n   * @param {string} userId - \u7528\u6237ID\n   * @returns {Promise<any>} \u7528\u6237\u4FE1\u606F\n   * @private\n   */\n  private async getUserInfo(userId: string): Promise<any> {\n    // TODO: \u5B9E\u73B0\u7528\u6237\u4FE1\u606F\u83B7\u53D6\u903B\u8F91\n    throw new Error('getUserInfo \u65B9\u6CD5\u9700\u8981\u5B9E\u73B0');\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u6743\u9650\n   *\n   * @param {string} userId - \u7528\u6237ID\n   * @returns {Promise<string[]>} \u6743\u9650\u5217\u8868\n   * @private\n   */\n  private async getUserPermissions(userId: string): Promise<string[]> {\n    // TODO: \u5B9E\u73B0\u7528\u6237\u6743\u9650\u83B7\u53D6\u903B\u8F91\n    throw new Error('getUserPermissions \u65B9\u6CD5\u9700\u8981\u5B9E\u73B0');\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u89D2\u8272\n   *\n   * @param {string} userId - \u7528\u6237ID\n   * @returns {Promise<string[]>} \u89D2\u8272\u5217\u8868\n   * @private\n   */\n  private async getUserRoles(userId: string): Promise<string[]> {\n    // TODO: \u5B9E\u73B0\u7528\u6237\u89D2\u8272\u83B7\u53D6\u903B\u8F91\n    throw new Error('getUserRoles \u65B9\u6CD5\u9700\u8981\u5B9E\u73B0');\n  }\n\n  /**\n   * \u83B7\u53D6\u6570\u636E\u5206\u7C7B\u4FE1\u606F\n   *\n   * @param {string} dataId - \u6570\u636EID\n   * @returns {Promise<DataClassification | null>} \u6570\u636E\u5206\u7C7B\u4FE1\u606F\n   * @private\n   */\n  private async fetchDataClassification(\n    dataId: string,\n  ): Promise<DataClassification | null> {\n    // TODO: \u5B9E\u73B0\u6570\u636E\u5206\u7C7B\u4FE1\u606F\u83B7\u53D6\u903B\u8F91\n    throw new Error('fetchDataClassification \u65B9\u6CD5\u9700\u8981\u5B9E\u73B0');\n  }\n\n  /**\n   * \u4FDD\u5B58\u6570\u636E\u5206\u7C7B\u4FE1\u606F\n   *\n   * @param {string} dataId - \u6570\u636EID\n   * @param {Partial<DataClassification>} classification - \u5206\u7C7B\u4FE1\u606F\n   * @returns {Promise<void>}\n   * @private\n   */\n  private async saveDataClassification(\n    dataId: string,\n    classification: Partial<DataClassification>,\n  ): Promise<void> {\n    // TODO: \u5B9E\u73B0\u6570\u636E\u5206\u7C7B\u4FE1\u606F\u4FDD\u5B58\u903B\u8F91\n    throw new Error('saveDataClassification \u65B9\u6CD5\u9700\u8981\u5B9E\u73B0');\n  }\n\n  /**\n   * \u83B7\u53D6\u9694\u79BB\u7B56\u7565\n   *\n   * @param {IsolationLevel} level - \u9694\u79BB\u7EA7\u522B\n   * @returns {Promise<DataIsolationPolicy | null>} \u9694\u79BB\u7B56\u7565\n   * @private\n   */\n  private async fetchIsolationPolicy(\n    level: IsolationLevel,\n  ): Promise<DataIsolationPolicy | null> {\n    // TODO: \u5B9E\u73B0\u9694\u79BB\u7B56\u7565\u83B7\u53D6\u903B\u8F91\n    throw new Error('fetchIsolationPolicy \u65B9\u6CD5\u9700\u8981\u5B9E\u73B0');\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b6cf73c7a3012b5a4db5bfb9b70ce8831725c4e5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bz8r2wnn5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bz8r2wnn5();
cov_2bz8r2wnn5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2bz8r2wnn5().s[1]++;
exports.DataIsolationService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_2bz8r2wnn5().s[2]++, require("@aiofix/common"));
/**
 * 数据隔离服务
 *
 * 实现多租户数据隔离的核心逻辑，提供数据访问控制、
 * 权限验证、隔离策略管理等功能。
 *
 * 数据隔离的核心原则：
 * 1. 平台级数据：只有平台管理员可以访问
 * 2. 租户级数据：只有租户内用户可以访问
 * 3. 组织级数据：只有组织内用户可以访问
 * 4. 部门级数据：只有部门内用户可以访问
 * 5. 用户级数据：只有用户本人可以访问
 *
 * @class DataIsolationService
 * @implements {IDataIsolationService}
 * @author AI开发团队
 * @since 1.0.0
 */
class DataIsolationService {
  constructor() {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[0]++;
    cov_2bz8r2wnn5().s[3]++;
    /**
     * 数据分类缓存
     * 缓存数据分类信息，提高查询性能
     */
    this.classificationCache = new Map();
    /**
     * 隔离策略缓存
     * 缓存隔离策略信息，提高查询性能
     */
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[4]++;
    this.policyCache = new Map();
  }
  /**
   * 获取用户的数据隔离上下文
   *
   * @param {string} userId - 用户ID
   * @returns {Promise<DataIsolationContext>} 数据隔离上下文
   *
   * @throws {Error} 当用户不存在或上下文获取失败时抛出错误
   */
  async getDataIsolationContext(userId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[1]++;
    cov_2bz8r2wnn5().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[1][0]++, !userId) ||
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[1][1]++, userId.trim().length === 0)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[0][0]++;
      cov_2bz8r2wnn5().s[6]++;
      throw new Error('用户ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[0][1]++;
    }
    // TODO: 从用户服务获取用户信息
    // 这里需要根据实际的用户服务实现来获取用户信息
    const user =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[7]++, await this.getUserInfo(userId));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[8]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[2][0]++;
      cov_2bz8r2wnn5().s[9]++;
      throw new Error(`用户 ${userId} 不存在`);
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[2][1]++;
    }
    // 确定用户的隔离级别
    const isolationLevel =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[10]++, this.determineIsolationLevel(user));
    // 获取用户权限
    const permissions =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[11]++, await this.getUserPermissions(userId));
    // 获取用户角色
    const roles =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[12]++, await this.getUserRoles(userId));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[13]++;
    return {
      platformId: user.platformId,
      tenantId: user.tenantId,
      organizationId: user.organizationId,
      departmentId: user.departmentId,
      userId: user.id,
      isolationLevel,
      permissions,
      roles,
      createdAt: new Date(),
      expiresAt: new Date(Date.now() + 30 * 60 * 1000) // 30分钟过期
    };
  }
  /**
   * 检查数据访问权限
   *
   * @param {string} dataId - 数据ID
   * @param {DataIsolationContext} context - 用户上下文
   * @param {string} permission - 权限类型
   * @returns {Promise<boolean>} 是否有权限
   */
  async checkDataAccess(dataId, context, permission) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[2]++;
    cov_2bz8r2wnn5().s[14]++;
    try {
      // 获取数据分类信息
      const classification =
      /* istanbul ignore next */
      (cov_2bz8r2wnn5().s[15]++, await this.getDataClassification(dataId));
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[16]++;
      if (!classification) {
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[3][0]++;
        cov_2bz8r2wnn5().s[17]++;
        // 如果没有分类信息，使用默认策略
        return this.checkDefaultAccess(context, permission);
      } else
      /* istanbul ignore next */
      {
        cov_2bz8r2wnn5().b[3][1]++;
      }
      // 检查数据分类访问权限
      cov_2bz8r2wnn5().s[18]++;
      return this.checkClassificationAccess(classification, context, permission);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[19]++;
      console.error('数据访问权限检查失败:', error);
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[20]++;
      return false;
    }
  }
  /**
   * 应用数据隔离过滤器
   *
   * @param {any} query - 查询对象
   * @param {DataIsolationContext} context - 用户上下文
   * @returns {any} 过滤后的查询对象
   */
  applyDataIsolation(query, context) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[3]++;
    cov_2bz8r2wnn5().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[5][0]++, !query) ||
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[5][1]++, !context)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[4][0]++;
      cov_2bz8r2wnn5().s[22]++;
      return query;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[4][1]++;
    }
    // 根据用户的隔离级别应用相应的过滤器
    cov_2bz8r2wnn5().s[23]++;
    switch (context.isolationLevel) {
      case common_1.ISOLATION_LEVELS.PLATFORM:
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[6][0]++;
        cov_2bz8r2wnn5().s[24]++;
        // 平台级用户可以访问所有数据
        return query;
      case common_1.ISOLATION_LEVELS.TENANT:
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[6][1]++;
        cov_2bz8r2wnn5().s[25]++;
        // 租户级用户只能访问本租户数据
        return this.applyTenantFilter(query, context.tenantId);
      case common_1.ISOLATION_LEVELS.ORGANIZATION:
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[6][2]++;
        cov_2bz8r2wnn5().s[26]++;
        // 组织级用户只能访问本组织数据
        return this.applyOrganizationFilter(query, context.organizationId);
      case common_1.ISOLATION_LEVELS.DEPARTMENT:
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[6][3]++;
        cov_2bz8r2wnn5().s[27]++;
        // 部门级用户只能访问本部门数据
        return this.applyDepartmentFilter(query, context.departmentId);
      case common_1.ISOLATION_LEVELS.USER:
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[6][4]++;
        cov_2bz8r2wnn5().s[28]++;
        // 用户级只能访问自己的数据
        return this.applyUserFilter(query, context.userId);
      default:
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[6][5]++;
        cov_2bz8r2wnn5().s[29]++;
        throw new Error(`不支持的隔离级别: ${context.isolationLevel}`);
    }
  }
  /**
   * 获取数据分类信息
   *
   * @param {string} dataId - 数据ID
   * @returns {Promise<DataClassification | null>} 数据分类信息
   */
  async getDataClassification(dataId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[4]++;
    cov_2bz8r2wnn5().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[8][0]++, !dataId) ||
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[8][1]++, dataId.trim().length === 0)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[7][0]++;
      cov_2bz8r2wnn5().s[31]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[7][1]++;
    }
    // 先从缓存中查找
    cov_2bz8r2wnn5().s[32]++;
    if (this.classificationCache.has(dataId)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[9][0]++;
      cov_2bz8r2wnn5().s[33]++;
      return this.classificationCache.get(dataId);
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[9][1]++;
    }
    // TODO: 从数据库或配置中获取数据分类信息
    // 这里需要根据实际的数据存储实现来获取分类信息
    const classification =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[34]++, await this.fetchDataClassification(dataId));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[35]++;
    if (classification) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[10][0]++;
      cov_2bz8r2wnn5().s[36]++;
      // 缓存分类信息
      this.classificationCache.set(dataId, classification);
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[10][1]++;
    }
    cov_2bz8r2wnn5().s[37]++;
    return classification;
  }
  /**
   * 设置数据分类
   *
   * @param {string} dataId - 数据ID
   * @param {Partial<DataClassification>} classification - 分类信息
   * @returns {Promise<void>}
   */
  async setDataClassification(dataId, classification) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[5]++;
    cov_2bz8r2wnn5().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[12][0]++, !dataId) ||
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[12][1]++, dataId.trim().length === 0)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[11][0]++;
      cov_2bz8r2wnn5().s[39]++;
      throw new Error('数据ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[11][1]++;
    }
    // TODO: 保存数据分类信息到数据库或配置
    // 这里需要根据实际的数据存储实现来保存分类信息
    cov_2bz8r2wnn5().s[40]++;
    await this.saveDataClassification(dataId, classification);
    // 更新缓存
    const existing =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[41]++, this.classificationCache.get(dataId));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[42]++;
    if (existing) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[13][0]++;
      const updated =
      /* istanbul ignore next */
      (cov_2bz8r2wnn5().s[43]++, {
        ...existing,
        ...classification,
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[44]++;
      this.classificationCache.set(dataId, updated);
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[13][1]++;
    }
  }
  /**
   * 获取数据隔离策略
   *
   * @param {IsolationLevel} level - 隔离级别
   * @returns {Promise<DataIsolationPolicy | null>} 隔离策略
   */
  async getIsolationPolicy(level) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[6]++;
    cov_2bz8r2wnn5().s[45]++;
    // 先从缓存中查找
    if (this.policyCache.has(level)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[14][0]++;
      cov_2bz8r2wnn5().s[46]++;
      return this.policyCache.get(level);
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[14][1]++;
    }
    // TODO: 从数据库或配置中获取隔离策略
    // 这里需要根据实际的配置存储实现来获取策略信息
    const policy =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[47]++, await this.fetchIsolationPolicy(level));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[48]++;
    if (policy) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[15][0]++;
      cov_2bz8r2wnn5().s[49]++;
      // 缓存策略信息
      this.policyCache.set(level, policy);
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[15][1]++;
    }
    cov_2bz8r2wnn5().s[50]++;
    return policy;
  }
  /**
   * 验证数据隔离合规性
   *
   * @param {string} dataId - 数据ID
   * @param {DataIsolationContext} context - 用户上下文
   * @returns {Promise<boolean>} 是否合规
   */
  async validateDataIsolationCompliance(dataId, context) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[7]++;
    cov_2bz8r2wnn5().s[51]++;
    try {
      // 获取数据分类信息
      const classification =
      /* istanbul ignore next */
      (cov_2bz8r2wnn5().s[52]++, await this.getDataClassification(dataId));
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[53]++;
      if (!classification) {
        /* istanbul ignore next */
        cov_2bz8r2wnn5().b[16][0]++;
        cov_2bz8r2wnn5().s[54]++;
        // 如果没有分类信息，使用默认合规检查
        return this.validateDefaultCompliance(context);
      } else
      /* istanbul ignore next */
      {
        cov_2bz8r2wnn5().b[16][1]++;
      }
      // 检查数据分类合规性
      cov_2bz8r2wnn5().s[55]++;
      return this.validateClassificationCompliance(classification, context);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[56]++;
      console.error('数据隔离合规性验证失败:', error);
      /* istanbul ignore next */
      cov_2bz8r2wnn5().s[57]++;
      return false;
    }
  }
  // 私有方法
  /**
   * 确定用户的隔离级别
   *
   * @param {any} user - 用户信息
   * @returns {IsolationLevel} 隔离级别
   * @private
   */
  determineIsolationLevel(user) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[8]++;
    cov_2bz8r2wnn5().s[58]++;
    if (user.isPlatformAdmin) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[17][0]++;
      cov_2bz8r2wnn5().s[59]++;
      return common_1.ISOLATION_LEVELS.PLATFORM;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[17][1]++;
    }
    cov_2bz8r2wnn5().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[19][0]++, user.tenantId) &&
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[19][1]++, user.isTenantAdmin)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[18][0]++;
      cov_2bz8r2wnn5().s[61]++;
      return common_1.ISOLATION_LEVELS.TENANT;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[18][1]++;
    }
    cov_2bz8r2wnn5().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[21][0]++, user.organizationId) &&
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[21][1]++, user.isOrganizationAdmin)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[20][0]++;
      cov_2bz8r2wnn5().s[63]++;
      return common_1.ISOLATION_LEVELS.ORGANIZATION;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[20][1]++;
    }
    cov_2bz8r2wnn5().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[23][0]++, user.departmentId) &&
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[23][1]++, user.isDepartmentAdmin)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[22][0]++;
      cov_2bz8r2wnn5().s[65]++;
      return common_1.ISOLATION_LEVELS.DEPARTMENT;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[22][1]++;
    }
    cov_2bz8r2wnn5().s[66]++;
    return common_1.ISOLATION_LEVELS.USER;
  }
  /**
   * 检查默认访问权限
   *
   * @param {DataIsolationContext} context - 用户上下文
   * @param {string} permission - 权限类型
   * @returns {boolean} 是否有权限
   * @private
   */
  checkDefaultAccess(context, permission) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[9]++;
    cov_2bz8r2wnn5().s[67]++;
    // 平台管理员拥有所有权限
    if (context.isolationLevel === common_1.ISOLATION_LEVELS.PLATFORM) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[24][0]++;
      cov_2bz8r2wnn5().s[68]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[24][1]++;
    }
    // 检查用户是否具有相应权限
    cov_2bz8r2wnn5().s[69]++;
    return context.permissions.includes(permission);
  }
  /**
   * 检查数据分类访问权限
   *
   * @param {DataClassification} classification - 数据分类
   * @param {DataIsolationContext} context - 用户上下文
   * @param {string} permission - 权限类型
   * @returns {boolean} 是否有权限
   * @private
   */
  checkClassificationAccess(classification, context, permission) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[10]++;
    // 检查用户是否在可共享范围内
    const isInShareableScope =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[70]++, classification.shareableScopes.includes(context.isolationLevel));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[71]++;
    if (!isInShareableScope) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[25][0]++;
      cov_2bz8r2wnn5().s[72]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[25][1]++;
    }
    // 检查用户是否具有相应的访问权限
    const requiredPermissions =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[73]++, classification.accessPermissions[permission]);
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[27][0]++, !requiredPermissions) ||
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[27][1]++, requiredPermissions.length === 0)) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[26][0]++;
      cov_2bz8r2wnn5().s[75]++;
      return true; // 如果没有特定权限要求，则允许访问
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[26][1]++;
    }
    // 检查用户是否具有所需权限
    cov_2bz8r2wnn5().s[76]++;
    return requiredPermissions.some(perm => {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().f[11]++;
      cov_2bz8r2wnn5().s[77]++;
      return context.permissions.includes(perm);
    });
  }
  /**
   * 应用租户过滤器
   *
   * @param {any} query - 查询对象
   * @param {string} tenantId - 租户ID
   * @returns {any} 过滤后的查询对象
   * @private
   */
  applyTenantFilter(query, tenantId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[12]++;
    cov_2bz8r2wnn5().s[78]++;
    if (!tenantId) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[28][0]++;
      cov_2bz8r2wnn5().s[79]++;
      throw new Error('租户ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[28][1]++;
    }
    // TODO: 根据实际的查询构建器实现来应用过滤器
    // 这里需要根据使用的ORM或查询构建器来调整
    cov_2bz8r2wnn5().s[80]++;
    if (query.where) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[29][0]++;
      cov_2bz8r2wnn5().s[81]++;
      query.where.tenantId = tenantId;
    } else {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[29][1]++;
      cov_2bz8r2wnn5().s[82]++;
      query.where = {
        tenantId
      };
    }
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[83]++;
    return query;
  }
  /**
   * 应用组织过滤器
   *
   * @param {any} query - 查询对象
   * @param {string} organizationId - 组织ID
   * @returns {any} 过滤后的查询对象
   * @private
   */
  applyOrganizationFilter(query, organizationId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[13]++;
    cov_2bz8r2wnn5().s[84]++;
    if (!organizationId) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[30][0]++;
      cov_2bz8r2wnn5().s[85]++;
      throw new Error('组织ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[30][1]++;
    }
    // TODO: 根据实际的查询构建器实现来应用过滤器
    cov_2bz8r2wnn5().s[86]++;
    if (query.where) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[31][0]++;
      cov_2bz8r2wnn5().s[87]++;
      query.where.organizationId = organizationId;
    } else {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[31][1]++;
      cov_2bz8r2wnn5().s[88]++;
      query.where = {
        organizationId
      };
    }
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[89]++;
    return query;
  }
  /**
   * 应用部门过滤器
   *
   * @param {any} query - 查询对象
   * @param {string} departmentId - 部门ID
   * @returns {any} 过滤后的查询对象
   * @private
   */
  applyDepartmentFilter(query, departmentId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[14]++;
    cov_2bz8r2wnn5().s[90]++;
    if (!departmentId) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[32][0]++;
      cov_2bz8r2wnn5().s[91]++;
      throw new Error('部门ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[32][1]++;
    }
    // TODO: 根据实际的查询构建器实现来应用过滤器
    cov_2bz8r2wnn5().s[92]++;
    if (query.where) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[33][0]++;
      cov_2bz8r2wnn5().s[93]++;
      query.where.departmentId = departmentId;
    } else {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[33][1]++;
      cov_2bz8r2wnn5().s[94]++;
      query.where = {
        departmentId
      };
    }
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[95]++;
    return query;
  }
  /**
   * 应用用户过滤器
   *
   * @param {any} query - 查询对象
   * @param {string} userId - 用户ID
   * @returns {any} 过滤后的查询对象
   * @private
   */
  applyUserFilter(query, userId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[15]++;
    cov_2bz8r2wnn5().s[96]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[34][0]++;
      cov_2bz8r2wnn5().s[97]++;
      throw new Error('用户ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[34][1]++;
    }
    // TODO: 根据实际的查询构建器实现来应用过滤器
    cov_2bz8r2wnn5().s[98]++;
    if (query.where) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[35][0]++;
      cov_2bz8r2wnn5().s[99]++;
      query.where.userId = userId;
    } else {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[35][1]++;
      cov_2bz8r2wnn5().s[100]++;
      query.where = {
        userId
      };
    }
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[101]++;
    return query;
  }
  /**
   * 验证默认合规性
   *
   * @param {DataIsolationContext} context - 用户上下文
   * @returns {boolean} 是否合规
   * @private
   */
  validateDefaultCompliance(context) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[16]++;
    cov_2bz8r2wnn5().s[102]++;
    // 平台管理员总是合规的
    if (context.isolationLevel === common_1.ISOLATION_LEVELS.PLATFORM) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[36][0]++;
      cov_2bz8r2wnn5().s[103]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[36][1]++;
    }
    // 其他用户需要检查基本合规性
    cov_2bz8r2wnn5().s[104]++;
    return !!(
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[37][0]++, context.userId) &&
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().b[37][1]++, context.isolationLevel));
  }
  /**
   * 验证数据分类合规性
   *
   * @param {DataClassification} classification - 数据分类
   * @param {DataIsolationContext} context - 用户上下文
   * @returns {boolean} 是否合规
   * @private
   */
  validateClassificationCompliance(classification, context) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[17]++;
    // 检查用户是否在可共享范围内
    const isInShareableScope =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[105]++, classification.shareableScopes.includes(context.isolationLevel));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[106]++;
    if (!isInShareableScope) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[38][0]++;
      cov_2bz8r2wnn5().s[107]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[38][1]++;
    }
    // 检查用户是否在受保护范围内
    const isInProtectedScope =
    /* istanbul ignore next */
    (cov_2bz8r2wnn5().s[108]++, classification.protectedScopes.includes(context.isolationLevel));
    /* istanbul ignore next */
    cov_2bz8r2wnn5().s[109]++;
    if (isInProtectedScope) {
      /* istanbul ignore next */
      cov_2bz8r2wnn5().b[39][0]++;
      cov_2bz8r2wnn5().s[110]++;
      // 受保护范围内的用户需要特殊权限
      return context.permissions.some(perm => {
        /* istanbul ignore next */
        cov_2bz8r2wnn5().f[18]++;
        cov_2bz8r2wnn5().s[111]++;
        return /* istanbul ignore next */(cov_2bz8r2wnn5().b[40][0]++, classification.accessPermissions.read.includes(perm)) ||
        /* istanbul ignore next */
        (cov_2bz8r2wnn5().b[40][1]++, classification.accessPermissions.write.includes(perm));
      });
    } else
    /* istanbul ignore next */
    {
      cov_2bz8r2wnn5().b[39][1]++;
    }
    cov_2bz8r2wnn5().s[112]++;
    return true;
  }
  // 以下方法需要根据实际的数据存储实现来完善
  /**
   * 获取用户信息
   *
   * @param {string} userId - 用户ID
   * @returns {Promise<any>} 用户信息
   * @private
   */
  async getUserInfo(userId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[19]++;
    cov_2bz8r2wnn5().s[113]++;
    // TODO: 实现用户信息获取逻辑
    throw new Error('getUserInfo 方法需要实现');
  }
  /**
   * 获取用户权限
   *
   * @param {string} userId - 用户ID
   * @returns {Promise<string[]>} 权限列表
   * @private
   */
  async getUserPermissions(userId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[20]++;
    cov_2bz8r2wnn5().s[114]++;
    // TODO: 实现用户权限获取逻辑
    throw new Error('getUserPermissions 方法需要实现');
  }
  /**
   * 获取用户角色
   *
   * @param {string} userId - 用户ID
   * @returns {Promise<string[]>} 角色列表
   * @private
   */
  async getUserRoles(userId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[21]++;
    cov_2bz8r2wnn5().s[115]++;
    // TODO: 实现用户角色获取逻辑
    throw new Error('getUserRoles 方法需要实现');
  }
  /**
   * 获取数据分类信息
   *
   * @param {string} dataId - 数据ID
   * @returns {Promise<DataClassification | null>} 数据分类信息
   * @private
   */
  async fetchDataClassification(dataId) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[22]++;
    cov_2bz8r2wnn5().s[116]++;
    // TODO: 实现数据分类信息获取逻辑
    throw new Error('fetchDataClassification 方法需要实现');
  }
  /**
   * 保存数据分类信息
   *
   * @param {string} dataId - 数据ID
   * @param {Partial<DataClassification>} classification - 分类信息
   * @returns {Promise<void>}
   * @private
   */
  async saveDataClassification(dataId, classification) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[23]++;
    cov_2bz8r2wnn5().s[117]++;
    // TODO: 实现数据分类信息保存逻辑
    throw new Error('saveDataClassification 方法需要实现');
  }
  /**
   * 获取隔离策略
   *
   * @param {IsolationLevel} level - 隔离级别
   * @returns {Promise<DataIsolationPolicy | null>} 隔离策略
   * @private
   */
  async fetchIsolationPolicy(level) {
    /* istanbul ignore next */
    cov_2bz8r2wnn5().f[24]++;
    cov_2bz8r2wnn5().s[118]++;
    // TODO: 实现隔离策略获取逻辑
    throw new Error('fetchIsolationPolicy 方法需要实现');
  }
}
/* istanbul ignore next */
cov_2bz8r2wnn5().s[119]++;
exports.DataIsolationService = DataIsolationService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,