{"version":3,"names":["cov_63doqhu39","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/types/index.ts"],"sourcesContent":["/**\n * 基础类型定义\n *\n * 定义系统中使用的基础类型和接口，提供统一的类型定义。\n * 这些类型被整个系统共享使用，确保类型的一致性。\n *\n * @fileoverview 系统基础类型定义\n * @author AI开发团队\n * @since 1.0.0\n */\n\nimport { SORT_ORDER } from '../constants';\n\n/**\n * 基础实体接口\n *\n * 所有实体都应该实现此接口，提供统一的基础属性。\n *\n * @interface BaseEntity\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface BaseEntity {\n  /**\n   * 实体的唯一标识符\n   */\n  id: string;\n\n  /**\n   * 创建时间\n   */\n  createdAt: Date;\n\n  /**\n   * 更新时间\n   */\n  updatedAt: Date;\n\n  /**\n   * 版本号（用于乐观锁）\n   */\n  version: number;\n}\n\n/**\n * 分页选项接口\n *\n * 定义分页查询的选项参数。\n *\n * @interface PaginationOptions\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface PaginationOptions {\n  /**\n   * 页码（从1开始）\n   */\n  page: number;\n\n  /**\n   * 每页数量\n   */\n  limit: number;\n\n  /**\n   * 排序字段\n   */\n  sortBy?: string;\n\n  /**\n   * 排序方向\n   */\n  sortOrder?: (typeof SORT_ORDER)[keyof typeof SORT_ORDER];\n}\n\n/**\n * 分页结果接口\n *\n * 定义分页查询的结果结构。\n *\n * @interface PaginatedResult\n * @template T 数据类型\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface PaginatedResult<T> {\n  /**\n   * 数据列表\n   */\n  data: T[];\n\n  /**\n   * 总数量\n   */\n  total: number;\n\n  /**\n   * 当前页码\n   */\n  page: number;\n\n  /**\n   * 每页数量\n   */\n  limit: number;\n\n  /**\n   * 总页数\n   */\n  totalPages: number;\n\n  /**\n   * 是否有下一页\n   */\n  hasNext: boolean;\n\n  /**\n   * 是否有上一页\n   */\n  hasPrevious: boolean;\n}\n\n/**\n * API响应接口\n *\n * 定义统一的API响应结构。\n *\n * @interface ApiResponse\n * @template T 数据类型\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface ApiResponse<T = any> {\n  /**\n   * 操作是否成功\n   */\n  success: boolean;\n\n  /**\n   * 响应数据\n   */\n  data?: T;\n\n  /**\n   * 响应消息\n   */\n  message?: string;\n\n  /**\n   * 响应时间戳\n   */\n  timestamp: string;\n\n  /**\n   * 请求ID（用于追踪）\n   */\n  requestId?: string;\n}\n\n/**\n * 错误响应接口\n *\n * 定义统一的错误响应结构。\n *\n * @interface ErrorResponse\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface ErrorResponse {\n  /**\n   * 操作是否成功（始终为false）\n   */\n  success: false;\n\n  /**\n   * 错误信息\n   */\n  error: {\n    /**\n     * 错误代码\n     */\n    code: string;\n\n    /**\n     * 错误消息\n     */\n    message: string;\n\n    /**\n     * 错误详情\n     */\n    details?: any;\n\n    /**\n     * 错误堆栈（仅开发环境）\n     */\n    stack?: string;\n  };\n\n  /**\n   * 响应时间戳\n   */\n  timestamp: string;\n\n  /**\n   * 请求ID（用于追踪）\n   */\n  requestId?: string;\n}\n\n/**\n * 排序选项接口\n *\n * 定义排序查询的选项参数。\n *\n * @interface SortOptions\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface SortOptions {\n  /**\n   * 排序字段\n   */\n  field: string;\n\n  /**\n   * 排序方向\n   */\n  order: (typeof SORT_ORDER)[keyof typeof SORT_ORDER];\n}\n\n/**\n * 过滤选项接口\n *\n * 定义过滤查询的选项参数。\n *\n * @interface FilterOptions\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface FilterOptions {\n  /**\n   * 过滤字段\n   */\n  field: string;\n\n  /**\n   * 过滤操作符\n   */\n  operator:\n    | 'eq'\n    | 'ne'\n    | 'gt'\n    | 'gte'\n    | 'lt'\n    | 'lte'\n    | 'in'\n    | 'nin'\n    | 'like'\n    | 'between';\n\n  /**\n   * 过滤值\n   */\n  value: any;\n}\n\n/**\n * 查询选项接口\n *\n * 定义复杂查询的选项参数。\n *\n * @interface QueryOptions\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface QueryOptions {\n  /**\n   * 分页选项\n   */\n  pagination?: PaginationOptions;\n\n  /**\n   * 排序选项\n   */\n  sort?: SortOptions[];\n\n  /**\n   * 过滤选项\n   */\n  filters?: FilterOptions[];\n\n  /**\n   * 包含的关联字段\n   */\n  include?: string[];\n\n  /**\n   * 排除的字段\n   */\n  exclude?: string[];\n}\n\n/**\n * 设备信息接口\n *\n * 定义设备信息结构。\n *\n * @interface DeviceInfo\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface DeviceInfo {\n  /**\n   * 设备类型\n   */\n  type: 'desktop' | 'mobile' | 'tablet' | 'unknown';\n\n  /**\n   * 操作系统\n   */\n  os: string;\n\n  /**\n   * 浏览器\n   */\n  browser: string;\n\n  /**\n   * 用户代理字符串\n   */\n  userAgent: string;\n\n  /**\n   * IP地址\n   */\n  ipAddress: string;\n\n  /**\n   * 地理位置（可选）\n   */\n  location?: {\n    country?: string;\n    region?: string;\n    city?: string;\n  };\n}\n\n/**\n * 审计日志接口\n *\n * 定义审计日志结构。\n *\n * @interface AuditLog\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface AuditLog {\n  /**\n   * 日志ID\n   */\n  id: string;\n\n  /**\n   * 操作用户ID\n   */\n  userId: string;\n\n  /**\n   * 操作类型\n   */\n  action: string;\n\n  /**\n   * 操作资源\n   */\n  resource: string;\n\n  /**\n   * 资源ID\n   */\n  resourceId: string;\n\n  /**\n   * 操作详情\n   */\n  details?: any;\n\n  /**\n   * 操作时间\n   */\n  timestamp: Date;\n\n  /**\n   * 设备信息\n   */\n  deviceInfo?: DeviceInfo;\n\n  /**\n   * 操作结果\n   */\n  result: 'success' | 'failure';\n\n  /**\n   * 错误信息（如果操作失败）\n   */\n  error?: string;\n}\n\n/**\n * 配置项接口\n *\n * 定义配置项结构。\n *\n * @interface ConfigItem\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface ConfigItem {\n  /**\n   * 配置键\n   */\n  key: string;\n\n  /**\n   * 配置值\n   */\n  value: any;\n\n  /**\n   * 配置类型\n   */\n  type: 'string' | 'number' | 'boolean' | 'object' | 'array';\n\n  /**\n   * 配置描述\n   */\n  description?: string;\n\n  /**\n   * 是否可编辑\n   */\n  editable: boolean;\n\n  /**\n   * 默认值\n   */\n  defaultValue?: any;\n\n  /**\n   * 验证规则\n   */\n  validation?: {\n    required?: boolean;\n    min?: number;\n    max?: number;\n    pattern?: string;\n    enum?: any[];\n  };\n}\n\n/**\n * 缓存项接口\n *\n * 定义缓存项结构。\n *\n * @interface CacheItem\n * @template T 缓存数据类型\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface CacheItem<T = any> {\n  /**\n   * 缓存键\n   */\n  key: string;\n\n  /**\n   * 缓存值\n   */\n  value: T;\n\n  /**\n   * 过期时间（毫秒）\n   */\n  ttl: number;\n\n  /**\n   * 创建时间\n   */\n  createdAt: Date;\n\n  /**\n   * 最后访问时间\n   */\n  lastAccessedAt: Date;\n\n  /**\n   * 访问次数\n   */\n  accessCount: number;\n}\n"],"mappings":";;AAAA;;;;;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;IAAAC,SAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAAtB,IAAA;EAAA;EAAA,IAAAuB,QAAA,GAAAtB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAoB,QAAA,CAAAxB,IAAA,KAAAwB,QAAA,CAAAxB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAuB,QAAA,CAAAxB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAoB,cAAA,GAAAD,QAAA,CAAAxB,IAAA;EAAA","ignoreList":[]}