06edf4071638e6d677f6392b0a9ce309
"use strict";

/* istanbul ignore next */
function cov_2c4qc5ulay() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts";
  var hash = "3cf6020fece646a70fb88fedae004caf0bab6fef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "3": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "4": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "5": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "6": {
        start: {
          line: 159,
          column: 23
        },
        end: {
          line: 159,
          column: 44
        }
      },
      "7": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 96
        }
      },
      "8": {
        start: {
          line: 170,
          column: 23
        },
        end: {
          line: 170,
          column: 44
        }
      },
      "9": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 102
        }
      },
      "10": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "11": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 53
        }
      },
      "12": {
        start: {
          line: 181,
          column: 32
        },
        end: {
          line: 181,
          column: 53
        }
      },
      "13": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "14": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 50
        }
      },
      "15": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "16": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "17": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 50
        }
      },
      "18": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "19": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 44
        }
      },
      "20": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "21": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 202,
          column: 15
        }
      },
      "22": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 25
        }
      },
      "23": {
        start: {
          line: 207,
          column: 0
        },
        end: {
          line: 207,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 21
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 96
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 37
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 158
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 44
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 169
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 21
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 178
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 18
          },
          end: {
            line: 51,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 18
          },
          end: {
            line: 51,
            column: 40
          }
        }, {
          start: {
            line: 51,
            column: 44
          },
          end: {
            line: 51,
            column: 55
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 49
          }
        }, {
          start: {
            line: 52,
            column: 53
          },
          end: {
            line: 52,
            column: 59
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 48
          }
        }, {
          start: {
            line: 53,
            column: 52
          },
          end: {
            line: 53,
            column: 54
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 45
          }
        }, {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 54,
            column: 52
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 57,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 57,
            column: 56
          }
        }, {
          start: {
            line: 57,
            column: 60
          },
          end: {
            line: 57,
            column: 63
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 56
          }
        }, {
          start: {
            line: 58,
            column: 60
          },
          end: {
            line: 58,
            column: 64
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 79
          }
        }, {
          start: {
            line: 59,
            column: 83
          },
          end: {
            line: 59,
            column: 90
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 30
          },
          end: {
            line: 63,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 30
          },
          end: {
            line: 63,
            column: 51
          }
        }, {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 63,
            column: 61
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 64,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 64,
            column: 62
          }
        }, {
          start: {
            line: 64,
            column: 66
          },
          end: {
            line: 64,
            column: 72
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 68
          }
        }, {
          start: {
            line: 65,
            column: 72
          },
          end: {
            line: 65,
            column: 77
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 22
          },
          end: {
            line: 100,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 22
          },
          end: {
            line: 100,
            column: 49
          }
        }, {
          start: {
            line: 100,
            column: 53
          },
          end: {
            line: 100,
            column: 64
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 58
          }
        }, {
          start: {
            line: 101,
            column: 62
          },
          end: {
            line: 101,
            column: 68
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 57
          }
        }, {
          start: {
            line: 102,
            column: 61
          },
          end: {
            line: 102,
            column: 63
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 54
          }
        }, {
          start: {
            line: 103,
            column: 58
          },
          end: {
            line: 103,
            column: 61
          }
        }],
        line: 103
      },
      "14": {
        loc: {
          start: {
            line: 107,
            column: 38
          },
          end: {
            line: 107,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 38
          },
          end: {
            line: 107,
            column: 67
          }
        }, {
          start: {
            line: 107,
            column: 71
          },
          end: {
            line: 107,
            column: 74
          }
        }],
        line: 107
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 61
          }
        }, {
          start: {
            line: 108,
            column: 65
          },
          end: {
            line: 108,
            column: 68
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 67
          }
        }, {
          start: {
            line: 111,
            column: 71
          },
          end: {
            line: 111,
            column: 77
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "18": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 33
          }
        }, {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 184,
            column: 52
          }
        }, {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 37
          }
        }],
        line: 183
      },
      "19": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 192,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 39
          }
        }, {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 58
          }
        }, {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 43
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 201,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 48
          },
          end: {
            line: 201,
            column: 61
          }
        }, {
          start: {
            line: 201,
            column: 64
          },
          end: {
            line: 201,
            column: 77
          }
        }],
        line: 201
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts"],
      sourcesContent: ["import { ConfigService } from '@aiofix/config';\nimport { PinoLoggerService } from '@aiofix/logging';\n\n/**\n * @class RedisConfig\n * @description\n * Redis\u914D\u7F6E\u7C7B\uFF0C\u8D1F\u8D23\u7BA1\u7406Redis\u7F13\u5B58\u548C\u6D88\u606F\u961F\u5217\u7684\u914D\u7F6E\u4FE1\u606F\u3002\n *\n * \u914D\u7F6E\u7BA1\u7406\u804C\u8D23\uFF1A\n * 1. \u63D0\u4F9BRedis\u7F13\u5B58\u914D\u7F6E\n * 2. \u63D0\u4F9B\u6D88\u606F\u961F\u5217\u914D\u7F6E\n * 3. \u7BA1\u7406\u8FDE\u63A5\u6C60\u548C\u6027\u80FD\u914D\u7F6E\n * 4. \u652F\u6301\u591A\u79DF\u6237\u7F13\u5B58\u9694\u79BB\n *\n * \u591A\u79DF\u6237\u652F\u6301\uFF1A\n * 1. \u57FA\u4E8E\u79DF\u6237ID\u7684\u7F13\u5B58\u952E\u547D\u540D\u7A7A\u95F4\n * 2. \u79DF\u6237\u7EA7\u7F13\u5B58\u9694\u79BB\n * 3. \u79DF\u6237\u7EA7\u961F\u5217\u9694\u79BB\n * 4. \u7F13\u5B58\u7EDF\u8BA1\u548C\u76D1\u63A7\n *\n * @param {ConfigService} configService \u914D\u7F6E\u670D\u52A1\n * @param {PinoLoggerService} logger \u65E5\u5FD7\u670D\u52A1\n *\n * @example\n * ```typescript\n * const redisConfig = new RedisConfig(configService, logger);\n * const cacheConfig = redisConfig.getCacheConfig();\n * const queueConfig = redisConfig.getQueueConfig();\n * ```\n * @since 1.0.0\n */\nexport class RedisConfig {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly logger: PinoLoggerService,\n  ) {}\n\n  /**\n   * @method getCacheConfig\n   * @description \u83B7\u53D6Redis\u7F13\u5B58\u914D\u7F6E\n   * @returns {object} Redis\u7F13\u5B58\u914D\u7F6E\u5BF9\u8C61\n   *\n   * \u914D\u7F6E\u5305\u542B\uFF1A\n   * 1. \u8FDE\u63A5\u914D\u7F6E\n   * 2. \u7F13\u5B58\u7B56\u7565\u914D\u7F6E\n   * 3. \u6027\u80FD\u4F18\u5316\u914D\u7F6E\n   * 4. \u591A\u79DF\u6237\u652F\u6301\u914D\u7F6E\n   */\n  getCacheConfig() {\n    return {\n      // \u8FDE\u63A5\u914D\u7F6E\n      host: process.env.REDIS_HOST || 'localhost',\n      port: parseInt(process.env.REDIS_PORT || '6379'),\n      password: process.env.REDIS_PASSWORD || '',\n      db: parseInt(process.env.REDIS_DB || '0'),\n\n      // \u8FDE\u63A5\u6C60\u914D\u7F6E\n      pool: {\n        min: parseInt(process.env.REDIS_POOL_MIN || '2'),\n        max: parseInt(process.env.REDIS_POOL_MAX || '10'),\n        idleTimeoutMillis: parseInt(\n          process.env.REDIS_POOL_IDLE_TIMEOUT || '30000',\n        ),\n      },\n\n      // \u7F13\u5B58\u914D\u7F6E\n      cache: {\n        ttl: parseInt(process.env.CACHE_TTL || '3600'), // \u9ED8\u8BA41\u5C0F\u65F6\n        maxItems: parseInt(process.env.CACHE_MAX_ITEMS || '1000'),\n        checkPeriod: parseInt(process.env.CACHE_CHECK_PERIOD || '600'), // 10\u5206\u949F\n      },\n\n      // \u591A\u79DF\u6237\u914D\u7F6E\n      tenant: {\n        keyPrefix: 'tenant:',\n        namespaceSeparator: ':',\n        defaultTenant: 'platform',\n      },\n\n      // \u6027\u80FD\u914D\u7F6E\n      retryDelayOnFailover: 100,\n      maxRetriesPerRequest: 3,\n      lazyConnect: true,\n      keepAlive: 30000,\n\n      // \u96C6\u7FA4\u914D\u7F6E\uFF08\u5982\u679C\u9700\u8981\uFF09\n      cluster: {\n        enabled: false,\n        nodes: [],\n      },\n    };\n  }\n\n  /**\n   * @method getQueueConfig\n   * @description \u83B7\u53D6\u6D88\u606F\u961F\u5217\u914D\u7F6E\n   * @returns {object} \u6D88\u606F\u961F\u5217\u914D\u7F6E\u5BF9\u8C61\n   *\n   * \u914D\u7F6E\u5305\u542B\uFF1A\n   * 1. Bull\u961F\u5217\u914D\u7F6E\n   * 2. \u91CD\u8BD5\u548C\u9519\u8BEF\u5904\u7406\u914D\u7F6E\n   * 3. \u5E76\u53D1\u548C\u6027\u80FD\u914D\u7F6E\n   * 4. \u76D1\u63A7\u548C\u7EDF\u8BA1\u914D\u7F6E\n   */\n  getQueueConfig() {\n    return {\n      // Redis\u8FDE\u63A5\u914D\u7F6E\n      redis: {\n        host: process.env.BULL_REDIS_HOST || 'localhost',\n        port: parseInt(process.env.BULL_REDIS_PORT || '6379'),\n        password: process.env.BULL_REDIS_PASSWORD || '',\n        db: parseInt(process.env.BULL_REDIS_DB || '1'),\n      },\n\n      // \u961F\u5217\u914D\u7F6E\n      queue: {\n        concurrency: parseInt(process.env.QUEUE_CONCURRENCY || '5'),\n        attempts: parseInt(process.env.QUEUE_ATTEMPTS || '3'),\n        backoff: {\n          type: 'exponential',\n          delay: parseInt(process.env.QUEUE_BACKOFF_DELAY || '2000'),\n        },\n        removeOnComplete: 100,\n        removeOnFail: 50,\n      },\n\n      // \u961F\u5217\u7C7B\u578B\u914D\u7F6E\n      queues: {\n        'domain-events': {\n          concurrency: 10,\n          attempts: 5,\n          backoff: { type: 'exponential', delay: 2000 },\n        },\n        notifications: {\n          concurrency: 20,\n          attempts: 3,\n          backoff: { type: 'fixed', delay: 1000 },\n        },\n        emails: {\n          concurrency: 5,\n          attempts: 3,\n          backoff: { type: 'exponential', delay: 5000 },\n        },\n        'push-notifications': {\n          concurrency: 15,\n          attempts: 3,\n          backoff: { type: 'fixed', delay: 2000 },\n        },\n        sms: {\n          concurrency: 10,\n          attempts: 3,\n          backoff: { type: 'exponential', delay: 3000 },\n        },\n      },\n\n      // \u591A\u79DF\u6237\u961F\u5217\u914D\u7F6E\n      tenant: {\n        keyPrefix: 'queue:tenant:',\n        namespaceSeparator: ':',\n      },\n    };\n  }\n\n  /**\n   * @method getTenantCacheKey\n   * @description \u751F\u6210\u79DF\u6237\u7EA7\u7F13\u5B58\u952E\n   * @param {string} tenantId \u79DF\u6237ID\n   * @param {string} key \u539F\u59CB\u952E\n   * @returns {string} \u79DF\u6237\u7EA7\u7F13\u5B58\u952E\n   */\n  getTenantCacheKey(tenantId: string, key: string): string {\n    const config = this.getCacheConfig();\n    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${key}`;\n  }\n\n  /**\n   * @method getTenantQueueName\n   * @description \u751F\u6210\u79DF\u6237\u7EA7\u961F\u5217\u540D\u79F0\n   * @param {string} tenantId \u79DF\u6237ID\n   * @param {string} queueName \u539F\u59CB\u961F\u5217\u540D\u79F0\n   * @returns {string} \u79DF\u6237\u7EA7\u961F\u5217\u540D\u79F0\n   */\n  getTenantQueueName(tenantId: string, queueName: string): string {\n    const config = this.getQueueConfig();\n    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${queueName}`;\n  }\n\n  /**\n   * @method validateConfig\n   * @description \u9A8C\u8BC1Redis\u914D\u7F6E\n   * @returns {boolean} \u914D\u7F6E\u662F\u5426\u6709\u6548\n   */\n  validateConfig(): boolean {\n    try {\n      const cacheConfig = this.getCacheConfig();\n      const queueConfig = this.getQueueConfig();\n\n      // \u9A8C\u8BC1\u7F13\u5B58\u914D\u7F6E\n      if (\n        !cacheConfig.host ||\n        typeof cacheConfig.port !== 'number' ||\n        cacheConfig.port <= 0\n      ) {\n        this.logger.error('Redis\u7F13\u5B58\u914D\u7F6E\u4E0D\u5B8C\u6574');\n        return false;\n      }\n\n      // \u9A8C\u8BC1\u961F\u5217\u914D\u7F6E\n      if (\n        !queueConfig.redis.host ||\n        typeof queueConfig.redis.port !== 'number' ||\n        queueConfig.redis.port <= 0\n      ) {\n        this.logger.error('Redis\u961F\u5217\u914D\u7F6E\u4E0D\u5B8C\u6574');\n        return false;\n      }\n\n      this.logger.info('Redis\u914D\u7F6E\u9A8C\u8BC1\u901A\u8FC7');\n      return true;\n    } catch (error) {\n      this.logger.error('Redis\u914D\u7F6E\u9A8C\u8BC1\u5931\u8D25', undefined, {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return false;\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3cf6020fece646a70fb88fedae004caf0bab6fef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c4qc5ulay = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c4qc5ulay();
cov_2c4qc5ulay().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2c4qc5ulay().s[1]++;
exports.RedisConfig = void 0;
/**
 * @class RedisConfig
 * @description
 * Redis配置类，负责管理Redis缓存和消息队列的配置信息。
 *
 * 配置管理职责：
 * 1. 提供Redis缓存配置
 * 2. 提供消息队列配置
 * 3. 管理连接池和性能配置
 * 4. 支持多租户缓存隔离
 *
 * 多租户支持：
 * 1. 基于租户ID的缓存键命名空间
 * 2. 租户级缓存隔离
 * 3. 租户级队列隔离
 * 4. 缓存统计和监控
 *
 * @param {ConfigService} configService 配置服务
 * @param {PinoLoggerService} logger 日志服务
 *
 * @example
 * ```typescript
 * const redisConfig = new RedisConfig(configService, logger);
 * const cacheConfig = redisConfig.getCacheConfig();
 * const queueConfig = redisConfig.getQueueConfig();
 * ```
 * @since 1.0.0
 */
class RedisConfig {
  constructor(configService, logger) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[0]++;
    cov_2c4qc5ulay().s[2]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_2c4qc5ulay().s[3]++;
    this.logger = logger;
  }
  /**
   * @method getCacheConfig
   * @description 获取Redis缓存配置
   * @returns {object} Redis缓存配置对象
   *
   * 配置包含：
   * 1. 连接配置
   * 2. 缓存策略配置
   * 3. 性能优化配置
   * 4. 多租户支持配置
   */
  getCacheConfig() {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[1]++;
    cov_2c4qc5ulay().s[4]++;
    return {
      // 连接配置
      host:
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[0][0]++, process.env.REDIS_HOST) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[0][1]++, 'localhost'),
      port: parseInt(
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[1][0]++, process.env.REDIS_PORT) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[1][1]++, '6379')),
      password:
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[2][0]++, process.env.REDIS_PASSWORD) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[2][1]++, ''),
      db: parseInt(
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[3][0]++, process.env.REDIS_DB) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[3][1]++, '0')),
      // 连接池配置
      pool: {
        min: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[4][0]++, process.env.REDIS_POOL_MIN) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[4][1]++, '2')),
        max: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[5][0]++, process.env.REDIS_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[5][1]++, '10')),
        idleTimeoutMillis: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[6][0]++, process.env.REDIS_POOL_IDLE_TIMEOUT) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[6][1]++, '30000'))
      },
      // 缓存配置
      cache: {
        ttl: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[7][0]++, process.env.CACHE_TTL) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[7][1]++, '3600')),
        // 默认1小时
        maxItems: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[8][0]++, process.env.CACHE_MAX_ITEMS) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[8][1]++, '1000')),
        checkPeriod: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[9][0]++, process.env.CACHE_CHECK_PERIOD) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[9][1]++, '600')) // 10分钟
      },
      // 多租户配置
      tenant: {
        keyPrefix: 'tenant:',
        namespaceSeparator: ':',
        defaultTenant: 'platform'
      },
      // 性能配置
      retryDelayOnFailover: 100,
      maxRetriesPerRequest: 3,
      lazyConnect: true,
      keepAlive: 30000,
      // 集群配置（如果需要）
      cluster: {
        enabled: false,
        nodes: []
      }
    };
  }
  /**
   * @method getQueueConfig
   * @description 获取消息队列配置
   * @returns {object} 消息队列配置对象
   *
   * 配置包含：
   * 1. Bull队列配置
   * 2. 重试和错误处理配置
   * 3. 并发和性能配置
   * 4. 监控和统计配置
   */
  getQueueConfig() {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[2]++;
    cov_2c4qc5ulay().s[5]++;
    return {
      // Redis连接配置
      redis: {
        host:
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[10][0]++, process.env.BULL_REDIS_HOST) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[10][1]++, 'localhost'),
        port: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[11][0]++, process.env.BULL_REDIS_PORT) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[11][1]++, '6379')),
        password:
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[12][0]++, process.env.BULL_REDIS_PASSWORD) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[12][1]++, ''),
        db: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[13][0]++, process.env.BULL_REDIS_DB) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[13][1]++, '1'))
      },
      // 队列配置
      queue: {
        concurrency: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[14][0]++, process.env.QUEUE_CONCURRENCY) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[14][1]++, '5')),
        attempts: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[15][0]++, process.env.QUEUE_ATTEMPTS) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[15][1]++, '3')),
        backoff: {
          type: 'exponential',
          delay: parseInt(
          /* istanbul ignore next */
          (cov_2c4qc5ulay().b[16][0]++, process.env.QUEUE_BACKOFF_DELAY) ||
          /* istanbul ignore next */
          (cov_2c4qc5ulay().b[16][1]++, '2000'))
        },
        removeOnComplete: 100,
        removeOnFail: 50
      },
      // 队列类型配置
      queues: {
        'domain-events': {
          concurrency: 10,
          attempts: 5,
          backoff: {
            type: 'exponential',
            delay: 2000
          }
        },
        notifications: {
          concurrency: 20,
          attempts: 3,
          backoff: {
            type: 'fixed',
            delay: 1000
          }
        },
        emails: {
          concurrency: 5,
          attempts: 3,
          backoff: {
            type: 'exponential',
            delay: 5000
          }
        },
        'push-notifications': {
          concurrency: 15,
          attempts: 3,
          backoff: {
            type: 'fixed',
            delay: 2000
          }
        },
        sms: {
          concurrency: 10,
          attempts: 3,
          backoff: {
            type: 'exponential',
            delay: 3000
          }
        }
      },
      // 多租户队列配置
      tenant: {
        keyPrefix: 'queue:tenant:',
        namespaceSeparator: ':'
      }
    };
  }
  /**
   * @method getTenantCacheKey
   * @description 生成租户级缓存键
   * @param {string} tenantId 租户ID
   * @param {string} key 原始键
   * @returns {string} 租户级缓存键
   */
  getTenantCacheKey(tenantId, key) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[3]++;
    const config =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[6]++, this.getCacheConfig());
    /* istanbul ignore next */
    cov_2c4qc5ulay().s[7]++;
    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${key}`;
  }
  /**
   * @method getTenantQueueName
   * @description 生成租户级队列名称
   * @param {string} tenantId 租户ID
   * @param {string} queueName 原始队列名称
   * @returns {string} 租户级队列名称
   */
  getTenantQueueName(tenantId, queueName) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[4]++;
    const config =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[8]++, this.getQueueConfig());
    /* istanbul ignore next */
    cov_2c4qc5ulay().s[9]++;
    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${queueName}`;
  }
  /**
   * @method validateConfig
   * @description 验证Redis配置
   * @returns {boolean} 配置是否有效
   */
  validateConfig() {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[5]++;
    cov_2c4qc5ulay().s[10]++;
    try {
      const cacheConfig =
      /* istanbul ignore next */
      (cov_2c4qc5ulay().s[11]++, this.getCacheConfig());
      const queueConfig =
      /* istanbul ignore next */
      (cov_2c4qc5ulay().s[12]++, this.getQueueConfig());
      // 验证缓存配置
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[13]++;
      if (
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[18][0]++, !cacheConfig.host) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[18][1]++, typeof cacheConfig.port !== 'number') ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[18][2]++, cacheConfig.port <= 0)) {
        /* istanbul ignore next */
        cov_2c4qc5ulay().b[17][0]++;
        cov_2c4qc5ulay().s[14]++;
        this.logger.error('Redis缓存配置不完整');
        /* istanbul ignore next */
        cov_2c4qc5ulay().s[15]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2c4qc5ulay().b[17][1]++;
      }
      // 验证队列配置
      cov_2c4qc5ulay().s[16]++;
      if (
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[20][0]++, !queueConfig.redis.host) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[20][1]++, typeof queueConfig.redis.port !== 'number') ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[20][2]++, queueConfig.redis.port <= 0)) {
        /* istanbul ignore next */
        cov_2c4qc5ulay().b[19][0]++;
        cov_2c4qc5ulay().s[17]++;
        this.logger.error('Redis队列配置不完整');
        /* istanbul ignore next */
        cov_2c4qc5ulay().s[18]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2c4qc5ulay().b[19][1]++;
      }
      cov_2c4qc5ulay().s[19]++;
      this.logger.info('Redis配置验证通过');
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[20]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[21]++;
      this.logger.error('Redis配置验证失败', undefined, {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[21][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[21][1]++, String(error))
      });
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[22]++;
      return false;
    }
  }
}
/* istanbul ignore next */
cov_2c4qc5ulay().s[23]++;
exports.RedisConfig = RedisConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,