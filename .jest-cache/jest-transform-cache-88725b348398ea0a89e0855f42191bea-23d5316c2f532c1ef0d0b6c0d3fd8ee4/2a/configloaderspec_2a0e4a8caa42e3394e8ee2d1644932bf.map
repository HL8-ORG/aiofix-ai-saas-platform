{"file":"/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config-loader.spec.ts","mappings":"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","names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config-loader.spec.ts"],"sourcesContent":["/**\n * @fileoverview 配置加载器测试\n * @description 测试配置加载器的核心功能，包括配置合并、获取、重置等操作\n * @author AI开发团队\n * @since 1.0.0\n */\n\n/// <reference types=\"jest\" />\n\nimport { defineConfig, getConfig, resetConfig } from './config-loader';\nimport { IamConfig } from './config.service';\n\ndescribe('ConfigLoader', () => {\n  beforeEach(() => {\n    // 每个测试前重置配置\n    resetConfig();\n  });\n\n  describe('getConfig', () => {\n    it('应该返回默认配置', () => {\n      const config = getConfig();\n\n      expect(config).toBeDefined();\n      expect(config.app).toBeDefined();\n      expect(config.database).toBeDefined();\n      expect(config.redis).toBeDefined();\n      expect(config.jwt).toBeDefined();\n      expect(config.email).toBeDefined();\n      expect(config.logging).toBeDefined();\n    });\n\n    it('应该返回只读配置对象', () => {\n      const config = getConfig();\n\n      expect(() => {\n        (config as any).app = {};\n      }).toThrow();\n    });\n\n    it('应该返回配置的深拷贝', () => {\n      const config1 = getConfig();\n      const config2 = getConfig();\n\n      expect(config1).not.toBe(config2);\n      expect(config1.app).not.toBe(config2.app);\n    });\n  });\n\n  describe('defineConfig', () => {\n    it('应该成功合并有效配置', async () => {\n      const customConfig: Partial<IamConfig> = {\n        app: {\n          app_name: 'Test App',\n          custom_setting: 'test_value',\n        },\n      };\n\n      await defineConfig(customConfig);\n\n      const config = getConfig();\n      expect(config.app?.app_name).toBe('Test App');\n      expect(config.app?.custom_setting).toBe('test_value');\n    });\n\n    it('应该深度合并嵌套配置', async () => {\n      const customConfig: Partial<IamConfig> = {\n        database: {\n          postgresql: {\n            host: 'custom-host',\n            port: 5433,\n          },\n        },\n      };\n\n      await defineConfig(customConfig);\n\n      const config = getConfig();\n      expect((config.database?.postgresql as any)?.host).toBe('custom-host');\n      expect((config.database?.postgresql as any)?.port).toBe(5433);\n      // 其他默认配置应该保持不变\n      expect((config.database?.postgresql as any)?.username).toBeDefined();\n    });\n\n    it('应该覆盖数组配置', async () => {\n      const customConfig: Partial<IamConfig> = {\n        redis: {\n          cluster: {\n            nodes: ['node1:6379', 'node2:6379'],\n          },\n        },\n      };\n\n      await defineConfig(customConfig);\n\n      const config = getConfig();\n      expect((config.redis?.cluster as any)?.nodes).toEqual([\n        'node1:6379',\n        'node2:6379',\n      ]);\n    });\n\n    it('应该抛出错误当配置无效时', async () => {\n      await expect(defineConfig(null as any)).rejects.toThrow(\n        'Invalid configuration provided. Expected a non-empty object.',\n      );\n\n      await expect(defineConfig(undefined as any)).rejects.toThrow(\n        'Invalid configuration provided. Expected a non-empty object.',\n      );\n\n      await expect(defineConfig('invalid' as any)).rejects.toThrow(\n        'Invalid configuration provided. Expected a non-empty object.',\n      );\n    });\n\n    it('应该支持多次配置合并', async () => {\n      const config1: Partial<IamConfig> = {\n        app: {\n          app_name: 'First App',\n        },\n      };\n\n      const config2: Partial<IamConfig> = {\n        app: {\n          app_version: '2.0.0',\n        },\n      };\n\n      await defineConfig(config1);\n      await defineConfig(config2);\n\n      const config = getConfig();\n      expect(config.app?.app_name).toBe('First App');\n      expect(config.app?.app_version).toBe('2.0.0');\n    });\n  });\n\n  describe('resetConfig', () => {\n    it('应该重置配置到默认值', async () => {\n      // 先设置自定义配置\n      const customConfig: Partial<IamConfig> = {\n        app: {\n          app_name: 'Custom App',\n        },\n      };\n\n      await defineConfig(customConfig);\n      expect(getConfig().app?.app_name).toBe('Custom App');\n\n      // 重置配置\n      resetConfig();\n\n      // 验证配置已重置\n      const config = getConfig();\n      expect(config.app?.app_name).toBe('Aiofix IAM');\n    });\n\n    it('应该清空所有自定义配置', async () => {\n      // 设置多个自定义配置\n      await defineConfig({\n        app: { custom1: 'value1' },\n        database: { custom2: 'value2' },\n      });\n\n      resetConfig();\n\n      const config = getConfig();\n      expect(config.app?.custom1).toBeUndefined();\n      expect(config.database?.custom2).toBeUndefined();\n    });\n  });\n\n  describe('配置合并逻辑', () => {\n    it('应该正确处理复杂嵌套对象', async () => {\n      const customConfig: Partial<IamConfig> = {\n        jwt: {\n          secret: {\n            accessToken: 'custom-access-secret',\n          },\n          accessToken: {\n            expiresIn: 7200,\n          },\n        },\n      };\n\n      await defineConfig(customConfig);\n\n      const config = getConfig();\n      expect((config.jwt?.secret as any)?.accessToken).toBe(\n        'custom-access-secret',\n      );\n      expect((config.jwt?.accessToken as any)?.expiresIn).toBe(7200);\n      // 其他JWT配置应该保持默认值\n      expect((config.jwt?.secret as any)?.refreshToken).toBeDefined();\n      expect((config.jwt?.refreshToken as any)?.expiresIn).toBeDefined();\n    });\n\n    it('应该正确处理空值和undefined', async () => {\n      const customConfig: Partial<IamConfig> = {\n        app: {\n          nullValue: null,\n          undefinedValue: undefined,\n          emptyString: '',\n          zeroValue: 0,\n        },\n      };\n\n      await defineConfig(customConfig);\n\n      const config = getConfig();\n      expect(config.app?.nullValue).toBeNull();\n      expect(config.app?.undefinedValue).toBeUndefined();\n      expect(config.app?.emptyString).toBe('');\n      expect(config.app?.zeroValue).toBe(0);\n    });\n  });\n});\n"],"version":3}