45d8f6f1beae2f17cad9074901dc0e17
"use strict";

/**
 * @file postgresql.adapter.ts
 * @description PostgreSQL数据库适配器实现
 *
 * 该文件实现了PostgreSQL数据库适配器，包括：
 * - 连接管理
 * - 查询执行
 * - 事务管理
 * - 健康检查
 * - 统计监控
 * - 事件通知
 *
 * 遵循DDD和Clean Architecture原则，提供统一的数据库操作接口。
 */
/* istanbul ignore next */
function cov_2hu555lw70() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts";
  var hash = "c17beb67e9ab38bd800ed930e1c8a966ab21fc9b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "2": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 125
        }
      },
      "3": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 19,
          column: 150
        }
      },
      "4": {
        start: {
          line: 18,
          column: 79
        },
        end: {
          line: 18,
          column: 131
        }
      },
      "5": {
        start: {
          line: 19,
          column: 9
        },
        end: {
          line: 19,
          column: 150
        }
      },
      "6": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "7": {
        start: {
          line: 19,
          column: 58
        },
        end: {
          line: 19,
          column: 150
        }
      },
      "8": {
        start: {
          line: 19,
          column: 81
        },
        end: {
          line: 19,
          column: 150
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "10": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 109
        }
      },
      "12": {
        start: {
          line: 23,
          column: 79
        },
        end: {
          line: 23,
          column: 109
        }
      },
      "13": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 73
        }
      },
      "15": {
        start: {
          line: 26,
          column: 36
        },
        end: {
          line: 26,
          column: 71
        }
      },
      "16": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "17": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "18": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "19": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "20": {
        start: {
          line: 33,
          column: 15
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "21": {
        start: {
          line: 34,
          column: 13
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "22": {
        start: {
          line: 35,
          column: 15
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "23": {
        start: {
          line: 36,
          column: 18
        },
        end: {
          line: 36,
          column: 44
        }
      },
      "24": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 486,
          column: 1
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 33
        }
      },
      "26": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 23
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 37
        }
      },
      "29": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 29
        }
      },
      "30": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 29
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 45
        }
      },
      "34": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 44
        }
      },
      "35": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 30
        }
      },
      "36": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 30
        }
      },
      "37": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "38": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 171
        }
      },
      "39": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "40": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "41": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 194
        }
      },
      "42": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 87,
          column: 52
        }
      },
      "43": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "44": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "45": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 40
        }
      },
      "46": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 158
        }
      },
      "47": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "48": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 41
        }
      },
      "49": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 183
        }
      },
      "50": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "51": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 24
        }
      },
      "52": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "53": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 151
        }
      },
      "54": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "55": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 46
        }
      },
      "56": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 41
        }
      },
      "57": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 163
        }
      },
      "58": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "59": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 188
        }
      },
      "60": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "61": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 24
        }
      },
      "62": {
        start: {
          line: 145,
          column: 26
        },
        end: {
          line: 145,
          column: 36
        }
      },
      "63": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 34
        }
      },
      "64": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "65": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "66": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 153,
          column: 19
        }
      },
      "67": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "68": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 160,
          column: 61
        }
      },
      "69": {
        start: {
          line: 161,
          column: 33
        },
        end: {
          line: 161,
          column: 55
        }
      },
      "70": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 49
        }
      },
      "71": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "72": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 168,
          column: 19
        }
      },
      "73": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "74": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 26
        }
      },
      "75": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 55
        }
      },
      "76": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 50
        }
      },
      "77": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "78": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "79": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "80": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 71
        }
      },
      "81": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 36
        }
      },
      "82": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "83": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "84": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 233,
          column: 14
        }
      },
      "85": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "86": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 109
        }
      },
      "87": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 231,
          column: 17
        }
      },
      "88": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 230,
          column: 63
        }
      },
      "89": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 43
        }
      },
      "90": {
        start: {
          line: 234,
          column: 33
        },
        end: {
          line: 234,
          column: 55
        }
      },
      "91": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 239,
          column: 15
        }
      },
      "92": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "93": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 26
        }
      },
      "94": {
        start: {
          line: 249,
          column: 33
        },
        end: {
          line: 249,
          column: 55
        }
      },
      "95": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 255,
          column: 22
        }
      },
      "96": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 262,
          column: 15
        }
      },
      "97": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 24
        }
      },
      "98": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 36
        }
      },
      "99": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "100": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 86
        }
      },
      "101": {
        start: {
          line: 276,
          column: 33
        },
        end: {
          line: 276,
          column: 55
        }
      },
      "102": {
        start: {
          line: 277,
          column: 31
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "103": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 289,
          column: 14
        }
      },
      "104": {
        start: {
          line: 292,
          column: 33
        },
        end: {
          line: 292,
          column: 55
        }
      },
      "105": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 299,
          column: 14
        }
      },
      "106": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 32
        }
      },
      "107": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 33
        }
      },
      "108": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 32
        }
      },
      "109": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 44
        }
      },
      "110": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "111": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 32
        }
      },
      "112": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 339,
          column: 10
        }
      },
      "113": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "114": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 67
        }
      },
      "115": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 24
        }
      },
      "116": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 25
        }
      },
      "117": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 33
        }
      },
      "118": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 25
        }
      },
      "119": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      },
      "120": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 393,
          column: 11
        }
      },
      "121": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 392,
          column: 15
        }
      },
      "122": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      },
      "123": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 125
        }
      },
      "124": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 420,
          column: 11
        }
      },
      "125": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 439,
          column: 10
        }
      },
      "126": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "127": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 43
        }
      },
      "128": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 39
        }
      },
      "129": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "130": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 54
        }
      },
      "131": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 54
        }
      },
      "132": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 58
        }
      },
      "133": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 92
        }
      },
      "134": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 92
        }
      },
      "135": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 467,
          column: 44
        }
      },
      "136": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 82
        }
      },
      "137": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 57
        }
      },
      "138": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 484,
          column: 11
        }
      },
      "139": {
        start: {
          line: 487,
          column: 0
        },
        end: {
          line: 487,
          column: 46
        }
      },
      "140": {
        start: {
          line: 488,
          column: 0
        },
        end: {
          line: 493,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 46
          },
          end: {
            line: 16,
            column: 47
          }
        },
        loc: {
          start: {
            line: 16,
            column: 87
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 46
          },
          end: {
            line: 22,
            column: 47
          }
        },
        loc: {
          start: {
            line: 22,
            column: 62
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 25,
            column: 41
          }
        },
        loc: {
          start: {
            line: 25,
            column: 73
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 12
          }
        },
        loc: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 26,
            column: 73
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 52
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 30
          }
        },
        loc: {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 22
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 114
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 144
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 50
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 46
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 218
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 225,
            column: 63
          },
          end: {
            line: 225,
            column: 64
          }
        },
        loc: {
          start: {
            line: 225,
            column: 78
          },
          end: {
            line: 233,
            column: 13
          }
        },
        line: 225
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 22
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 271
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 21
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 307
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 23
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 317
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 26
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 330
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 17
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 346
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        loc: {
          start: {
            line: 360,
            column: 14
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 360
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 14
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 368
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 21
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 376
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 389,
            column: 32
          },
          end: {
            line: 389,
            column: 33
          }
        },
        loc: {
          start: {
            line: 389,
            column: 38
          },
          end: {
            line: 393,
            column: 9
          }
        },
        line: 389
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 394,
            column: 30
          },
          end: {
            line: 394,
            column: 31
          }
        },
        loc: {
          start: {
            line: 394,
            column: 37
          },
          end: {
            line: 396,
            column: 9
          }
        },
        line: 394
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        loc: {
          start: {
            line: 403,
            column: 21
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 403
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 22
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 428
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 39
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 448
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 28
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 480
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 21,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 22
          }
        }, {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 41
          }
        }, {
          start: {
            line: 16,
            column: 46
          },
          end: {
            line: 21,
            column: 1
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 34
          },
          end: {
            line: 17,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 17,
            column: 48
          }
        }, {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 125
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 67
          },
          end: {
            line: 17,
            column: 118
          }
        }, {
          start: {
            line: 17,
            column: 121
          },
          end: {
            line: 17,
            column: 125
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 19,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 19,
            column: 150
          }
        }, {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 150
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 35
          }
        }, {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 77
          }
        }],
        line: 18
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 58
          },
          end: {
            line: 19,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 58
          },
          end: {
            line: 19,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 85
          },
          end: {
            line: 19,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 86
          },
          end: {
            line: 19,
            column: 143
          }
        }, {
          start: {
            line: 19,
            column: 148
          },
          end: {
            line: 19,
            column: 149
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 19,
            column: 86
          },
          end: {
            line: 19,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 94
          },
          end: {
            line: 19,
            column: 98
          }
        }, {
          start: {
            line: 19,
            column: 101
          },
          end: {
            line: 19,
            column: 143
          }
        }],
        line: 19
      },
      "8": {
        loc: {
          start: {
            line: 19,
            column: 101
          },
          end: {
            line: 19,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 109
          },
          end: {
            line: 19,
            column: 126
          }
        }, {
          start: {
            line: 19,
            column: 129
          },
          end: {
            line: 19,
            column: 143
          }
        }],
        line: 19
      },
      "9": {
        loc: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 16
          }
        }, {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 21
          }
        }, {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 20,
            column: 62
          }
        }],
        line: 20
      },
      "10": {
        loc: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 22
          }
        }, {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 41
          }
        }, {
          start: {
            line: 22,
            column: 46
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 22
      },
      "11": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "12": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 35
          }
        }, {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 23,
            column: 77
          }
        }],
        line: 23
      },
      "13": {
        loc: {
          start: {
            line: 25,
            column: 14
          },
          end: {
            line: 27,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 19
          }
        }, {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 35
          }
        }, {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 27,
            column: 1
          }
        }],
        line: 25
      },
      "14": {
        loc: {
          start: {
            line: 144,
            column: 21
          },
          end: {
            line: 144,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 144,
            column: 32
          }
        }],
        line: 144
      },
      "15": {
        loc: {
          start: {
            line: 144,
            column: 34
          },
          end: {
            line: 144,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 44
          },
          end: {
            line: 144,
            column: 46
          }
        }],
        line: 144
      },
      "16": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "17": {
        loc: {
          start: {
            line: 158,
            column: 22
          },
          end: {
            line: 158,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 22
          },
          end: {
            line: 158,
            column: 33
          }
        }, {
          start: {
            line: 158,
            column: 37
          },
          end: {
            line: 158,
            column: 46
          }
        }],
        line: 158
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 208,
            column: 23
          },
          end: {
            line: 208,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 208,
            column: 32
          },
          end: {
            line: 208,
            column: 34
          }
        }],
        line: 208
      },
      "20": {
        loc: {
          start: {
            line: 208,
            column: 36
          },
          end: {
            line: 208,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 208,
            column: 46
          },
          end: {
            line: 208,
            column: 48
          }
        }],
        line: 208
      },
      "21": {
        loc: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 218,
            column: 42
          },
          end: {
            line: 218,
            column: 44
          }
        }],
        line: 218
      },
      "22": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "23": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 231,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 231,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "24": {
        loc: {
          start: {
            line: 335,
            column: 20
          },
          end: {
            line: 335,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 43
          },
          end: {
            line: 335,
            column: 54
          }
        }, {
          start: {
            line: 335,
            column: 57
          },
          end: {
            line: 335,
            column: 71
          }
        }],
        line: 335
      },
      "25": {
        loc: {
          start: {
            line: 383,
            column: 17
          },
          end: {
            line: 383,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 383,
            column: 35
          },
          end: {
            line: 383,
            column: 64
          }
        }, {
          start: {
            line: 383,
            column: 67
          },
          end: {
            line: 383,
            column: 72
          }
        }],
        line: 383
      },
      "26": {
        loc: {
          start: {
            line: 384,
            column: 17
          },
          end: {
            line: 384,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 17
          },
          end: {
            line: 384,
            column: 38
          }
        }, {
          start: {
            line: 384,
            column: 42
          },
          end: {
            line: 384,
            column: 44
          }
        }],
        line: 384
      },
      "27": {
        loc: {
          start: {
            line: 385,
            column: 17
          },
          end: {
            line: 385,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 17
          },
          end: {
            line: 385,
            column: 38
          }
        }, {
          start: {
            line: 385,
            column: 42
          },
          end: {
            line: 385,
            column: 43
          }
        }],
        line: 385
      },
      "28": {
        loc: {
          start: {
            line: 386,
            column: 31
          },
          end: {
            line: 386,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 31
          },
          end: {
            line: 386,
            column: 66
          }
        }, {
          start: {
            line: 386,
            column: 70
          },
          end: {
            line: 386,
            column: 75
          }
        }],
        line: 386
      },
      "29": {
        loc: {
          start: {
            line: 412,
            column: 21
          },
          end: {
            line: 412,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 39
          },
          end: {
            line: 412,
            column: 68
          }
        }, {
          start: {
            line: 412,
            column: 71
          },
          end: {
            line: 412,
            column: 76
          }
        }],
        line: 412
      },
      "30": {
        loc: {
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 415,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 415,
            column: 42
          }
        }, {
          start: {
            line: 415,
            column: 46
          },
          end: {
            line: 415,
            column: 47
          }
        }],
        line: 415
      },
      "31": {
        loc: {
          start: {
            line: 416,
            column: 21
          },
          end: {
            line: 416,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 21
          },
          end: {
            line: 416,
            column: 42
          }
        }, {
          start: {
            line: 416,
            column: 46
          },
          end: {
            line: 416,
            column: 48
          }
        }],
        line: 416
      },
      "32": {
        loc: {
          start: {
            line: 417,
            column: 35
          },
          end: {
            line: 417,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 35
          },
          end: {
            line: 417,
            column: 70
          }
        }, {
          start: {
            line: 417,
            column: 74
          },
          end: {
            line: 417,
            column: 79
          }
        }],
        line: 417
      },
      "33": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: 452,
            column: 13
          },
          end: {
            line: 454,
            column: 9
          }
        }],
        line: 449
      },
      "34": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: 461,
            column: 13
          },
          end: {
            line: 468,
            column: 9
          }
        }],
        line: 456
      },
      "35": {
        loc: {
          start: {
            line: 492,
            column: 53
          },
          end: {
            line: 492,
            column: 181
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 492,
            column: 170
          },
          end: {
            line: 492,
            column: 172
          }
        }, {
          start: {
            line: 492,
            column: 175
          },
          end: {
            line: 492,
            column: 181
          }
        }],
        line: 492
      },
      "36": {
        loc: {
          start: {
            line: 492,
            column: 66
          },
          end: {
            line: 492,
            column: 151
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 492,
            column: 66
          },
          end: {
            line: 492,
            column: 118
          }
        }, {
          start: {
            line: 492,
            column: 122
          },
          end: {
            line: 492,
            column: 151
          }
        }],
        line: 492
      },
      "37": {
        loc: {
          start: {
            line: 492,
            column: 183
          },
          end: {
            line: 492,
            column: 307
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 492,
            column: 296
          },
          end: {
            line: 492,
            column: 298
          }
        }, {
          start: {
            line: 492,
            column: 301
          },
          end: {
            line: 492,
            column: 307
          }
        }],
        line: 492
      },
      "38": {
        loc: {
          start: {
            line: 492,
            column: 196
          },
          end: {
            line: 492,
            column: 277
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 492,
            column: 196
          },
          end: {
            line: 492,
            column: 246
          }
        }, {
          start: {
            line: 492,
            column: 250
          },
          end: {
            line: 492,
            column: 277
          }
        }],
        line: 492
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts"],
      sourcesContent: ["/**\n * @file postgresql.adapter.ts\n * @description PostgreSQL\u6570\u636E\u5E93\u9002\u914D\u5668\u5B9E\u73B0\n *\n * \u8BE5\u6587\u4EF6\u5B9E\u73B0\u4E86PostgreSQL\u6570\u636E\u5E93\u9002\u914D\u5668\uFF0C\u5305\u62EC\uFF1A\n * - \u8FDE\u63A5\u7BA1\u7406\n * - \u67E5\u8BE2\u6267\u884C\n * - \u4E8B\u52A1\u7BA1\u7406\n * - \u5065\u5EB7\u68C0\u67E5\n * - \u7EDF\u8BA1\u76D1\u63A7\n * - \u4E8B\u4EF6\u901A\u77E5\n *\n * \u9075\u5FAADDD\u548CClean Architecture\u539F\u5219\uFF0C\u63D0\u4F9B\u7EDF\u4E00\u7684\u6570\u636E\u5E93\u64CD\u4F5C\u63A5\u53E3\u3002\n */\n\nimport { Injectable, Inject } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Pool, QueryResult } from 'pg';\nimport { Knex, knex } from 'knex';\nimport { PinoLoggerService, LogContext } from '@aiofix/logging';\nimport type {\n  IDatabaseAdapter,\n  DatabaseConfig,\n  DatabaseConnection,\n  DatabaseHealth,\n  DatabaseStats,\n  QueryOptions,\n  TransactionOptions,\n} from '../interfaces/database.interface';\nimport type { Connection } from 'pg';\nimport type { Connection as MikroOrmConnection } from '@mikro-orm/core';\n\n/**\n * @class PostgreSQLAdapter\n * @description PostgreSQL\u6570\u636E\u5E93\u9002\u914D\u5668\n *\n * \u63D0\u4F9BPostgreSQL\u6570\u636E\u5E93\u7684\u7EDF\u4E00\u64CD\u4F5C\u63A5\u53E3\uFF0C\u652F\u6301\uFF1A\n * - \u539F\u751Fpg\u8FDE\u63A5\u6C60\n * - Knex\u67E5\u8BE2\u6784\u5EFA\u5668\n * - \u8FDE\u63A5\u6C60\u7BA1\u7406\n * - \u5065\u5EB7\u68C0\u67E5\n * - \u6027\u80FD\u76D1\u63A7\n * - \u4E8B\u4EF6\u901A\u77E5\n *\n * @implements {IDatabaseAdapter}\n */\n@Injectable()\nexport class PostgreSQLAdapter implements IDatabaseAdapter {\n  public readonly name: string;\n  public readonly type: string = 'postgresql';\n  public readonly eventEmitter: EventEmitter2;\n  public readonly config: DatabaseConfig;\n\n  private readonly logger: PinoLoggerService;\n  private pool: Pool = {} as Pool;\n  private knexInstance: Knex = {} as Knex;\n  private isConnectedFlag = false;\n  private stats: DatabaseStats;\n  private connectionId: string;\n\n  constructor(\n    @Inject('DATABASE_CONFIG') config: DatabaseConfig,\n    @Inject('DATABASE_NAME') name: string,\n    eventEmitter: EventEmitter2,\n    logger: PinoLoggerService,\n  ) {\n    this.config = config;\n    this.name = name;\n    this.eventEmitter = eventEmitter;\n    this.logger = logger;\n    this.connectionId = uuidv4();\n    this.stats = this.initializeStats();\n    this.initializePool();\n    this.initializeKnex();\n\n    // \u81EA\u52A8\u8FDE\u63A5\u6570\u636E\u5E93\n    this.connect().catch(error => {\n      this.logger.warn(\n        'Failed to auto-connect to database, will retry on first query',\n        LogContext.DATABASE,\n        { adapter: this.name, error: (error as Error).message },\n      );\n    });\n  }\n\n  /**\n   * @getter isConnected\n   * @description \u83B7\u53D6\u8FDE\u63A5\u72B6\u6001\n   * @returns {boolean} \u662F\u5426\u5DF2\u8FDE\u63A5\n   */\n  get isConnected(): boolean {\n    return this.isConnectedFlag;\n  }\n\n  /**\n   * @method connect\n   * @description \u8FDE\u63A5\u5230PostgreSQL\u6570\u636E\u5E93\n   * @returns {Promise<void>} \u8FDE\u63A5\u7ED3\u679C\n   */\n  async connect(): Promise<void> {\n    try {\n      this.logger.info(\n        `Connecting to PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name, host: this.config.host, port: this.config.port },\n      );\n\n      // \u6D4B\u8BD5\u8FDE\u63A5\u6C60\u8FDE\u63A5\n      const client = await this.pool.connect();\n      await client.query('SELECT 1');\n      client.release();\n\n      this.isConnectedFlag = true;\n\n      this.logger.info(\n        `Successfully connected to PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name },\n      );\n\n      this.emitEvent('connected', {\n        adapter: this.name,\n        database: this.config.database,\n        timestamp: new Date(),\n      });\n    } catch (error) {\n      this.isConnectedFlag = false;\n      this.logger.error(\n        `Failed to connect to PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name, error: (error as Error).message },\n        error as Error,\n      );\n\n      this.emitEvent('connection_error', {\n        adapter: this.name,\n        error: (error as Error).message,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method disconnect\n   * @description \u65AD\u5F00PostgreSQL\u6570\u636E\u5E93\u8FDE\u63A5\n   * @returns {Promise<void>} \u65AD\u5F00\u7ED3\u679C\n   */\n  async disconnect(): Promise<void> {\n    try {\n      this.logger.info(\n        `Disconnecting from PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name },\n      );\n\n      await this.pool.end();\n      await this.knexInstance.destroy();\n\n      this.isConnectedFlag = false;\n\n      this.logger.info(\n        `Successfully disconnected from PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name },\n      );\n\n      this.emitEvent('disconnected', {\n        adapter: this.name,\n        timestamp: new Date(),\n      });\n    } catch (error) {\n      this.logger.error(\n        `Failed to disconnect from PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name, error: (error as Error).message },\n        error as Error,\n      );\n\n      this.emitEvent('disconnection_error', {\n        adapter: this.name,\n        error: (error as Error).message,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method query\n   * @description \u6267\u884C\u67E5\u8BE2\n   * @param sql SQL\u8BED\u53E5\n   * @param params \u67E5\u8BE2\u53C2\u6570\n   * @param options \u67E5\u8BE2\u9009\u9879\n   * @returns {Promise<QueryResult>} \u67E5\u8BE2\u7ED3\u679C\n   */\n  async query(\n    sql: string,\n    params: unknown[] = [],\n    options: QueryOptions = {},\n  ): Promise<QueryResult> {\n    const startTime = Date.now();\n    this.stats.totalQueries++;\n\n    try {\n      if (options.logQuery) {\n        this.logger.debug(`Executing query: ${sql}`, LogContext.DATABASE, {\n          adapter: this.name,\n          params,\n          tag: options.tag,\n        });\n      }\n\n      const queryConfig = {\n        text: sql,\n        values: params,\n        name: options.tag ?? 'unnamed',\n      };\n\n      const result = await this.pool.query(queryConfig);\n      const responseTime = Date.now() - startTime;\n\n      this.updateStats(responseTime, true);\n\n      if (options.logQuery) {\n        this.logger.debug(`Query completed: ${sql}`, LogContext.DATABASE, {\n          adapter: this.name,\n          responseTime,\n          rowCount: result.rowCount,\n        });\n      }\n\n      this.emitEvent('query_executed', {\n        adapter: this.name,\n        sql,\n        params,\n        responseTime,\n        rowCount: result.rowCount,\n        timestamp: new Date(),\n      });\n\n      return result;\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n      this.updateStats(responseTime, false);\n\n      this.logger.error(\n        `Query failed: ${sql}`,\n        LogContext.DATABASE,\n        {\n          adapter: this.name,\n          params,\n          responseTime,\n          error: (error as Error).message,\n        },\n        error as Error,\n      );\n\n      this.emitEvent('query_error', {\n        adapter: this.name,\n        sql,\n        params,\n        error: (error as Error).message,\n        responseTime,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method execute\n   * @description \u6267\u884C\u547D\u4EE4\n   * @param sql SQL\u8BED\u53E5\n   * @param params \u53C2\u6570\n   * @param options \u6267\u884C\u9009\u9879\n   * @returns {Promise<QueryResult>} \u6267\u884C\u7ED3\u679C\n   */\n  async execute(\n    sql: string,\n    params: unknown[] = [],\n    options: QueryOptions = {},\n  ): Promise<QueryResult> {\n    return this.query(sql, params, { ...options, logQuery: true });\n  }\n\n  /**\n   * @method transaction\n   * @description \u6267\u884C\u4E8B\u52A1\n   * @param callback \u4E8B\u52A1\u56DE\u8C03\u51FD\u6570\n   * @param options \u4E8B\u52A1\u9009\u9879\n   * @returns {Promise<T>} \u4E8B\u52A1\u7ED3\u679C\n   */\n  async transaction<T>(\n    callback: (_trx: unknown) => Promise<T>,\n    options: TransactionOptions = {},\n  ): Promise<T> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.debug(`Starting transaction`, LogContext.DATABASE, {\n        adapter: this.name,\n        tag: options.tag,\n      });\n\n      const result = await this.knexInstance.transaction(async trx => {\n        if (options.isolationLevel) {\n          await trx.raw(\n            `SET TRANSACTION ISOLATION LEVEL ${options.isolationLevel.toUpperCase()}`,\n          );\n        }\n\n        if (options.readOnly) {\n          await trx.raw('SET TRANSACTION READ ONLY');\n        }\n\n        return await callback(trx);\n      });\n\n      const responseTime = Date.now() - startTime;\n\n      this.logger.debug(`Transaction completed`, LogContext.DATABASE, {\n        adapter: this.name,\n        responseTime,\n        tag: options.tag,\n      });\n\n      this.emitEvent('transaction_completed', {\n        adapter: this.name,\n        responseTime,\n        tag: options.tag,\n        timestamp: new Date(),\n      });\n\n      return result;\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n\n      this.logger.error(\n        `Transaction failed`,\n        LogContext.DATABASE,\n        {\n          adapter: this.name,\n          responseTime,\n          error: (error as Error).message,\n          tag: options.tag,\n        },\n        error as Error,\n      );\n\n      this.emitEvent('transaction_error', {\n        adapter: this.name,\n        error: (error as Error).message,\n        responseTime,\n        tag: options.tag,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method getHealth\n   * @description \u83B7\u53D6\u5065\u5EB7\u72B6\u6001\n   * @returns {Promise<DatabaseHealth>} \u5065\u5EB7\u72B6\u6001\n   */\n  async getHealth(): Promise<DatabaseHealth> {\n    const startTime = Date.now();\n\n    try {\n      // \u6267\u884C\u5065\u5EB7\u68C0\u67E5\u67E5\u8BE2\n      await this.query('SELECT 1 as health_check', [], { tag: 'health_check' });\n\n      const responseTime = Date.now() - startTime;\n\n      const poolStatus = {\n        total: this.pool.totalCount,\n        idle: this.pool.idleCount,\n        active: this.pool.totalCount - this.pool.idleCount,\n        waiting: this.pool.waitingCount,\n      };\n\n      return {\n        healthy: true,\n        connected: this.isConnectedFlag,\n        responseTime,\n        lastCheck: new Date(),\n        poolStatus,\n      };\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n\n      return {\n        healthy: false,\n        connected: false,\n        responseTime,\n        error: (error as Error).message,\n        lastCheck: new Date(),\n      };\n    }\n  }\n\n  /**\n   * @method getStats\n   * @description \u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\n   * @returns {Promise<DatabaseStats>} \u7EDF\u8BA1\u4FE1\u606F\n   */\n  async getStats(): Promise<DatabaseStats> {\n    // \u6A21\u62DF\u5F02\u6B65\u64CD\u4F5C\u4EE5\u6EE1\u8DB3\u63A5\u53E3\u8981\u6C42\n    await Promise.resolve();\n    return { ...this.stats };\n  }\n\n  /**\n   * @method resetStats\n   * @description \u91CD\u7F6E\u7EDF\u8BA1\u4FE1\u606F\n   * @returns {Promise<void>} \u91CD\u7F6E\u7ED3\u679C\n   */\n  async resetStats(): Promise<void> {\n    // \u6A21\u62DF\u5F02\u6B65\u64CD\u4F5C\u4EE5\u6EE1\u8DB3\u63A5\u53E3\u8981\u6C42\n    await Promise.resolve();\n    this.stats = this.initializeStats();\n    this.logger.info('Database stats reset', LogContext.DATABASE, {\n      adapter: this.name,\n    });\n  }\n\n  /**\n   * @method getConnection\n   * @description \u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\n   * @returns {Promise<DatabaseConnection>} \u6570\u636E\u5E93\u8FDE\u63A5\n   */\n  async getConnection(): Promise<DatabaseConnection> {\n    // \u6A21\u62DF\u5F02\u6B65\u64CD\u4F5C\u4EE5\u6EE1\u8DB3\u63A5\u53E3\u8981\u6C42\n    await Promise.resolve();\n    return {\n      id: this.connectionId,\n      status: this.isConnectedFlag ? 'connected' : 'disconnected',\n      config: this.config,\n      instance: this.pool as unknown as Connection | Knex | MikroOrmConnection,\n      lastActivity: new Date(),\n    };\n  }\n\n  /**\n   * @method ping\n   * @description \u6570\u636E\u5E93\u8FDE\u63A5\u6D4B\u8BD5\n   * @returns {Promise<boolean>} \u6D4B\u8BD5\u7ED3\u679C\n   */\n  async ping(): Promise<boolean> {\n    try {\n      await this.query('SELECT 1', [], { tag: 'ping_test' });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * @method getKnex\n   * @description \u83B7\u53D6Knex\u5B9E\u4F8B\n   * @returns {Knex} Knex\u5B9E\u4F8B\n   */\n  getKnex(): Knex {\n    return this.knexInstance;\n  }\n\n  /**\n   * @method getPool\n   * @description \u83B7\u53D6\u8FDE\u63A5\u6C60\u5B9E\u4F8B\n   * @returns {Pool} \u8FDE\u63A5\u6C60\u5B9E\u4F8B\n   */\n  getPool(): Pool {\n    return this.pool;\n  }\n\n  /**\n   * @private\n   * @method initializePool\n   * @description \u521D\u59CB\u5316\u8FDE\u63A5\u6C60\n   */\n  private initializePool(): void {\n    this.pool = new Pool({\n      host: this.config.host,\n      port: this.config.port,\n      user: this.config.username,\n      password: this.config.password,\n      database: this.config.database,\n      ssl: this.config.ssl ? { rejectUnauthorized: false } : false,\n      max: this.config.pool?.max ?? 20,\n      min: this.config.pool?.min ?? 2,\n      idleTimeoutMillis: this.config.pool?.idleTimeoutMillis ?? 30000,\n    });\n\n    // \u76D1\u542C\u8FDE\u63A5\u6C60\u4E8B\u4EF6\n    this.pool.on('connect', () => {\n      this.logger.debug('New client connected to pool', LogContext.DATABASE, {\n        adapter: this.name,\n      });\n    });\n\n    this.pool.on('error', err => {\n      this.logger.error(\n        'Unexpected error on idle client',\n        LogContext.DATABASE,\n        { adapter: this.name },\n        err,\n      );\n    });\n  }\n\n  /**\n   * @private\n   * @method initializeKnex\n   * @description \u521D\u59CB\u5316Knex\u5B9E\u4F8B\n   */\n  private initializeKnex(): void {\n    this.knexInstance = knex({\n      client: 'postgresql',\n      connection: {\n        host: this.config.host,\n        port: this.config.port,\n        user: this.config.username,\n        password: this.config.password,\n        database: this.config.database,\n        ssl: this.config.ssl ? { rejectUnauthorized: false } : false,\n      },\n      pool: {\n        min: this.config.pool?.min ?? 2,\n        max: this.config.pool?.max ?? 20,\n        idleTimeoutMillis: this.config.pool?.idleTimeoutMillis ?? 30000,\n      },\n      debug: false,\n    });\n  }\n\n  /**\n   * @private\n   * @method initializeStats\n   * @description \u521D\u59CB\u5316\u7EDF\u8BA1\u4FE1\u606F\n   * @returns {DatabaseStats} \u521D\u59CB\u7EDF\u8BA1\u4FE1\u606F\n   */\n  private initializeStats(): DatabaseStats {\n    return {\n      totalQueries: 0,\n      successfulQueries: 0,\n      failedQueries: 0,\n      averageResponseTime: 0,\n      maxResponseTime: 0,\n      minResponseTime: 0,\n      activeConnections: 0,\n      idleConnections: 0,\n      lastReset: new Date(),\n    };\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description \u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\n   * @param responseTime \u54CD\u5E94\u65F6\u95F4\n   * @param success \u662F\u5426\u6210\u529F\n   */\n  private updateStats(responseTime: number, success: boolean): void {\n    if (success) {\n      this.stats.successfulQueries++;\n    } else {\n      this.stats.failedQueries++;\n    }\n\n    // \u66F4\u65B0\u54CD\u5E94\u65F6\u95F4\u7EDF\u8BA1\n    if (this.stats.totalQueries === 1) {\n      this.stats.minResponseTime = responseTime;\n      this.stats.maxResponseTime = responseTime;\n      this.stats.averageResponseTime = responseTime;\n    } else {\n      this.stats.minResponseTime = Math.min(\n        this.stats.minResponseTime,\n        responseTime,\n      );\n      this.stats.maxResponseTime = Math.max(\n        this.stats.maxResponseTime,\n        responseTime,\n      );\n      this.stats.averageResponseTime =\n        (this.stats.averageResponseTime * (this.stats.totalQueries - 1) +\n          responseTime) /\n        this.stats.totalQueries;\n    }\n\n    // \u66F4\u65B0\u8FDE\u63A5\u6C60\u7EDF\u8BA1\n    this.stats.activeConnections = this.pool.totalCount - this.pool.idleCount;\n    this.stats.idleConnections = this.pool.idleCount;\n  }\n\n  /**\n   * @private\n   * @method emitEvent\n   * @description \u53D1\u5C04\u4E8B\u4EF6\n   * @param event \u4E8B\u4EF6\u540D\u79F0\n   * @param _data \u4E8B\u4EF6\u6570\u636E\n   */\n  private emitEvent(event: string, _data: Record<string, unknown>): void {\n    this.eventEmitter.emit(`database.${event}`, {\n      adapter: this.name,\n      ..._data,\n    });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c17beb67e9ab38bd800ed930e1c8a966ab21fc9b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hu555lw70 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hu555lw70();
var __decorate =
/* istanbul ignore next */
(cov_2hu555lw70().s[0]++,
/* istanbul ignore next */
(cov_2hu555lw70().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2hu555lw70().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_2hu555lw70().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_2hu555lw70().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_2hu555lw70().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_2hu555lw70().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2hu555lw70().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_2hu555lw70().b[3][0]++;
    cov_2hu555lw70().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_2hu555lw70().b[3][1]++;
    cov_2hu555lw70().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_2hu555lw70().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[5][0]++;
        cov_2hu555lw70().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_2hu555lw70().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_2hu555lw70().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_2hu555lw70().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_2hu555lw70().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_2hu555lw70().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_2hu555lw70().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2hu555lw70().s[9]++;
  return /* istanbul ignore next */(cov_2hu555lw70().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_2hu555lw70().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_2hu555lw70().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_2hu555lw70().s[10]++,
/* istanbul ignore next */
(cov_2hu555lw70().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2hu555lw70().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_2hu555lw70().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_2hu555lw70().f[1]++;
  cov_2hu555lw70().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2hu555lw70().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2hu555lw70().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_2hu555lw70().b[11][0]++;
    cov_2hu555lw70().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_2hu555lw70().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_2hu555lw70().s[13]++,
/* istanbul ignore next */
(cov_2hu555lw70().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_2hu555lw70().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_2hu555lw70().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_2hu555lw70().f[2]++;
  cov_2hu555lw70().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[3]++;
    cov_2hu555lw70().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
var _a, _b;
/* istanbul ignore next */
cov_2hu555lw70().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hu555lw70().s[17]++;
exports.PostgreSQLAdapter = void 0;
const common_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[18]++, require("@nestjs/common"));
const event_emitter_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[19]++, require("@nestjs/event-emitter"));
const uuid_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[20]++, require("uuid"));
const pg_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[21]++, require("pg"));
const knex_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[22]++, require("knex"));
const logging_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[23]++, require("@aiofix/logging"));
/**
 * @class PostgreSQLAdapter
 * @description PostgreSQL数据库适配器
 *
 * 提供PostgreSQL数据库的统一操作接口，支持：
 * - 原生pg连接池
 * - Knex查询构建器
 * - 连接池管理
 * - 健康检查
 * - 性能监控
 * - 事件通知
 *
 * @implements {IDatabaseAdapter}
 */
/* istanbul ignore next */
cov_2hu555lw70().s[24]++;
let PostgreSQLAdapter = class PostgreSQLAdapter {
  constructor(config, name, eventEmitter, logger) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[4]++;
    cov_2hu555lw70().s[25]++;
    this.type = 'postgresql';
    /* istanbul ignore next */
    cov_2hu555lw70().s[26]++;
    this.pool = {};
    /* istanbul ignore next */
    cov_2hu555lw70().s[27]++;
    this.knexInstance = {};
    /* istanbul ignore next */
    cov_2hu555lw70().s[28]++;
    this.isConnectedFlag = false;
    /* istanbul ignore next */
    cov_2hu555lw70().s[29]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2hu555lw70().s[30]++;
    this.name = name;
    /* istanbul ignore next */
    cov_2hu555lw70().s[31]++;
    this.eventEmitter = eventEmitter;
    /* istanbul ignore next */
    cov_2hu555lw70().s[32]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_2hu555lw70().s[33]++;
    this.connectionId = (0, uuid_1.v4)();
    /* istanbul ignore next */
    cov_2hu555lw70().s[34]++;
    this.stats = this.initializeStats();
    /* istanbul ignore next */
    cov_2hu555lw70().s[35]++;
    this.initializePool();
    /* istanbul ignore next */
    cov_2hu555lw70().s[36]++;
    this.initializeKnex();
    // 自动连接数据库
    /* istanbul ignore next */
    cov_2hu555lw70().s[37]++;
    this.connect().catch(error => {
      /* istanbul ignore next */
      cov_2hu555lw70().f[5]++;
      cov_2hu555lw70().s[38]++;
      this.logger.warn('Failed to auto-connect to database, will retry on first query', logging_1.LogContext.DATABASE, {
        adapter: this.name,
        error: error.message
      });
    });
  }
  /**
   * @getter isConnected
   * @description 获取连接状态
   * @returns {boolean} 是否已连接
   */
  get isConnected() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[6]++;
    cov_2hu555lw70().s[39]++;
    return this.isConnectedFlag;
  }
  /**
   * @method connect
   * @description 连接到PostgreSQL数据库
   * @returns {Promise<void>} 连接结果
   */
  async connect() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[7]++;
    cov_2hu555lw70().s[40]++;
    try {
      /* istanbul ignore next */
      cov_2hu555lw70().s[41]++;
      this.logger.info(`Connecting to PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        host: this.config.host,
        port: this.config.port
      });
      // 测试连接池连接
      const client =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[42]++, await this.pool.connect());
      /* istanbul ignore next */
      cov_2hu555lw70().s[43]++;
      await client.query('SELECT 1');
      /* istanbul ignore next */
      cov_2hu555lw70().s[44]++;
      client.release();
      /* istanbul ignore next */
      cov_2hu555lw70().s[45]++;
      this.isConnectedFlag = true;
      /* istanbul ignore next */
      cov_2hu555lw70().s[46]++;
      this.logger.info(`Successfully connected to PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
        adapter: this.name
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[47]++;
      this.emitEvent('connected', {
        adapter: this.name,
        database: this.config.database,
        timestamp: new Date()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2hu555lw70().s[48]++;
      this.isConnectedFlag = false;
      /* istanbul ignore next */
      cov_2hu555lw70().s[49]++;
      this.logger.error(`Failed to connect to PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        error: error.message
      }, error);
      /* istanbul ignore next */
      cov_2hu555lw70().s[50]++;
      this.emitEvent('connection_error', {
        adapter: this.name,
        error: error.message,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[51]++;
      throw error;
    }
  }
  /**
   * @method disconnect
   * @description 断开PostgreSQL数据库连接
   * @returns {Promise<void>} 断开结果
   */
  async disconnect() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[8]++;
    cov_2hu555lw70().s[52]++;
    try {
      /* istanbul ignore next */
      cov_2hu555lw70().s[53]++;
      this.logger.info(`Disconnecting from PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
        adapter: this.name
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[54]++;
      await this.pool.end();
      /* istanbul ignore next */
      cov_2hu555lw70().s[55]++;
      await this.knexInstance.destroy();
      /* istanbul ignore next */
      cov_2hu555lw70().s[56]++;
      this.isConnectedFlag = false;
      /* istanbul ignore next */
      cov_2hu555lw70().s[57]++;
      this.logger.info(`Successfully disconnected from PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
        adapter: this.name
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[58]++;
      this.emitEvent('disconnected', {
        adapter: this.name,
        timestamp: new Date()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2hu555lw70().s[59]++;
      this.logger.error(`Failed to disconnect from PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        error: error.message
      }, error);
      /* istanbul ignore next */
      cov_2hu555lw70().s[60]++;
      this.emitEvent('disconnection_error', {
        adapter: this.name,
        error: error.message,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[61]++;
      throw error;
    }
  }
  /**
   * @method query
   * @description 执行查询
   * @param sql SQL语句
   * @param params 查询参数
   * @param options 查询选项
   * @returns {Promise<QueryResult>} 查询结果
   */
  async query(sql, params =
  /* istanbul ignore next */
  (cov_2hu555lw70().b[14][0]++, []), options =
  /* istanbul ignore next */
  (cov_2hu555lw70().b[15][0]++, {})) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[9]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[62]++, Date.now());
    /* istanbul ignore next */
    cov_2hu555lw70().s[63]++;
    this.stats.totalQueries++;
    /* istanbul ignore next */
    cov_2hu555lw70().s[64]++;
    try {
      /* istanbul ignore next */
      cov_2hu555lw70().s[65]++;
      if (options.logQuery) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[16][0]++;
        cov_2hu555lw70().s[66]++;
        this.logger.debug(`Executing query: ${sql}`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          params,
          tag: options.tag
        });
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[16][1]++;
      }
      const queryConfig =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[67]++, {
        text: sql,
        values: params,
        name:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[17][0]++, options.tag) ??
        /* istanbul ignore next */
        (cov_2hu555lw70().b[17][1]++, 'unnamed')
      });
      const result =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[68]++, await this.pool.query(queryConfig));
      const responseTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[69]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[70]++;
      this.updateStats(responseTime, true);
      /* istanbul ignore next */
      cov_2hu555lw70().s[71]++;
      if (options.logQuery) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[18][0]++;
        cov_2hu555lw70().s[72]++;
        this.logger.debug(`Query completed: ${sql}`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          responseTime,
          rowCount: result.rowCount
        });
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[18][1]++;
      }
      cov_2hu555lw70().s[73]++;
      this.emitEvent('query_executed', {
        adapter: this.name,
        sql,
        params,
        responseTime,
        rowCount: result.rowCount,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[74]++;
      return result;
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[75]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[76]++;
      this.updateStats(responseTime, false);
      /* istanbul ignore next */
      cov_2hu555lw70().s[77]++;
      this.logger.error(`Query failed: ${sql}`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        params,
        responseTime,
        error: error.message
      }, error);
      /* istanbul ignore next */
      cov_2hu555lw70().s[78]++;
      this.emitEvent('query_error', {
        adapter: this.name,
        sql,
        params,
        error: error.message,
        responseTime,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[79]++;
      throw error;
    }
  }
  /**
   * @method execute
   * @description 执行命令
   * @param sql SQL语句
   * @param params 参数
   * @param options 执行选项
   * @returns {Promise<QueryResult>} 执行结果
   */
  async execute(sql, params =
  /* istanbul ignore next */
  (cov_2hu555lw70().b[19][0]++, []), options =
  /* istanbul ignore next */
  (cov_2hu555lw70().b[20][0]++, {})) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[10]++;
    cov_2hu555lw70().s[80]++;
    return this.query(sql, params, {
      ...options,
      logQuery: true
    });
  }
  /**
   * @method transaction
   * @description 执行事务
   * @param callback 事务回调函数
   * @param options 事务选项
   * @returns {Promise<T>} 事务结果
   */
  async transaction(callback, options =
  /* istanbul ignore next */
  (cov_2hu555lw70().b[21][0]++, {})) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[11]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[81]++, Date.now());
    /* istanbul ignore next */
    cov_2hu555lw70().s[82]++;
    try {
      /* istanbul ignore next */
      cov_2hu555lw70().s[83]++;
      this.logger.debug(`Starting transaction`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        tag: options.tag
      });
      const result =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[84]++, await this.knexInstance.transaction(async trx => {
        /* istanbul ignore next */
        cov_2hu555lw70().f[12]++;
        cov_2hu555lw70().s[85]++;
        if (options.isolationLevel) {
          /* istanbul ignore next */
          cov_2hu555lw70().b[22][0]++;
          cov_2hu555lw70().s[86]++;
          await trx.raw(`SET TRANSACTION ISOLATION LEVEL ${options.isolationLevel.toUpperCase()}`);
        } else
        /* istanbul ignore next */
        {
          cov_2hu555lw70().b[22][1]++;
        }
        cov_2hu555lw70().s[87]++;
        if (options.readOnly) {
          /* istanbul ignore next */
          cov_2hu555lw70().b[23][0]++;
          cov_2hu555lw70().s[88]++;
          await trx.raw('SET TRANSACTION READ ONLY');
        } else
        /* istanbul ignore next */
        {
          cov_2hu555lw70().b[23][1]++;
        }
        cov_2hu555lw70().s[89]++;
        return await callback(trx);
      }));
      const responseTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[90]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[91]++;
      this.logger.debug(`Transaction completed`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        responseTime,
        tag: options.tag
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[92]++;
      this.emitEvent('transaction_completed', {
        adapter: this.name,
        responseTime,
        tag: options.tag,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[93]++;
      return result;
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[94]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[95]++;
      this.logger.error(`Transaction failed`, logging_1.LogContext.DATABASE, {
        adapter: this.name,
        responseTime,
        error: error.message,
        tag: options.tag
      }, error);
      /* istanbul ignore next */
      cov_2hu555lw70().s[96]++;
      this.emitEvent('transaction_error', {
        adapter: this.name,
        error: error.message,
        responseTime,
        tag: options.tag,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[97]++;
      throw error;
    }
  }
  /**
   * @method getHealth
   * @description 获取健康状态
   * @returns {Promise<DatabaseHealth>} 健康状态
   */
  async getHealth() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[13]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[98]++, Date.now());
    /* istanbul ignore next */
    cov_2hu555lw70().s[99]++;
    try {
      /* istanbul ignore next */
      cov_2hu555lw70().s[100]++;
      // 执行健康检查查询
      await this.query('SELECT 1 as health_check', [], {
        tag: 'health_check'
      });
      const responseTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[101]++, Date.now() - startTime);
      const poolStatus =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[102]++, {
        total: this.pool.totalCount,
        idle: this.pool.idleCount,
        active: this.pool.totalCount - this.pool.idleCount,
        waiting: this.pool.waitingCount
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[103]++;
      return {
        healthy: true,
        connected: this.isConnectedFlag,
        responseTime,
        lastCheck: new Date(),
        poolStatus
      };
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[104]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[105]++;
      return {
        healthy: false,
        connected: false,
        responseTime,
        error: error.message,
        lastCheck: new Date()
      };
    }
  }
  /**
   * @method getStats
   * @description 获取统计信息
   * @returns {Promise<DatabaseStats>} 统计信息
   */
  async getStats() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[14]++;
    cov_2hu555lw70().s[106]++;
    // 模拟异步操作以满足接口要求
    await Promise.resolve();
    /* istanbul ignore next */
    cov_2hu555lw70().s[107]++;
    return {
      ...this.stats
    };
  }
  /**
   * @method resetStats
   * @description 重置统计信息
   * @returns {Promise<void>} 重置结果
   */
  async resetStats() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[15]++;
    cov_2hu555lw70().s[108]++;
    // 模拟异步操作以满足接口要求
    await Promise.resolve();
    /* istanbul ignore next */
    cov_2hu555lw70().s[109]++;
    this.stats = this.initializeStats();
    /* istanbul ignore next */
    cov_2hu555lw70().s[110]++;
    this.logger.info('Database stats reset', logging_1.LogContext.DATABASE, {
      adapter: this.name
    });
  }
  /**
   * @method getConnection
   * @description 获取数据库连接
   * @returns {Promise<DatabaseConnection>} 数据库连接
   */
  async getConnection() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[16]++;
    cov_2hu555lw70().s[111]++;
    // 模拟异步操作以满足接口要求
    await Promise.resolve();
    /* istanbul ignore next */
    cov_2hu555lw70().s[112]++;
    return {
      id: this.connectionId,
      status: this.isConnectedFlag ?
      /* istanbul ignore next */
      (cov_2hu555lw70().b[24][0]++, 'connected') :
      /* istanbul ignore next */
      (cov_2hu555lw70().b[24][1]++, 'disconnected'),
      config: this.config,
      instance: this.pool,
      lastActivity: new Date()
    };
  }
  /**
   * @method ping
   * @description 数据库连接测试
   * @returns {Promise<boolean>} 测试结果
   */
  async ping() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[17]++;
    cov_2hu555lw70().s[113]++;
    try {
      /* istanbul ignore next */
      cov_2hu555lw70().s[114]++;
      await this.query('SELECT 1', [], {
        tag: 'ping_test'
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[115]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_2hu555lw70().s[116]++;
      return false;
    }
  }
  /**
   * @method getKnex
   * @description 获取Knex实例
   * @returns {Knex} Knex实例
   */
  getKnex() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[18]++;
    cov_2hu555lw70().s[117]++;
    return this.knexInstance;
  }
  /**
   * @method getPool
   * @description 获取连接池实例
   * @returns {Pool} 连接池实例
   */
  getPool() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[19]++;
    cov_2hu555lw70().s[118]++;
    return this.pool;
  }
  /**
   * @private
   * @method initializePool
   * @description 初始化连接池
   */
  initializePool() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[20]++;
    cov_2hu555lw70().s[119]++;
    this.pool = new pg_1.Pool({
      host: this.config.host,
      port: this.config.port,
      user: this.config.username,
      password: this.config.password,
      database: this.config.database,
      ssl: this.config.ssl ?
      /* istanbul ignore next */
      (cov_2hu555lw70().b[25][0]++, {
        rejectUnauthorized: false
      }) :
      /* istanbul ignore next */
      (cov_2hu555lw70().b[25][1]++, false),
      max:
      /* istanbul ignore next */
      (cov_2hu555lw70().b[26][0]++, this.config.pool?.max) ??
      /* istanbul ignore next */
      (cov_2hu555lw70().b[26][1]++, 20),
      min:
      /* istanbul ignore next */
      (cov_2hu555lw70().b[27][0]++, this.config.pool?.min) ??
      /* istanbul ignore next */
      (cov_2hu555lw70().b[27][1]++, 2),
      idleTimeoutMillis:
      /* istanbul ignore next */
      (cov_2hu555lw70().b[28][0]++, this.config.pool?.idleTimeoutMillis) ??
      /* istanbul ignore next */
      (cov_2hu555lw70().b[28][1]++, 30000)
    });
    // 监听连接池事件
    /* istanbul ignore next */
    cov_2hu555lw70().s[120]++;
    this.pool.on('connect', () => {
      /* istanbul ignore next */
      cov_2hu555lw70().f[21]++;
      cov_2hu555lw70().s[121]++;
      this.logger.debug('New client connected to pool', logging_1.LogContext.DATABASE, {
        adapter: this.name
      });
    });
    /* istanbul ignore next */
    cov_2hu555lw70().s[122]++;
    this.pool.on('error', err => {
      /* istanbul ignore next */
      cov_2hu555lw70().f[22]++;
      cov_2hu555lw70().s[123]++;
      this.logger.error('Unexpected error on idle client', logging_1.LogContext.DATABASE, {
        adapter: this.name
      }, err);
    });
  }
  /**
   * @private
   * @method initializeKnex
   * @description 初始化Knex实例
   */
  initializeKnex() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[23]++;
    cov_2hu555lw70().s[124]++;
    this.knexInstance = (0, knex_1.knex)({
      client: 'postgresql',
      connection: {
        host: this.config.host,
        port: this.config.port,
        user: this.config.username,
        password: this.config.password,
        database: this.config.database,
        ssl: this.config.ssl ?
        /* istanbul ignore next */
        (cov_2hu555lw70().b[29][0]++, {
          rejectUnauthorized: false
        }) :
        /* istanbul ignore next */
        (cov_2hu555lw70().b[29][1]++, false)
      },
      pool: {
        min:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[30][0]++, this.config.pool?.min) ??
        /* istanbul ignore next */
        (cov_2hu555lw70().b[30][1]++, 2),
        max:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[31][0]++, this.config.pool?.max) ??
        /* istanbul ignore next */
        (cov_2hu555lw70().b[31][1]++, 20),
        idleTimeoutMillis:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[32][0]++, this.config.pool?.idleTimeoutMillis) ??
        /* istanbul ignore next */
        (cov_2hu555lw70().b[32][1]++, 30000)
      },
      debug: false
    });
  }
  /**
   * @private
   * @method initializeStats
   * @description 初始化统计信息
   * @returns {DatabaseStats} 初始统计信息
   */
  initializeStats() {
    /* istanbul ignore next */
    cov_2hu555lw70().f[24]++;
    cov_2hu555lw70().s[125]++;
    return {
      totalQueries: 0,
      successfulQueries: 0,
      failedQueries: 0,
      averageResponseTime: 0,
      maxResponseTime: 0,
      minResponseTime: 0,
      activeConnections: 0,
      idleConnections: 0,
      lastReset: new Date()
    };
  }
  /**
   * @private
   * @method updateStats
   * @description 更新统计信息
   * @param responseTime 响应时间
   * @param success 是否成功
   */
  updateStats(responseTime, success) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[25]++;
    cov_2hu555lw70().s[126]++;
    if (success) {
      /* istanbul ignore next */
      cov_2hu555lw70().b[33][0]++;
      cov_2hu555lw70().s[127]++;
      this.stats.successfulQueries++;
    } else {
      /* istanbul ignore next */
      cov_2hu555lw70().b[33][1]++;
      cov_2hu555lw70().s[128]++;
      this.stats.failedQueries++;
    }
    // 更新响应时间统计
    /* istanbul ignore next */
    cov_2hu555lw70().s[129]++;
    if (this.stats.totalQueries === 1) {
      /* istanbul ignore next */
      cov_2hu555lw70().b[34][0]++;
      cov_2hu555lw70().s[130]++;
      this.stats.minResponseTime = responseTime;
      /* istanbul ignore next */
      cov_2hu555lw70().s[131]++;
      this.stats.maxResponseTime = responseTime;
      /* istanbul ignore next */
      cov_2hu555lw70().s[132]++;
      this.stats.averageResponseTime = responseTime;
    } else {
      /* istanbul ignore next */
      cov_2hu555lw70().b[34][1]++;
      cov_2hu555lw70().s[133]++;
      this.stats.minResponseTime = Math.min(this.stats.minResponseTime, responseTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[134]++;
      this.stats.maxResponseTime = Math.max(this.stats.maxResponseTime, responseTime);
      /* istanbul ignore next */
      cov_2hu555lw70().s[135]++;
      this.stats.averageResponseTime = (this.stats.averageResponseTime * (this.stats.totalQueries - 1) + responseTime) / this.stats.totalQueries;
    }
    // 更新连接池统计
    /* istanbul ignore next */
    cov_2hu555lw70().s[136]++;
    this.stats.activeConnections = this.pool.totalCount - this.pool.idleCount;
    /* istanbul ignore next */
    cov_2hu555lw70().s[137]++;
    this.stats.idleConnections = this.pool.idleCount;
  }
  /**
   * @private
   * @method emitEvent
   * @description 发射事件
   * @param event 事件名称
   * @param _data 事件数据
   */
  emitEvent(event, _data) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[26]++;
    cov_2hu555lw70().s[138]++;
    this.eventEmitter.emit(`database.${event}`, {
      adapter: this.name,
      ..._data
    });
  }
};
/* istanbul ignore next */
cov_2hu555lw70().s[139]++;
exports.PostgreSQLAdapter = PostgreSQLAdapter;
/* istanbul ignore next */
cov_2hu555lw70().s[140]++;
exports.PostgreSQLAdapter = PostgreSQLAdapter = __decorate([(0, common_1.Injectable)(), __param(0, (0, common_1.Inject)('DATABASE_CONFIG')), __param(1, (0, common_1.Inject)('DATABASE_NAME')), __metadata("design:paramtypes", [Object, String, typeof (_a =
/* istanbul ignore next */
(cov_2hu555lw70().b[36][0]++, typeof event_emitter_1.EventEmitter2 !== "undefined") &&
/* istanbul ignore next */
(cov_2hu555lw70().b[36][1]++, event_emitter_1.EventEmitter2)) === "function" ?
/* istanbul ignore next */
(cov_2hu555lw70().b[35][0]++, _a) :
/* istanbul ignore next */
(cov_2hu555lw70().b[35][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_2hu555lw70().b[38][0]++, typeof logging_1.PinoLoggerService !== "undefined") &&
/* istanbul ignore next */
(cov_2hu555lw70().b[38][1]++, logging_1.PinoLoggerService)) === "function" ?
/* istanbul ignore next */
(cov_2hu555lw70().b[37][0]++, _b) :
/* istanbul ignore next */
(cov_2hu555lw70().b[37][1]++, Object)])], PostgreSQLAdapter);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,