{"file":"/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/cache-manager.service.spec.ts","mappings":"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","names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/cache-manager.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport {\n  CacheManagerService,\n  CacheManagerConfig,\n  CacheLayerConfig,\n} from './cache-manager.service';\nimport { ICacheService } from '../interfaces/cache.interface';\nimport { ICacheKeyFactory } from '../interfaces/cache.interface';\nimport {\n  CacheStrategy,\n  CacheType,\n  CacheKey,\n} from '../interfaces/cache.interface';\nimport { PinoLoggerService } from '@aiofix/logging';\n\n/**\n * @class MockCacheService\n * @description 模拟缓存服务，用于测试\n */\nclass MockCacheService implements ICacheService {\n  private cache = new Map<string, unknown>();\n  private stats = {\n    totalEntries: 0,\n    hits: 0,\n    misses: 0,\n    hitRate: 0,\n    totalSize: 0,\n    averageSize: 0,\n    expiredEntries: 0,\n    evictedEntries: 0,\n    lastReset: Date.now(),\n  };\n\n  async get<T = unknown>(key: CacheKey): Promise<T | null> {\n    const cacheKey = this.buildKey(key);\n    const value = this.cache.get(cacheKey);\n    if (value !== undefined) {\n      this.stats.hits++;\n      return value;\n    }\n    this.stats.misses++;\n    return null;\n  }\n\n  async set<T = unknown>(key: CacheKey, value: T): Promise<boolean> {\n    const cacheKey = this.buildKey(key);\n    this.cache.set(cacheKey, value);\n    this.stats.totalEntries = this.cache.size;\n    return true;\n  }\n\n  async delete(key: CacheKey): Promise<boolean> {\n    const cacheKey = this.buildKey(key);\n    return this.cache.delete(cacheKey);\n  }\n\n  async exists(key: CacheKey): Promise<boolean> {\n    const cacheKey = this.buildKey(key);\n    return this.cache.has(cacheKey);\n  }\n\n  async clear(): Promise<boolean> {\n    this.cache.clear();\n    this.stats.totalEntries = 0;\n    return true;\n  }\n\n  async getStats() {\n    return { ...this.stats };\n  }\n\n  async getHealth() {\n    return {\n      healthy: true,\n      connected: true,\n      responseTime: 1,\n      lastCheck: Date.now(),\n    };\n  }\n\n  async resetStats(): Promise<void> {\n    this.stats = {\n      totalEntries: 0,\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      totalSize: 0,\n      averageSize: 0,\n      expiredEntries: 0,\n      evictedEntries: 0,\n      lastReset: Date.now(),\n    };\n  }\n\n  private buildKey(key: CacheKey): string {\n    return `${key.namespace || 'default'}:${key.key}`;\n  }\n}\n\n/**\n * @class MockCacheKeyFactory\n * @description 模拟缓存键工厂，用于测试\n */\nclass MockCacheKeyFactory implements ICacheKeyFactory {\n  create(key: string, options?: Partial<CacheKey>): CacheKey {\n    return {\n      key,\n      namespace: options?.namespace,\n      version: options?.version,\n      tenantId: options?.tenantId,\n      userId: options?.userId,\n      tags: options?.tags,\n    };\n  }\n\n  createNamespace(\n    namespace: string,\n    key: string,\n    options?: Partial<CacheKey>,\n  ): CacheKey {\n    return this.create(key, { ...options, namespace });\n  }\n\n  createTenant(\n    tenantId: string,\n    key: string,\n    options?: Partial<CacheKey>,\n  ): CacheKey {\n    return this.create(key, { ...options, tenantId });\n  }\n\n  createUser(\n    userId: string,\n    key: string,\n    options?: Partial<CacheKey>,\n  ): CacheKey {\n    return this.create(key, { ...options, userId });\n  }\n\n  createTagged(\n    key: string,\n    tags: string[],\n    options?: Partial<CacheKey>,\n  ): CacheKey {\n    return this.create(key, { ...options, tags });\n  }\n\n  toString(key: CacheKey): string {\n    return `${key.namespace || 'default'}:${key.key}`;\n  }\n\n  parse(keyString: string): CacheKey {\n    const parts = keyString.split(':');\n    return {\n      key: parts[1] || parts[0],\n      namespace: parts.length > 1 ? parts[0] : undefined,\n    };\n  }\n}\n\ndescribe('CacheManagerService', () => {\n  let service: CacheManagerService;\n  let mockEventEmitter: jest.Mocked<EventEmitter2>;\n  let mockLogger: jest.Mocked<PinoLoggerService>;\n  let mockKeyFactory: MockCacheKeyFactory;\n  let mockLayer1: MockCacheService;\n  let mockLayer2: MockCacheService;\n\n  const mockConfig: CacheManagerConfig = {\n    enabled: true,\n    defaultStrategy: CacheStrategy.LRU,\n    monitoringInterval: 1000,\n    cleanupInterval: 2000,\n    maxSize: 1000,\n    enableStats: true,\n    enableEvents: true,\n  };\n\n  beforeEach(async () => {\n    mockEventEmitter = {\n      emit: jest.fn(),\n    } as unknown;\n\n    mockLogger = {\n      info: jest.fn(),\n      error: jest.fn(),\n      warn: jest.fn(),\n      debug: jest.fn(),\n    } as unknown;\n\n    mockKeyFactory = new MockCacheKeyFactory();\n    mockLayer1 = new MockCacheService();\n    mockLayer2 = new MockCacheService();\n\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        CacheManagerService,\n        {\n          provide: 'CACHE_MANAGER_CONFIG',\n          useValue: mockConfig,\n        },\n        {\n          provide: 'ICacheKeyFactory',\n          useValue: mockKeyFactory,\n        },\n        {\n          provide: EventEmitter2,\n          useValue: mockEventEmitter,\n        },\n        {\n          provide: PinoLoggerService,\n          useValue: mockLogger,\n        },\n      ],\n    }).compile();\n\n    service = module.get<CacheManagerService>(CacheManagerService);\n  });\n\n  afterEach(() => {\n    service.onDestroy();\n  });\n\n  describe('basic operations', () => {\n    it('should be defined', () => {\n      expect(service).toBeDefined();\n    });\n\n    it('should add cache layer', () => {\n      const layerConfig: CacheLayerConfig = {\n        name: 'test-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      const result = service.addLayer(layerConfig);\n      expect(result).toBe(true);\n      expect(service.getLayers()).toHaveLength(1);\n    });\n\n    it('should remove cache layer', () => {\n      const layerConfig: CacheLayerConfig = {\n        name: 'test-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      service.addLayer(layerConfig);\n      const result = service.removeLayer('test-layer');\n      expect(result).toBe(true);\n      expect(service.getLayers()).toHaveLength(0);\n    });\n\n    it('should enable/disable cache layer', () => {\n      const layerConfig: CacheLayerConfig = {\n        name: 'test-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      service.addLayer(layerConfig);\n\n      const disableResult = service.enableLayer('test-layer', false);\n      expect(disableResult).toBe(true);\n\n      const enableResult = service.enableLayer('test-layer', true);\n      expect(enableResult).toBe(true);\n    });\n  });\n\n  describe('cache operations', () => {\n    beforeEach(() => {\n      const layer1Config: CacheLayerConfig = {\n        name: 'layer1',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      const layer2Config: CacheLayerConfig = {\n        name: 'layer2',\n        priority: 2,\n        service: mockLayer2,\n        enabled: true,\n      };\n\n      service.addLayer(layer1Config);\n      service.addLayer(layer2Config);\n    });\n\n    it('should get value from cache', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      await mockLayer1.set(key, value);\n      const result = await service.get(key);\n\n      expect(result).toEqual(value);\n    });\n\n    it('should return null for non-existent key', async () => {\n      const key = mockKeyFactory.createNamespace(\n        'test-namespace',\n        'non-existent',\n      );\n      const result = await service.get(key);\n\n      expect(result).toBeNull();\n    });\n\n    it('should set value in all layers', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      const result = await service.set(key, value);\n\n      expect(result).toBe(true);\n      expect(await mockLayer1.get(key)).toEqual(value);\n      expect(await mockLayer2.get(key)).toEqual(value);\n    });\n\n    it('should delete value from all layers', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      await service.set(key, value);\n      const deleteResult = await service.delete(key);\n\n      expect(deleteResult).toBe(true);\n      expect(await mockLayer1.get(key)).toBeNull();\n      expect(await mockLayer2.get(key)).toBeNull();\n    });\n\n    it('should check if key exists', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      await service.set(key, value);\n      const exists = await service.exists(key);\n\n      expect(exists).toBe(true);\n    });\n\n    it('should clear all layers', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      await service.set(key, value);\n      const clearResult = await service.clear();\n\n      expect(clearResult).toBe(true);\n      expect(await mockLayer1.get(key)).toBeNull();\n      expect(await mockLayer2.get(key)).toBeNull();\n    });\n  });\n\n  describe('statistics', () => {\n    beforeEach(() => {\n      const layerConfig: CacheLayerConfig = {\n        name: 'test-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      service.addLayer(layerConfig);\n    });\n\n    it('should get cache stats', async () => {\n      const stats = await service.getStats();\n\n      expect(stats).toBeDefined();\n      expect(stats.hits).toBeDefined();\n      expect(stats.misses).toBeDefined();\n      expect(stats.hitRate).toBeDefined();\n    });\n\n    it('should reset cache stats', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      await service.set(key, value);\n      await service.get(key);\n\n      await service.resetStats();\n\n      const stats = await service.getStats();\n      expect(stats.hits).toBe(0);\n      expect(stats.misses).toBe(0);\n    });\n  });\n\n  describe('health check', () => {\n    beforeEach(() => {\n      const layerConfig: CacheLayerConfig = {\n        name: 'test-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      service.addLayer(layerConfig);\n    });\n\n    it('should get cache health', async () => {\n      const health = await service.getHealth();\n\n      expect(health).toBeDefined();\n      expect(health.healthy).toBeDefined();\n      expect(health.connected).toBeDefined();\n      expect(health.responseTime).toBeDefined();\n    });\n  });\n\n  describe('layer management', () => {\n    it('should handle read-only layers', async () => {\n      const readOnlyLayer: CacheLayerConfig = {\n        name: 'readonly-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n        readOnly: true,\n      };\n\n      service.addLayer(readOnlyLayer);\n\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      // 只读层不应该被写入\n      const setResult = await service.set(key, value);\n      expect(setResult).toBe(false);\n    });\n\n    it('should handle disabled layers', async () => {\n      const disabledLayer: CacheLayerConfig = {\n        name: 'disabled-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: false,\n      };\n\n      service.addLayer(disabledLayer);\n\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      // 禁用的层不应该被访问\n      const getResult = await service.get(key);\n      expect(getResult).toBeNull();\n    });\n  });\n\n  describe('error handling', () => {\n    it('should handle layer errors gracefully', async () => {\n      const errorLayer = {\n        name: 'error-layer',\n        priority: 1,\n        service: {\n          get: jest.fn().mockRejectedValue(new Error('Layer error')),\n          set: jest.fn().mockRejectedValue(new Error('Layer error')),\n          delete: jest.fn().mockRejectedValue(new Error('Layer error')),\n          exists: jest.fn().mockRejectedValue(new Error('Layer error')),\n          clear: jest.fn().mockRejectedValue(new Error('Layer error')),\n          getStats: jest.fn().mockRejectedValue(new Error('Layer error')),\n          getHealth: jest.fn().mockRejectedValue(new Error('Layer error')),\n          resetStats: jest.fn().mockRejectedValue(new Error('Layer error')),\n        },\n        enabled: true,\n      } as unknown;\n\n      service.addLayer(errorLayer);\n\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      // 应该处理错误而不抛出异常\n      const getResult = await service.get(key);\n      expect(getResult).toBeNull();\n\n      const setResult = await service.set(key, value);\n      expect(setResult).toBe(false);\n    });\n  });\n\n  describe('event emission', () => {\n    beforeEach(() => {\n      const layerConfig: CacheLayerConfig = {\n        name: 'test-layer',\n        priority: 1,\n        service: mockLayer1,\n        enabled: true,\n      };\n\n      service.addLayer(layerConfig);\n    });\n\n    it('should emit cache events', async () => {\n      const key = mockKeyFactory.createNamespace('test-namespace', 'test-key');\n      const value = { data: 'test-value' };\n\n      await service.set(key, value);\n      await service.get(key);\n\n      expect(mockEventEmitter.emit).toHaveBeenCalledWith(\n        'cache.cache_set',\n        expect.objectContaining({\n          type: 'cache_set',\n          data: expect.objectContaining({ key, value }),\n        }),\n      );\n\n      expect(mockEventEmitter.emit).toHaveBeenCalledWith(\n        'cache.cache_hit',\n        expect.objectContaining({\n          type: 'cache_hit',\n          data: expect.objectContaining({ key, value }),\n        }),\n      );\n    });\n  });\n});\n"],"version":3}