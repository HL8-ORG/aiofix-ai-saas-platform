7e69de3d16d7114ee73df038cca25008
"use strict";
/**
 * @file database.module.spec.ts
 * @description 数据库模块测试
 */
Object.defineProperty(exports, "__esModule", { value: true });
const testing_1 = require("@nestjs/testing");
const database_module_1 = require("./database.module");
describe('DatabaseModule', () => {
    let module;
    beforeEach(async () => {
        module = await testing_1.Test.createTestingModule({
            imports: [
                database_module_1.DatabaseModule.register({
                    config: {
                        type: 'postgresql',
                        host: 'localhost',
                        port: 5432,
                        username: 'test',
                        password: 'test',
                        database: 'test',
                    },
                    postgresql: false, // 禁用PostgreSQL以避免连接测试
                }),
            ],
        })
            .overrideProvider('IDatabaseAdapter')
            .useValue({})
            .compile();
    });
    it('should be defined', () => {
        expect(module).toBeDefined();
    });
    it('should have database config provider', () => {
        const config = module.get('DATABASE_CONFIG');
        expect(config).toBeDefined();
        expect(config.type).toBe('postgresql');
    });
    it('should have database name provider', () => {
        const name = module.get('DATABASE_NAME');
        expect(name).toBeDefined();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvYXJsaWdsZS9WMS9BaW9maXgvYWlvZml4LWFpLXNhYXMtcGxhdGZvcm0vcGFja2FnZXMvZGF0YWJhc2Uvc3JjL2RhdGFiYXNlLm1vZHVsZS5zcGVjLnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7O0dBR0c7O0FBRUgsNkNBQXNEO0FBQ3RELHVEQUFtRDtBQUVuRCxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxFQUFFO0lBQzlCLElBQUksTUFBcUIsQ0FBQztJQUUxQixVQUFVLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDcEIsTUFBTSxHQUFHLE1BQU0sY0FBSSxDQUFDLG1CQUFtQixDQUFDO1lBQ3RDLE9BQU8sRUFBRTtnQkFDUCxnQ0FBYyxDQUFDLFFBQVEsQ0FBQztvQkFDdEIsTUFBTSxFQUFFO3dCQUNOLElBQUksRUFBRSxZQUFZO3dCQUNsQixJQUFJLEVBQUUsV0FBVzt3QkFDakIsSUFBSSxFQUFFLElBQUk7d0JBQ1YsUUFBUSxFQUFFLE1BQU07d0JBQ2hCLFFBQVEsRUFBRSxNQUFNO3dCQUNoQixRQUFRLEVBQUUsTUFBTTtxQkFDakI7b0JBQ0QsVUFBVSxFQUFFLEtBQUssRUFBRSxzQkFBc0I7aUJBQzFDLENBQUM7YUFDSDtTQUNGLENBQUM7YUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQzthQUNwQyxRQUFRLENBQUMsRUFBRSxDQUFDO2FBQ1osT0FBTyxFQUFFLENBQUM7SUFDZixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxHQUFHLEVBQUU7UUFDM0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQy9CLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHNDQUFzQyxFQUFFLEdBQUcsRUFBRTtRQUM5QyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDN0MsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzdCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3pDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLG9DQUFvQyxFQUFFLEdBQUcsRUFBRTtRQUM1QyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM3QixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL2FybGlnbGUvVjEvQWlvZml4L2Fpb2ZpeC1haS1zYWFzLXBsYXRmb3JtL3BhY2thZ2VzL2RhdGFiYXNlL3NyYy9kYXRhYmFzZS5tb2R1bGUuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIGRhdGFiYXNlLm1vZHVsZS5zcGVjLnRzXG4gKiBAZGVzY3JpcHRpb24g5pWw5o2u5bqT5qih5Z2X5rWL6K+VXG4gKi9cblxuaW1wb3J0IHsgVGVzdCwgVGVzdGluZ01vZHVsZSB9IGZyb20gJ0BuZXN0anMvdGVzdGluZyc7XG5pbXBvcnQgeyBEYXRhYmFzZU1vZHVsZSB9IGZyb20gJy4vZGF0YWJhc2UubW9kdWxlJztcblxuZGVzY3JpYmUoJ0RhdGFiYXNlTW9kdWxlJywgKCkgPT4ge1xuICBsZXQgbW9kdWxlOiBUZXN0aW5nTW9kdWxlO1xuXG4gIGJlZm9yZUVhY2goYXN5bmMgKCkgPT4ge1xuICAgIG1vZHVsZSA9IGF3YWl0IFRlc3QuY3JlYXRlVGVzdGluZ01vZHVsZSh7XG4gICAgICBpbXBvcnRzOiBbXG4gICAgICAgIERhdGFiYXNlTW9kdWxlLnJlZ2lzdGVyKHtcbiAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgIHR5cGU6ICdwb3N0Z3Jlc3FsJyxcbiAgICAgICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgICAgICAgICAgcG9ydDogNTQzMixcbiAgICAgICAgICAgIHVzZXJuYW1lOiAndGVzdCcsXG4gICAgICAgICAgICBwYXNzd29yZDogJ3Rlc3QnLFxuICAgICAgICAgICAgZGF0YWJhc2U6ICd0ZXN0JyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHBvc3RncmVzcWw6IGZhbHNlLCAvLyDnpoHnlKhQb3N0Z3JlU1FM5Lul6YG/5YWN6L+e5o6l5rWL6K+VXG4gICAgICAgIH0pLFxuICAgICAgXSxcbiAgICB9KVxuICAgICAgLm92ZXJyaWRlUHJvdmlkZXIoJ0lEYXRhYmFzZUFkYXB0ZXInKVxuICAgICAgLnVzZVZhbHVlKHt9KVxuICAgICAgLmNvbXBpbGUoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBiZSBkZWZpbmVkJywgKCkgPT4ge1xuICAgIGV4cGVjdChtb2R1bGUpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGF2ZSBkYXRhYmFzZSBjb25maWcgcHJvdmlkZXInLCAoKSA9PiB7XG4gICAgY29uc3QgY29uZmlnID0gbW9kdWxlLmdldCgnREFUQUJBU0VfQ09ORklHJyk7XG4gICAgZXhwZWN0KGNvbmZpZykudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QoY29uZmlnLnR5cGUpLnRvQmUoJ3Bvc3RncmVzcWwnKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBoYXZlIGRhdGFiYXNlIG5hbWUgcHJvdmlkZXInLCAoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IG1vZHVsZS5nZXQoJ0RBVEFCQVNFX05BTUUnKTtcbiAgICBleHBlY3QobmFtZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==