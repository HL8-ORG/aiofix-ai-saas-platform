{"file":"/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/database.module.spec.ts","mappings":";AAAA;;;GAGG;;AAEH,6CAAsD;AACtD,uDAAmD;AAEnD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,MAAqB,CAAC;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,GAAG,MAAM,cAAI,CAAC,mBAAmB,CAAC;YACtC,OAAO,EAAE;gBACP,gCAAc,CAAC,QAAQ,CAAC;oBACtB,MAAM,EAAE;wBACN,IAAI,EAAE,YAAY;wBAClB,IAAI,EAAE,WAAW;wBACjB,IAAI,EAAE,IAAI;wBACV,QAAQ,EAAE,MAAM;wBAChB,QAAQ,EAAE,MAAM;wBAChB,QAAQ,EAAE,MAAM;qBACjB;oBACD,UAAU,EAAE,KAAK,EAAE,sBAAsB;iBAC1C,CAAC;aACH;SACF,CAAC;aACC,gBAAgB,CAAC,kBAAkB,CAAC;aACpC,QAAQ,CAAC,EAAE,CAAC;aACZ,OAAO,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/database.module.spec.ts"],"sourcesContent":["/**\n * @file database.module.spec.ts\n * @description 数据库模块测试\n */\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { DatabaseModule } from './database.module';\n\ndescribe('DatabaseModule', () => {\n  let module: TestingModule;\n\n  beforeEach(async () => {\n    module = await Test.createTestingModule({\n      imports: [\n        DatabaseModule.register({\n          config: {\n            type: 'postgresql',\n            host: 'localhost',\n            port: 5432,\n            username: 'test',\n            password: 'test',\n            database: 'test',\n          },\n          postgresql: false, // 禁用PostgreSQL以避免连接测试\n        }),\n      ],\n    })\n      .overrideProvider('IDatabaseAdapter')\n      .useValue({})\n      .compile();\n  });\n\n  it('should be defined', () => {\n    expect(module).toBeDefined();\n  });\n\n  it('should have database config provider', () => {\n    const config = module.get('DATABASE_CONFIG');\n    expect(config).toBeDefined();\n    expect(config.type).toBe('postgresql');\n  });\n\n  it('should have database name provider', () => {\n    const name = module.get('DATABASE_NAME');\n    expect(name).toBeDefined();\n  });\n});\n"],"version":3}