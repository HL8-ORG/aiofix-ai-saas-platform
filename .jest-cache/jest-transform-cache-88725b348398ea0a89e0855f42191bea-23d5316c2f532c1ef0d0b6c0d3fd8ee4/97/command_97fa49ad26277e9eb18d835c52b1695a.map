{"version":3,"names":["uuid_1","cov_clxtks3v1","s","require","Command","constructor","f","commandId","v4","timestamp","Date","commandType","name","validateCommand","b","trim","length","Error","isNaN","getTime","getBaseCommandData","toISOString","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/application/commands/command.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\n/**\n * @class Command\n * @description\n * 命令基类，封装用户创建操作的输入参数和验证规则。\n *\n * 命令职责：\n * 1. 封装业务操作所需的所有输入参数\n * 2. 提供数据验证和格式检查\n * 3. 确保命令的不可变性和幂等性\n * 4. 支持命令的序列化和反序列化\n *\n * 数据隔离要求：\n * 1. 命令必须包含租户ID以确保数据隔离\n * 2. 验证用户权限和业务规则\n * 3. 确保命令执行者具有相应权限\n *\n * CQRS特性：\n * 1. 表示用户的意图或业务操作\n * 2. 是不可变的，一旦创建就不能修改\n * 3. 包含执行操作所需的所有数据\n * 4. 具有唯一标识符和时间戳\n *\n * @property {string} commandId 命令的唯一标识符\n * @property {Date} timestamp 命令创建的时间戳\n * @property {string} commandType 命令的类型名称\n *\n * @example\n * ```typescript\n * class CreateUserCommand extends Command {\n *   constructor(\n *     public readonly email: string,\n *     public readonly password: string,\n *     public readonly tenantId: string\n *   ) {\n *     super();\n *     this.validate();\n *   }\n *\n *   private validate(): void {\n *     if (!this.email?.includes('@')) {\n *       throw new Error('Invalid email format');\n *     }\n *   }\n *\n *   toJSON(): any {\n *     return {\n *       ...this.getBaseCommandData(),\n *       email: this.email,\n *       password: this.password,\n *       tenantId: this.tenantId\n *     };\n *   }\n * }\n * ```\n * @abstract\n * @since 1.0.0\n */\nexport abstract class Command {\n  /**\n   * 命令的唯一标识符\n   * 使用UUID确保全局唯一性\n   */\n  public readonly commandId: string;\n\n  /**\n   * 命令创建的时间戳\n   * 记录命令创建的时间\n   */\n  public readonly timestamp: Date;\n\n  /**\n   * 命令的类型名称\n   * 使用构造函数名称作为命令类型\n   */\n  public readonly commandType: string;\n\n  /**\n   * 构造函数\n   *\n   * 初始化命令的基本属性，包括唯一标识符、时间戳和类型名称。\n   */\n  constructor() {\n    this.commandId = uuidv4();\n    this.timestamp = new Date();\n    this.commandType = this.constructor.name;\n  }\n\n  /**\n   * 验证命令数据的有效性\n   *\n   * 子类可以重写此方法，添加特定的命令数据验证逻辑。\n   * 基类提供基本的验证，确保命令的基本属性有效。\n   *\n   * @throws {Error} 当命令数据无效时抛出错误\n   */\n  protected validateCommand(): void {\n    if (!this.commandId || this.commandId.trim().length === 0) {\n      throw new Error('命令ID不能为空');\n    }\n\n    if (!this.timestamp || isNaN(this.timestamp.getTime())) {\n      throw new Error('命令时间戳无效');\n    }\n\n    if (!this.commandType || this.commandType.trim().length === 0) {\n      throw new Error('命令类型不能为空');\n    }\n  }\n\n  /**\n   * 获取命令的基本信息\n   *\n   * @returns {object} 包含命令基本信息的对象\n   */\n  protected getBaseCommandData(): object {\n    return {\n      commandId: this.commandId,\n      timestamp: this.timestamp.toISOString(),\n      commandType: this.commandType,\n    };\n  }\n\n  /**\n   * 将命令转换为JSON格式\n   *\n   * 子类应该重写此方法，提供具体的命令数据序列化。\n   * 基类提供默认实现，包含命令的基本属性。\n   *\n   * @returns {any} 命令的JSON表示\n   */\n  abstract toJSON(): any;\n}\n"],"mappingsaAAA,GAAAC,CAAA,OAAAC,OAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,MAAsBC,OAAO;EAmB3B;;;;;EAKAC,YAAA;IAAA;IAAAJ,aAAA,GAAAK,CAAA;IAAAL,aAAA,GAAAC,CAAA;IACE,IAAI,CAACK,SAAS,GAAG,IAAAP,MAAA,CAAAQ,EAAM,GAAE;IAAC;IAAAP,aAAA,GAAAC,CAAA;IAC1B,IAAI,CAACO,SAAS,GAAG,IAAIC,IAAI,EAAE;IAAC;IAAAT,aAAA,GAAAC,CAAA;IAC5B,IAAI,CAACS,WAAW,GAAG,IAAI,CAACN,WAAW,CAACO,IAAI;EAC1C;EAEA;;;;;;;;EAQUC,eAAeA,CAAA;IAAA;IAAAZ,aAAA,GAAAK,CAAA;IAAAL,aAAA,GAAAC,CAAA;IACvB;IAAI;IAAA,CAAAD,aAAA,GAAAa,CAAA,WAAC,IAAI,CAACP,SAAS;IAAA;IAAA,CAAAN,aAAA,GAAAa,CAAA,UAAI,IAAI,CAACP,SAAS,CAACQ,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,GAAE;MAAA;MAAAf,aAAA,GAAAa,CAAA;MAAAb,aAAA,GAAAC,CAAA;MACzD,MAAM,IAAIe,KAAK,CAAC,UAAU,CAAC;IAC7B,CAAC;IAAA;IAAA;MAAAhB,aAAA,GAAAa,CAAA;IAAA;IAAAb,aAAA,GAAAC,CAAA;IAED;IAAI;IAAA,CAAAD,aAAA,GAAAa,CAAA,WAAC,IAAI,CAACL,SAAS;IAAA;IAAA,CAAAR,aAAA,GAAAa,CAAA,UAAII,KAAK,CAAC,IAAI,CAACT,SAAS,CAACU,OAAO,EAAE,CAAC,GAAE;MAAA;MAAAlB,aAAA,GAAAa,CAAA;MAAAb,aAAA,GAAAC,CAAA;MACtD,MAAM,IAAIe,KAAK,CAAC,SAAS,CAAC;IAC5B,CAAC;IAAA;IAAA;MAAAhB,aAAA,GAAAa,CAAA;IAAA;IAAAb,aAAA,GAAAC,CAAA;IAED;IAAI;IAAA,CAAAD,aAAA,GAAAa,CAAA,WAAC,IAAI,CAACH,WAAW;IAAA;IAAA,CAAAV,aAAA,GAAAa,CAAA,UAAI,IAAI,CAACH,WAAW,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,GAAE;MAAA;MAAAf,aAAA,GAAAa,CAAA;MAAAb,aAAA,GAAAC,CAAA;MAC7D,MAAM,IAAIe,KAAK,CAAC,UAAU,CAAC;IAC7B,CAAC;IAAA;IAAA;MAAAhB,aAAA,GAAAa,CAAA;IAAA;EACH;EAEA;;;;;EAKUM,kBAAkBA,CAAA;IAAA;IAAAnB,aAAA,GAAAK,CAAA;IAAAL,aAAA,GAAAC,CAAA;IAC1B,OAAO;MACLK,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBE,SAAS,EAAE,IAAI,CAACA,SAAS,CAACY,WAAW,EAAE;MACvCV,WAAW,EAAE,IAAI,CAACA;KACnB;EACH;;AAWD;AAAAV,aAAA,GAAAC,CAAA;AA1EDoB,OAAA,CAAAlB,OAAA,GAAAA,OAAA","ignoreList":[]}