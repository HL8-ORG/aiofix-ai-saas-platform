{"version":3,"names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/interfaces/data-isolation.interface.ts"],"sourcesContent":["import { ISOLATION_LEVELS } from '@aiofix/common';\n\n/**\n * 数据隔离级别类型\n *\n * 定义多租户数据隔离的五个层级。\n */\nexport type IsolationLevel =\n  (typeof ISOLATION_LEVELS)[keyof typeof ISOLATION_LEVELS];\n\n/**\n * 数据隔离上下文接口\n *\n * 定义用户的数据隔离上下文，包含用户在各个层级的身份信息。\n * 用于确定用户的数据访问权限和范围。\n *\n * @interface DataIsolationContext\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface DataIsolationContext {\n  /**\n   * 平台ID（可选）\n   * 平台级用户必须提供\n   */\n  platformId?: string;\n\n  /**\n   * 租户ID（可选）\n   * 租户级用户必须提供\n   */\n  tenantId?: string;\n\n  /**\n   * 组织ID（可选）\n   * 组织级用户必须提供\n   */\n  organizationId?: string;\n\n  /**\n   * 部门ID（可选）\n   * 部门级用户必须提供\n   */\n  departmentId?: string;\n\n  /**\n   * 用户ID（必需）\n   * 所有用户都必须提供\n   */\n  userId: string;\n\n  /**\n   * 用户的隔离级别\n   * 确定用户的数据访问范围\n   */\n  isolationLevel: IsolationLevel;\n\n  /**\n   * 用户的权限列表\n   * 包含用户具有的所有权限\n   */\n  permissions: string[];\n\n  /**\n   * 用户的角色列表\n   * 包含用户具有的所有角色\n   */\n  roles: string[];\n\n  /**\n   * 上下文创建时间\n   */\n  createdAt: Date;\n\n  /**\n   * 上下文过期时间\n   */\n  expiresAt?: Date;\n}\n\n/**\n * 数据分类接口\n *\n * 定义数据的分类信息，用于确定数据的访问策略。\n *\n * @interface DataClassification\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface DataClassification {\n  /**\n   * 数据ID\n   */\n  dataId: string;\n\n  /**\n   * 数据分类类型\n   */\n  classification: 'shareable' | 'protected';\n\n  /**\n   * 数据所有者层级\n   */\n  ownerLevel: IsolationLevel;\n\n  /**\n   * 数据所有者ID\n   */\n  ownerId: string;\n\n  /**\n   * 可共享的范围\n   * 定义数据可以被哪些层级访问\n   */\n  shareableScopes: IsolationLevel[];\n\n  /**\n   * 受保护的范围\n   * 定义数据被保护的范围\n   */\n  protectedScopes: IsolationLevel[];\n\n  /**\n   * 数据访问权限\n   */\n  accessPermissions: {\n    read: string[];\n    write: string[];\n    delete: string[];\n    share: string[];\n  };\n\n  /**\n   * 数据创建时间\n   */\n  createdAt: Date;\n\n  /**\n   * 数据更新时间\n   */\n  updatedAt: Date;\n}\n\n/**\n * 数据访问权限接口\n *\n * 定义数据访问的权限级别。\n *\n * @interface DataAccessPermission\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface DataAccessPermission {\n  /**\n   * 权限级别\n   */\n  level: 'read' | 'write' | 'delete' | 'share';\n\n  /**\n   * 权限描述\n   */\n  description: string;\n\n  /**\n   * 权限范围\n   */\n  scope: IsolationLevel[];\n\n  /**\n   * 权限条件\n   */\n  conditions?: {\n    /**\n     * 时间限制\n     */\n    timeLimit?: {\n      start: Date;\n      end: Date;\n    };\n\n    /**\n     * 次数限制\n     */\n    countLimit?: number;\n\n    /**\n     * IP限制\n     */\n    ipWhitelist?: string[];\n\n    /**\n     * 其他条件\n     */\n    [key: string]: unknown;\n  };\n}\n\n/**\n * 数据隔离策略接口\n *\n * 定义数据隔离的策略配置。\n *\n * @interface DataIsolationPolicy\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface DataIsolationPolicy {\n  /**\n   * 策略ID\n   */\n  policyId: string;\n\n  /**\n   * 策略名称\n   */\n  name: string;\n\n  /**\n   * 策略描述\n   */\n  description: string;\n\n  /**\n   * 策略类型\n   */\n  type: 'default' | 'custom' | 'inherited';\n\n  /**\n   * 适用的隔离级别\n   */\n  applicableLevels: IsolationLevel[];\n\n  /**\n   * 数据分类规则\n   */\n  classificationRules: {\n    /**\n     * 默认分类\n     */\n    defaultClassification: 'shareable' | 'protected';\n\n    /**\n     * 分类条件\n     */\n    conditions: {\n      field: string;\n      operator: 'eq' | 'ne' | 'in' | 'nin' | 'contains';\n      value: unknown;\n      classification: 'shareable' | 'protected';\n    }[];\n  };\n\n  /**\n   * 访问控制规则\n   */\n  accessControlRules: {\n    /**\n     * 允许的访问级别\n     */\n    allowedLevels: IsolationLevel[];\n\n    /**\n     * 禁止的访问级别\n     */\n    forbiddenLevels: IsolationLevel[];\n\n    /**\n     * 特殊权限\n     */\n    specialPermissions: {\n      level: IsolationLevel;\n      permissions: string[];\n    }[];\n  };\n\n  /**\n   * 策略生效时间\n   */\n  effectiveFrom: Date;\n\n  /**\n   * 策略失效时间\n   */\n  effectiveTo?: Date;\n\n  /**\n   * 策略状态\n   */\n  status: 'active' | 'inactive' | 'draft';\n}\n\n/**\n * 数据隔离服务接口\n *\n * 定义数据隔离服务的核心功能。\n *\n * @interface IDataIsolationService\n * @author AI开发团队\n * @since 1.0.0\n */\nexport interface IDataIsolationService {\n  /**\n   * 获取用户的数据隔离上下文\n   *\n   * @param {string} userId - 用户ID\n   * @returns {Promise<DataIsolationContext>} 数据隔离上下文\n   */\n  getDataIsolationContext(userId: string): Promise<DataIsolationContext>;\n\n  /**\n   * 检查数据访问权限\n   *\n   * @param {string} dataId - 数据ID\n   * @param {DataIsolationContext} context - 用户上下文\n   * @param {string} permission - 权限类型\n   * @returns {Promise<boolean>} 是否有权限\n   */\n  checkDataAccess(\n    dataId: string,\n    context: DataIsolationContext,\n    permission: string,\n  ): Promise<boolean>;\n\n  /**\n   * 应用数据隔离过滤器\n   *\n   * @param {Record<string, unknown>} query - 查询对象\n   * @param {DataIsolationContext} context - 用户上下文\n   * @returns {Record<string, unknown>} 过滤后的查询对象\n   */\n  applyDataIsolation(\n    query: Record<string, unknown>,\n    context: DataIsolationContext,\n  ): Record<string, unknown>;\n\n  /**\n   * 获取数据分类信息\n   *\n   * @param {string} dataId - 数据ID\n   * @returns {Promise<DataClassification | null>} 数据分类信息\n   */\n  getDataClassification(dataId: string): Promise<DataClassification | null>;\n\n  /**\n   * 设置数据分类\n   *\n   * @param {string} dataId - 数据ID\n   * @param {Partial<DataClassification>} classification - 分类信息\n   * @returns {Promise<void>}\n   */\n  setDataClassification(\n    dataId: string,\n    classification: Partial<DataClassification>,\n  ): Promise<void>;\n\n  /**\n   * 获取数据隔离策略\n   *\n   * @param {IsolationLevel} level - 隔离级别\n   * @returns {Promise<DataIsolationPolicy | null>} 隔离策略\n   */\n  getIsolationPolicy(\n    level: IsolationLevel,\n  ): Promise<DataIsolationPolicy | null>;\n\n  /**\n   * 验证数据隔离合规性\n   *\n   * @param {string} dataId - 数据ID\n   * @param {DataIsolationContext} context - 用户上下文\n   * @returns {Promise<boolean>} 是否合规\n   */\n  validateDataIsolationCompliance(\n    dataId: string,\n    context: DataIsolationContext,\n  ): Promise<boolean>;\n}\n"],"mappings":"","ignoreList":[]}