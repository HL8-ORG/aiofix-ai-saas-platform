{"version":3,"names":["config_1","cov_2c9u919po1","s","require","exports","default","registerAs","f","secret","accessToken","b","process","env","JWT_ACCESS_TOKEN_SECRET","refreshToken","JWT_REFRESH_TOKEN_SECRET","resetPassword","JWT_RESET_PASSWORD_SECRET","emailVerification","JWT_EMAIL_VERIFICATION_SECRET","expiresIn","parseInt","JWT_ACCESS_TOKEN_EXPIRES_IN","algorithm","JWT_ACCESS_TOKEN_ALGORITHM","issuer","JWT_ISSUER","audience","JWT_AUDIENCE","JWT_REFRESH_TOKEN_EXPIRES_IN","JWT_REFRESH_TOKEN_ALGORITHM","JWT_RESET_PASSWORD_EXPIRES_IN","JWT_RESET_PASSWORD_ALGORITHM","JWT_EMAIL_VERIFICATION_EXPIRES_IN","JWT_EMAIL_VERIFICATION_ALGORITHM","multiTenant","enabled","JWT_MULTI_TENANT_ENABLED","tenantIdField","JWT_TENANT_ID_FIELD","organizationIdField","JWT_ORGANIZATION_ID_FIELD","departmentIdField","JWT_DEPARTMENT_ID_FIELD","security","blacklistEnabled","JWT_BLACKLIST_ENABLED","blacklistTtl","JWT_BLACKLIST_TTL","rotationEnabled","JWT_ROTATION_ENABLED","rotationThreshold","JWT_ROTATION_THRESHOLD","cache","JWT_CACHE_ENABLED","ttl","JWT_CACHE_TTL","prefix","JWT_CACHE_PREFIX"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/config/jwt.ts"],"sourcesContent":["import { registerAs } from '@nestjs/config';\n\n/**\n * JWT Configuration\n *\n * JWT认证配置模块，定义IAM系统的JWT令牌策略和安全参数。\n * 支持访问令牌、刷新令牌、多租户令牌等功能。\n *\n * 主要原理与机制如下：\n * 1. 使用@nestjs/config的registerAs创建命名空间配置\n * 2. 从环境变量读取JWT安全参数\n * 3. 提供默认值确保配置的完整性\n * 4. 支持多环境的安全策略\n *\n * 功能与业务规则：\n * 1. JWT密钥配置\n * 2. 令牌过期时间配置\n * 3. 令牌刷新策略\n * 4. 多租户令牌支持\n *\n * @returns JWT配置对象\n */\nexport default registerAs('jwt', () => ({\n  /**\n   * JWT密钥配置\n   */\n  secret: {\n    /**\n     * 访问令牌密钥\n     */\n    accessToken:\n      process.env.JWT_ACCESS_TOKEN_SECRET ||\n      'your-super-secret-access-token-key',\n\n    /**\n     * 刷新令牌密钥\n     */\n    refreshToken:\n      process.env.JWT_REFRESH_TOKEN_SECRET ||\n      'your-super-secret-refresh-token-key',\n\n    /**\n     * 重置密码令牌密钥\n     */\n    resetPassword:\n      process.env.JWT_RESET_PASSWORD_SECRET ||\n      'your-super-secret-reset-password-key',\n\n    /**\n     * 邮箱验证令牌密钥\n     */\n    emailVerification:\n      process.env.JWT_EMAIL_VERIFICATION_SECRET ||\n      'your-super-secret-email-verification-key',\n  },\n\n  /**\n   * 访问令牌配置\n   */\n  accessToken: {\n    /**\n     * 过期时间（秒）\n     */\n    expiresIn: parseInt(process.env.JWT_ACCESS_TOKEN_EXPIRES_IN || '3600', 10), // 1小时\n\n    /**\n     * 算法\n     */\n    algorithm: process.env.JWT_ACCESS_TOKEN_ALGORITHM || 'HS256',\n\n    /**\n     * 发行者\n     */\n    issuer: process.env.JWT_ISSUER || 'aiofix-iam',\n\n    /**\n     * 受众\n     */\n    audience: process.env.JWT_AUDIENCE || 'aiofix-users',\n  },\n\n  /**\n   * 刷新令牌配置\n   */\n  refreshToken: {\n    /**\n     * 过期时间（秒）\n     */\n    expiresIn: parseInt(\n      process.env.JWT_REFRESH_TOKEN_EXPIRES_IN || '2592000',\n      10,\n    ), // 30天\n\n    /**\n     * 算法\n     */\n    algorithm: process.env.JWT_REFRESH_TOKEN_ALGORITHM || 'HS256',\n\n    /**\n     * 发行者\n     */\n    issuer: process.env.JWT_ISSUER || 'aiofix-iam',\n\n    /**\n     * 受众\n     */\n    audience: process.env.JWT_AUDIENCE || 'aiofix-users',\n  },\n\n  /**\n   * 重置密码令牌配置\n   */\n  resetPassword: {\n    /**\n     * 过期时间（秒）\n     */\n    expiresIn: parseInt(\n      process.env.JWT_RESET_PASSWORD_EXPIRES_IN || '3600',\n      10,\n    ), // 1小时\n\n    /**\n     * 算法\n     */\n    algorithm: process.env.JWT_RESET_PASSWORD_ALGORITHM || 'HS256',\n  },\n\n  /**\n   * 邮箱验证令牌配置\n   */\n  emailVerification: {\n    /**\n     * 过期时间（秒）\n     */\n    expiresIn: parseInt(\n      process.env.JWT_EMAIL_VERIFICATION_EXPIRES_IN || '86400',\n      10,\n    ), // 24小时\n\n    /**\n     * 算法\n     */\n    algorithm: process.env.JWT_EMAIL_VERIFICATION_ALGORITHM || 'HS256',\n  },\n\n  /**\n   * 多租户配置\n   */\n  multiTenant: {\n    /**\n     * 是否启用多租户令牌\n     */\n    enabled: process.env.JWT_MULTI_TENANT_ENABLED !== 'false',\n\n    /**\n     * 租户ID字段名\n     */\n    tenantIdField: process.env.JWT_TENANT_ID_FIELD || 'tenantId',\n\n    /**\n     * 组织ID字段名\n     */\n    organizationIdField:\n      process.env.JWT_ORGANIZATION_ID_FIELD || 'organizationId',\n\n    /**\n     * 部门ID字段名\n     */\n    departmentIdField: process.env.JWT_DEPARTMENT_ID_FIELD || 'departmentId',\n  },\n\n  /**\n   * 安全配置\n   */\n  security: {\n    /**\n     * 是否启用令牌黑名单\n     */\n    blacklistEnabled: process.env.JWT_BLACKLIST_ENABLED !== 'false',\n\n    /**\n     * 黑名单TTL（秒）\n     */\n    blacklistTtl: parseInt(process.env.JWT_BLACKLIST_TTL || '86400', 10), // 24小时\n\n    /**\n     * 是否启用令牌轮换\n     */\n    rotationEnabled: process.env.JWT_ROTATION_ENABLED !== 'false',\n\n    /**\n     * 轮换阈值（秒）\n     */\n    rotationThreshold: parseInt(\n      process.env.JWT_ROTATION_THRESHOLD || '300',\n      10,\n    ), // 5分钟\n  },\n\n  /**\n   * 缓存配置\n   */\n  cache: {\n    /**\n     * 是否启用令牌缓存\n     */\n    enabled: process.env.JWT_CACHE_ENABLED !== 'false',\n\n    /**\n     * 缓存TTL（秒）\n     */\n    ttl: parseInt(process.env.JWT_CACHE_TTL || '300', 10), // 5分钟\n\n    /**\n     * 缓存前缀\n     */\n    prefix: process.env.JWT_CACHE_PREFIX || 'jwt:',\n  },\n}));\n"],"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","ignoreList":[]}