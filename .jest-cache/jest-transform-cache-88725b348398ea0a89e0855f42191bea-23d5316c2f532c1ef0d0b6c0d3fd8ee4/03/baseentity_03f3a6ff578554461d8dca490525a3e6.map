{"version":3,"names":["BaseEntity","constructor","createdBy","cov_2lyqz1fzdb","b","f","now","s","Date","createdAt","_updatedAt","_updatedBy","_version","_isDeleted","updateAuditInfo","updatedBy","softDelete","deletedBy","InvalidOperationError","_deletedAt","_deletedBy","restore","undefined","isDeleted","getUpdatedAt","getUpdatedBy","getVersion","getDeletedAt","getDeletedBy","getCreatedBy","getCreatedAt","getAuditInfo","updatedAt","version","deletedAt","validateAuditState","InvalidAuditStateError","validate","isValid","_error","equals","other","clone","Error","toJSON","toISOString","toString","name","getEntityType","exports","message","ValidationError"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/core/src/domain/base/base-entity.ts"],"sourcesContent":["/**\n * @class BaseEntity\n * @description\n * 领域实体基础类，提供通用的实体功能和审计能力。\n *\n * 通用功能：\n * 1. 审计追踪：创建、更新、删除的完整审计记录\n * 2. 版本控制：乐观锁支持，防止并发冲突\n * 3. 软删除：支持数据恢复和删除审计\n * 4. 状态管理：提供实体的生命周期管理\n * 5. 验证支持：提供实体验证的基础框架\n * 6. 事件支持：为领域事件提供基础支持\n *\n * 设计原则：\n * 1. 所有领域实体都应该继承此类\n * 2. 提供统一的实体接口和行为\n * 3. 支持多租户数据隔离\n * 4. 确保数据的完整性和一致性\n * 5. 为未来的扩展需求预留接口\n *\n * @property {Date} createdAt 创建时间\n * @property {string} createdBy 创建者ID\n * @property {Date} updatedAt 最后更新时间\n * @property {string} updatedBy 最后更新者ID\n * @property {number} version 数据版本号（乐观锁）\n * @property {boolean} isDeleted 软删除标记\n * @property {Date} deletedAt 删除时间\n * @property {string} deletedBy 删除者ID\n *\n * @example\n * ```typescript\n * export class InAppNotifEntity extends BaseEntity {\n *   constructor(\n *     public readonly id: NotifId,\n *     public readonly tenantId: TenantId,\n *     // ... 其他业务属性\n *     createdBy?: string\n *   ) {\n *     super(createdBy);\n *   }\n * }\n * ```\n * @since 1.0.0\n */\nexport abstract class BaseEntity {\n  public readonly createdAt: Date;\n  public readonly createdBy: string;\n  private _updatedAt: Date;\n  private _updatedBy: string;\n  private _version: number;\n  private _isDeleted: boolean;\n  private _deletedAt?: Date;\n  private _deletedBy?: string;\n\n  constructor(createdBy: string = 'system') {\n    const now = new Date();\n    this.createdAt = now;\n    this.createdBy = createdBy;\n    this._updatedAt = now;\n    this._updatedBy = createdBy;\n    this._version = 1;\n    this._isDeleted = false;\n  }\n\n  /**\n   * @method updateAuditInfo\n   * @description 更新审计信息\n   * @param {string} updatedBy 更新者ID\n   * @returns {void}\n   * @protected\n   */\n  protected updateAuditInfo(updatedBy: string): void {\n    this._updatedAt = new Date();\n    this._updatedBy = updatedBy;\n    this._version += 1;\n  }\n\n  /**\n   * @method softDelete\n   * @description 软删除实体\n   * @param {string} deletedBy 删除者ID\n   * @returns {void}\n   * @throws {InvalidOperationError} 当实体已被删除时抛出\n   */\n  public softDelete(deletedBy: string = 'system'): void {\n    if (this._isDeleted) {\n      throw new InvalidOperationError('Entity is already deleted');\n    }\n\n    this._isDeleted = true;\n    this._deletedAt = new Date();\n    this._deletedBy = deletedBy;\n    this.updateAuditInfo(deletedBy);\n  }\n\n  /**\n   * @method restore\n   * @description 恢复已删除的实体\n   * @param {string} updatedBy 恢复者ID\n   * @returns {void}\n   * @throws {InvalidOperationError} 当实体未被删除时抛出\n   */\n  public restore(updatedBy: string = 'system'): void {\n    if (!this._isDeleted) {\n      throw new InvalidOperationError('Entity is not deleted');\n    }\n\n    this._isDeleted = false;\n    this._deletedAt = undefined;\n    this._deletedBy = undefined;\n    this.updateAuditInfo(updatedBy);\n  }\n\n  /**\n   * @method isDeleted\n   * @description 检查实体是否已被删除\n   * @returns {boolean} 是否已被删除\n   */\n  public isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  /**\n   * @method getUpdatedAt\n   * @description 获取最后更新时间\n   * @returns {Date} 最后更新时间\n   */\n  public getUpdatedAt(): Date {\n    return this._updatedAt;\n  }\n\n  /**\n   * @method getUpdatedBy\n   * @description 获取最后更新者ID\n   * @returns {string} 最后更新者ID\n   */\n  public getUpdatedBy(): string {\n    return this._updatedBy;\n  }\n\n  /**\n   * @method getVersion\n   * @description 获取数据版本号\n   * @returns {number} 数据版本号\n   */\n  public getVersion(): number {\n    return this._version;\n  }\n\n  /**\n   * @method getDeletedAt\n   * @description 获取删除时间\n   * @returns {Date | undefined} 删除时间\n   */\n  public getDeletedAt(): Date | undefined {\n    return this._deletedAt;\n  }\n\n  /**\n   * @method getDeletedBy\n   * @description 获取删除者ID\n   * @returns {string | undefined} 删除者ID\n   */\n  public getDeletedBy(): string | undefined {\n    return this._deletedBy;\n  }\n\n  /**\n   * @method getCreatedBy\n   * @description 获取创建者ID\n   * @returns {string} 创建者ID\n   */\n  public getCreatedBy(): string {\n    return this.createdBy;\n  }\n\n  /**\n   * @method getCreatedAt\n   * @description 获取创建时间\n   * @returns {Date} 创建时间\n   */\n  public getCreatedAt(): Date {\n    return this.createdAt;\n  }\n\n  /**\n   * @method getAuditInfo\n   * @description 获取完整的审计信息\n   * @returns {AuditInfo} 审计信息对象\n   */\n  public getAuditInfo(): AuditInfo {\n    return {\n      createdAt: this.createdAt,\n      createdBy: this.createdBy,\n      updatedAt: this._updatedAt,\n      updatedBy: this._updatedBy,\n      version: this._version,\n      isDeleted: this._isDeleted,\n      deletedAt: this._deletedAt,\n      deletedBy: this._deletedBy,\n    };\n  }\n\n  /**\n   * @method validateAuditState\n   * @description 验证审计状态的有效性\n   * @returns {void}\n   * @throws {InvalidAuditStateError} 当审计状态无效时抛出\n   * @protected\n   */\n  protected validateAuditState(): void {\n    if (!this.createdBy) {\n      throw new InvalidAuditStateError('Created by is required');\n    }\n\n    if (!this._updatedBy) {\n      throw new InvalidAuditStateError('Updated by is required');\n    }\n\n    if (this._version < 1) {\n      throw new InvalidAuditStateError('Version must be greater than 0');\n    }\n\n    if (this._isDeleted && !this._deletedAt) {\n      throw new InvalidAuditStateError(\n        'Deleted date is required when entity is deleted',\n      );\n    }\n\n    if (this._isDeleted && !this._deletedBy) {\n      throw new InvalidAuditStateError(\n        'Deleted by is required when entity is deleted',\n      );\n    }\n  }\n\n  /**\n   * @method validate\n   * @description 验证实体的有效性，子类可以重写此方法\n   * @returns {void}\n   * @throws {ValidationError} 当实体无效时抛出\n   * @protected\n   */\n  protected validate(): void {\n    this.validateAuditState();\n    // 子类可以重写此方法添加特定的验证逻辑\n  }\n\n  /**\n   * @method isValid\n   * @description 检查实体是否有效\n   * @returns {boolean} 是否有效\n   */\n  public isValid(): boolean {\n    try {\n      this.validate();\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * @method equals\n   * @description 比较两个实体是否相等，子类应该重写此方法\n   * @param {BaseEntity} other 另一个实体\n   * @returns {boolean} 是否相等\n   */\n  public equals(other: BaseEntity): boolean {\n    if (this === other) return true;\n    if (this.constructor !== other.constructor) return false;\n\n    // 子类应该重写此方法提供具体的相等性判断逻辑\n    return false;\n  }\n\n  /**\n   * @method clone\n   * @description 克隆实体，子类应该重写此方法\n   * @returns {BaseEntity} 克隆的实体\n   */\n  public clone(): BaseEntity {\n    // 子类应该重写此方法提供具体的克隆逻辑\n    throw new Error('Clone method must be implemented by subclass');\n  }\n\n  /**\n   * @method toJSON\n   * @description 将实体转换为JSON对象，子类可以重写此方法\n   * @returns {object} JSON对象\n   */\n  public toJSON(): object {\n    return {\n      createdAt: this.createdAt.toISOString(),\n      createdBy: this.createdBy,\n      updatedAt: this._updatedAt.toISOString(),\n      updatedBy: this._updatedBy,\n      version: this._version,\n      isDeleted: this._isDeleted,\n      deletedAt: this._deletedAt?.toISOString(),\n      deletedBy: this._deletedBy,\n    };\n  }\n\n  /**\n   * @method toString\n   * @description 将实体转换为字符串表示，子类可以重写此方法\n   * @returns {string} 字符串表示\n   */\n  public toString(): string {\n    return `${this.constructor.name}(${this._version})`;\n  }\n\n  /**\n   * @method getEntityType\n   * @description 获取实体类型名称\n   * @returns {string} 实体类型名称\n   */\n  public getEntityType(): string {\n    return this.constructor.name;\n  }\n\n  /**\n   * @method getEntityId\n   * @description 获取实体ID，子类必须重写此方法\n   * @returns {string} 实体ID\n   * @abstract\n   */\n  public abstract getEntityId(): string;\n\n  /**\n   * @method getTenantId\n   * @description 获取租户ID，子类必须重写此方法（多租户支持）\n   * @returns {string} 租户ID\n   * @abstract\n   */\n  public abstract getTenantId(): string;\n}\n\n/**\n * @interface AuditInfo\n * @description 审计信息接口\n */\nexport interface AuditInfo {\n  readonly createdAt: Date;\n  readonly createdBy: string;\n  readonly updatedAt: Date;\n  readonly updatedBy: string;\n  readonly version: number;\n  readonly isDeleted: boolean;\n  readonly deletedAt?: Date;\n  readonly deletedBy?: string;\n}\n\n/**\n * @class InvalidOperationError\n * @description 无效操作错误\n */\nexport class InvalidOperationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidOperationError';\n  }\n}\n\n/**\n * @class InvalidAuditStateError\n * @description 无效审计状态错误\n */\nexport class InvalidAuditStateError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAuditStateError';\n  }\n}\n\n/**\n * @class ValidationError\n * @description 验证错误\n */\nexport class ValidationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\n"],"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","ignoreList":[]}