799148cc7e1006a42002311d57991202
"use strict";

/**
 * @file postgresql.adapter.ts
 * @description PostgreSQL数据库适配器实现
 *
 * 该文件实现了PostgreSQL数据库适配器，包括：
 * - 连接管理
 * - 查询执行
 * - 事务管理
 * - 健康检查
 * - 统计监控
 * - 事件通知
 *
 * 遵循DDD和Clean Architecture原则，提供统一的数据库操作接口。
 */
/* istanbul ignore next */
function cov_2hu555lw70() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts";
  var hash = "62df81de50c6eb7eecdcaff7546d15cbc9bb3733";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 111
        }
      },
      "2": {
        start: {
          line: 17,
          column: 70
        },
        end: {
          line: 17,
          column: 111
        }
      },
      "3": {
        start: {
          line: 17,
          column: 112
        },
        end: {
          line: 17,
          column: 121
        }
      },
      "4": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "5": {
        start: {
          line: 18,
          column: 37
        },
        end: {
          line: 18,
          column: 100
        }
      },
      "6": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 91
        }
      },
      "7": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 108
        }
      },
      "8": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "10": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "11": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 81
        }
      },
      "13": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 24,
          column: 81
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 80
        }
      },
      "15": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 25,
          column: 80
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 182
        }
      },
      "17": {
        start: {
          line: 26,
          column: 48
        },
        end: {
          line: 26,
          column: 136
        }
      },
      "18": {
        start: {
          line: 26,
          column: 58
        },
        end: {
          line: 26,
          column: 136
        }
      },
      "19": {
        start: {
          line: 26,
          column: 137
        },
        end: {
          line: 26,
          column: 179
        }
      },
      "20": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 134
        }
      },
      "21": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "22": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "23": {
        start: {
          line: 29,
          column: 35
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "24": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 102
        }
      },
      "25": {
        start: {
          line: 30,
          column: 63
        },
        end: {
          line: 30,
          column: 102
        }
      },
      "26": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 59
        }
      },
      "27": {
        start: {
          line: 31,
          column: 40
        },
        end: {
          line: 31,
          column: 59
        }
      },
      "28": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "29": {
        start: {
          line: 32,
          column: 40
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "30": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "31": {
        start: {
          line: 33,
          column: 41
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "32": {
        start: {
          line: 35,
          column: 13
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "33": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "34": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "35": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "36": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "37": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "38": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 16
        }
      },
      "39": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "40": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "41": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "42": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 18
        }
      },
      "43": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 96
        }
      },
      "44": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "45": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "46": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 99
        }
      },
      "47": {
        start: {
          line: 51,
          column: 34
        },
        end: {
          line: 51,
          column: 99
        }
      },
      "48": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 121
        }
      },
      "49": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 54,
          column: 62
        }
      },
      "50": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 35
        }
      },
      "51": {
        start: {
          line: 56,
          column: 17
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "52": {
        start: {
          line: 57,
          column: 15
        },
        end: {
          line: 57,
          column: 30
        }
      },
      "53": {
        start: {
          line: 58,
          column: 13
        },
        end: {
          line: 58,
          column: 26
        }
      },
      "54": {
        start: {
          line: 59,
          column: 15
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "55": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 60,
          column: 44
        }
      },
      "56": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 525,
          column: 4
        }
      },
      "57": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 76,
          column: 55
        }
      },
      "58": {
        start: {
          line: 78,
          column: 34
        },
        end: {
          line: 78,
          column: 36
        }
      },
      "59": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 515,
          column: 5
        }
      },
      "60": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 37
        }
      },
      "61": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 27
        }
      },
      "62": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 35
        }
      },
      "63": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "64": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 33
        }
      },
      "65": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 29
        }
      },
      "66": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 45
        }
      },
      "67": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 33
        }
      },
      "68": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "69": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 48
        }
      },
      "70": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "71": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "72": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "73": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 175
        }
      },
      "74": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 40
        }
      },
      "75": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "76": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 198
        }
      },
      "77": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 116,
          column: 56
        }
      },
      "78": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 47
        }
      },
      "79": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 33
        }
      },
      "80": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 44
        }
      },
      "81": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 162
        }
      },
      "82": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 125,
          column: 19
        }
      },
      "83": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 45
        }
      },
      "84": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 187
        }
      },
      "85": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 134,
          column: 19
        }
      },
      "86": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "87": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "88": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 155
        }
      },
      "89": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 38
        }
      },
      "90": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 50
        }
      },
      "91": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 45
        }
      },
      "92": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 167
        }
      },
      "93": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 153,
          column: 19
        }
      },
      "94": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 192
        }
      },
      "95": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 161,
          column: 19
        }
      },
      "96": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 28
        }
      },
      "97": {
        start: {
          line: 174,
          column: 30
        },
        end: {
          line: 174,
          column: 40
        }
      },
      "98": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 38
        }
      },
      "99": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "100": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "101": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 182,
          column: 23
        }
      },
      "102": {
        start: {
          line: 184,
          column: 36
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "103": {
        start: {
          line: 189,
          column: 31
        },
        end: {
          line: 189,
          column: 65
        }
      },
      "104": {
        start: {
          line: 190,
          column: 37
        },
        end: {
          line: 190,
          column: 59
        }
      },
      "105": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 53
        }
      },
      "106": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 198,
          column: 17
        }
      },
      "107": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 197,
          column: 23
        }
      },
      "108": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "109": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 30
        }
      },
      "110": {
        start: {
          line: 210,
          column: 37
        },
        end: {
          line: 210,
          column: 59
        }
      },
      "111": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 54
        }
      },
      "112": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 217,
          column: 26
        }
      },
      "113": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "114": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 28
        }
      },
      "115": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 75
        }
      },
      "116": {
        start: {
          line: 248,
          column: 30
        },
        end: {
          line: 248,
          column: 40
        }
      },
      "117": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "118": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 253,
          column: 19
        }
      },
      "119": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 262,
          column: 18
        }
      },
      "120": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 257,
          column: 21
        }
      },
      "121": {
        start: {
          line: 256,
          column: 24
        },
        end: {
          line: 256,
          column: 113
        }
      },
      "122": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 260,
          column: 21
        }
      },
      "123": {
        start: {
          line: 259,
          column: 24
        },
        end: {
          line: 259,
          column: 67
        }
      },
      "124": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 47
        }
      },
      "125": {
        start: {
          line: 263,
          column: 37
        },
        end: {
          line: 263,
          column: 59
        }
      },
      "126": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 268,
          column: 19
        }
      },
      "127": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "128": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 30
        }
      },
      "129": {
        start: {
          line: 278,
          column: 37
        },
        end: {
          line: 278,
          column: 59
        }
      },
      "130": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 284,
          column: 26
        }
      },
      "131": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 291,
          column: 19
        }
      },
      "132": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 28
        }
      },
      "133": {
        start: {
          line: 301,
          column: 30
        },
        end: {
          line: 301,
          column: 40
        }
      },
      "134": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "135": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 90
        }
      },
      "136": {
        start: {
          line: 305,
          column: 37
        },
        end: {
          line: 305,
          column: 59
        }
      },
      "137": {
        start: {
          line: 306,
          column: 35
        },
        end: {
          line: 311,
          column: 17
        }
      },
      "138": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 318,
          column: 18
        }
      },
      "139": {
        start: {
          line: 321,
          column: 37
        },
        end: {
          line: 321,
          column: 59
        }
      },
      "140": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 328,
          column: 18
        }
      },
      "141": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 36
        }
      },
      "142": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 37
        }
      },
      "143": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 36
        }
      },
      "144": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 48
        }
      },
      "145": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "146": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 36
        }
      },
      "147": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 368,
          column: 14
        }
      },
      "148": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 382,
          column: 13
        }
      },
      "149": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 71
        }
      },
      "150": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 28
        }
      },
      "151": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 29
        }
      },
      "152": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 37
        }
      },
      "153": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 29
        }
      },
      "154": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 416,
          column: 15
        }
      },
      "155": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 422,
          column: 15
        }
      },
      "156": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 421,
          column: 19
        }
      },
      "157": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 425,
          column: 15
        }
      },
      "158": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 424,
          column: 129
        }
      },
      "159": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 449,
          column: 15
        }
      },
      "160": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 468,
          column: 14
        }
      },
      "161": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 483,
          column: 13
        }
      },
      "162": {
        start: {
          line: 479,
          column: 16
        },
        end: {
          line: 479,
          column: 47
        }
      },
      "163": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 43
        }
      },
      "164": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 497,
          column: 13
        }
      },
      "165": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 58
        }
      },
      "166": {
        start: {
          line: 487,
          column: 16
        },
        end: {
          line: 487,
          column: 58
        }
      },
      "167": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 488,
          column: 62
        }
      },
      "168": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 491,
          column: 96
        }
      },
      "169": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 492,
          column: 96
        }
      },
      "170": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 496,
          column: 48
        }
      },
      "171": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 86
        }
      },
      "172": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 500,
          column: 61
        }
      },
      "173": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 513,
          column: 15
        }
      },
      "174": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 516,
          column: 55
        }
      },
      "175": {
        start: {
          line: 517,
          column: 4
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "176": {
        start: {
          line: 518,
          column: 26
        },
        end: {
          line: 518,
          column: 104
        }
      },
      "177": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 519,
          column: 181
        }
      },
      "178": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 64
        }
      },
      "179": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 521,
          column: 150
        }
      },
      "180": {
        start: {
          line: 521,
          column: 23
        },
        end: {
          line: 521,
          column: 150
        }
      },
      "181": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 522,
          column: 63
        }
      },
      "182": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 524,
          column: 42
        }
      },
      "183": {
        start: {
          line: 526,
          column: 0
        },
        end: {
          line: 526,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 50
          },
          end: {
            line: 16,
            column: 51
          }
        },
        loc: {
          start: {
            line: 16,
            column: 136
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "accept",
        decl: {
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 17,
            column: 19
          }
        },
        loc: {
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 17,
            column: 123
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 181
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 60
          },
          end: {
            line: 43,
            column: 61
          }
        },
        loc: {
          start: {
            line: 43,
            column: 100
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 60
          },
          end: {
            line: 50,
            column: 61
          }
        },
        loc: {
          start: {
            line: 50,
            column: 87
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 25
          },
          end: {
            line: 75,
            column: 26
          }
        },
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 525,
            column: 1
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        loc: {
          start: {
            line: 81,
            column: 56
          },
          end: {
            line: 98,
            column: 9
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 34
          }
        },
        loc: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 97,
            column: 13
          }
        },
        line: 95
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        loc: {
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        loc: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 143
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        loc: {
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 228,
            column: 9
          }
        },
        line: 173
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        loc: {
          start: {
            line: 237,
            column: 54
          },
          end: {
            line: 239,
            column: 9
          }
        },
        line: 237
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        loc: {
          start: {
            line: 247,
            column: 50
          },
          end: {
            line: 294,
            column: 9
          }
        },
        line: 247
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 254,
            column: 67
          },
          end: {
            line: 254,
            column: 68
          }
        },
        loc: {
          start: {
            line: 254,
            column: 82
          },
          end: {
            line: 262,
            column: 17
          }
        },
        line: 254
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        loc: {
          start: {
            line: 300,
            column: 26
          },
          end: {
            line: 330,
            column: 9
          }
        },
        line: 300
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        },
        loc: {
          start: {
            line: 336,
            column: 25
          },
          end: {
            line: 340,
            column: 9
          }
        },
        line: 336
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        loc: {
          start: {
            line: 346,
            column: 27
          },
          end: {
            line: 353,
            column: 9
          }
        },
        line: 346
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        loc: {
          start: {
            line: 359,
            column: 30
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 359
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        },
        loc: {
          start: {
            line: 375,
            column: 21
          },
          end: {
            line: 383,
            column: 9
          }
        },
        line: 375
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        },
        loc: {
          start: {
            line: 389,
            column: 18
          },
          end: {
            line: 391,
            column: 9
          }
        },
        line: 389
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        },
        loc: {
          start: {
            line: 397,
            column: 18
          },
          end: {
            line: 399,
            column: 9
          }
        },
        line: 397
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        loc: {
          start: {
            line: 405,
            column: 25
          },
          end: {
            line: 426,
            column: 9
          }
        },
        line: 405
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 418,
            column: 36
          },
          end: {
            line: 418,
            column: 37
          }
        },
        loc: {
          start: {
            line: 418,
            column: 42
          },
          end: {
            line: 422,
            column: 13
          }
        },
        line: 418
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 423,
            column: 34
          },
          end: {
            line: 423,
            column: 35
          }
        },
        loc: {
          start: {
            line: 423,
            column: 41
          },
          end: {
            line: 425,
            column: 13
          }
        },
        line: 423
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        },
        loc: {
          start: {
            line: 432,
            column: 25
          },
          end: {
            line: 450,
            column: 9
          }
        },
        line: 432
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        loc: {
          start: {
            line: 457,
            column: 26
          },
          end: {
            line: 469,
            column: 9
          }
        },
        line: 457
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 477,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        loc: {
          start: {
            line: 477,
            column: 43
          },
          end: {
            line: 501,
            column: 9
          }
        },
        line: 477
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        },
        loc: {
          start: {
            line: 509,
            column: 32
          },
          end: {
            line: 514,
            column: 9
          }
        },
        line: 509
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 517,
            column: 5
          },
          end: {
            line: 517,
            column: 6
          }
        },
        loc: {
          start: {
            line: 517,
            column: 11
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 517
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 42,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 16,
            column: 24
          }
        }, {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 16,
            column: 45
          }
        }, {
          start: {
            line: 16,
            column: 50
          },
          end: {
            line: 42,
            column: 1
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 111
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 41
          }
        }, {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 68
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 18,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 57
          },
          end: {
            line: 18,
            column: 62
          }
        }, {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 18,
            column: 100
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 18,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 85
          },
          end: {
            line: 18,
            column: 90
          }
        }, {
          start: {
            line: 18,
            column: 93
          },
          end: {
            line: 18,
            column: 100
          }
        }],
        line: 18
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 19,
            column: 84
          }
        }, {
          start: {
            line: 19,
            column: 87
          },
          end: {
            line: 19,
            column: 91
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 30
          }
        }, {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 19,
            column: 38
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 19,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 63
          },
          end: {
            line: 19,
            column: 67
          }
        }, {
          start: {
            line: 19,
            column: 70
          },
          end: {
            line: 19,
            column: 84
          }
        }],
        line: 19
      },
      "8": {
        loc: {
          start: {
            line: 20,
            column: 21
          },
          end: {
            line: 20,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 21
          },
          end: {
            line: 20,
            column: 33
          }
        }, {
          start: {
            line: 20,
            column: 38
          },
          end: {
            line: 20,
            column: 107
          }
        }],
        line: 20
      },
      "9": {
        loc: {
          start: {
            line: 20,
            column: 38
          },
          end: {
            line: 20,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 20,
            column: 102
          }
        }, {
          start: {
            line: 20,
            column: 105
          },
          end: {
            line: 20,
            column: 107
          }
        }],
        line: 20
      },
      "10": {
        loc: {
          start: {
            line: 24,
            column: 46
          },
          end: {
            line: 24,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 63
          },
          end: {
            line: 24,
            column: 65
          }
        }, {
          start: {
            line: 24,
            column: 68
          },
          end: {
            line: 24,
            column: 80
          }
        }],
        line: 24
      },
      "11": {
        loc: {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 136
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 136
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "12": {
        loc: {
          start: {
            line: 26,
            column: 167
          },
          end: {
            line: 26,
            column: 176
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 167
          },
          end: {
            line: 26,
            column: 168
          }
        }, {
          start: {
            line: 26,
            column: 172
          },
          end: {
            line: 26,
            column: 176
          }
        }],
        line: 26
      },
      "13": {
        loc: {
          start: {
            line: 27,
            column: 40
          },
          end: {
            line: 27,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 27,
            column: 106
          }
        }, {
          start: {
            line: 27,
            column: 109
          },
          end: {
            line: 27,
            column: 124
          }
        }],
        line: 27
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 31
          }
        }, {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 30,
            column: 61
          }
        }],
        line: 30
      },
      "18": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "19": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "20": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "21": {
        loc: {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "22": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 37,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 37,
            column: 37
          }
        }, {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 37
          }
        }],
        line: 36
      },
      "23": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "24": {
        loc: {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 49,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 55
          }
        }, {
          start: {
            line: 43,
            column: 60
          },
          end: {
            line: 49,
            column: 1
          }
        }],
        line: 43
      },
      "25": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 46,
            column: 63
          }
        }, {
          start: {
            line: 46,
            column: 66
          },
          end: {
            line: 46,
            column: 95
          }
        }],
        line: 46
      },
      "26": {
        loc: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 27
          }
        }, {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 48,
            column: 36
          }
        }],
        line: 48
      },
      "27": {
        loc: {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 53,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 55
          }
        }, {
          start: {
            line: 50,
            column: 60
          },
          end: {
            line: 53,
            column: 1
          }
        }],
        line: 50
      },
      "28": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "29": {
        loc: {
          start: {
            line: 51,
            column: 41
          },
          end: {
            line: 51,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 60
          },
          end: {
            line: 51,
            column: 93
          }
        }, {
          start: {
            line: 51,
            column: 96
          },
          end: {
            line: 51,
            column: 98
          }
        }],
        line: 51
      },
      "30": {
        loc: {
          start: {
            line: 52,
            column: 73
          },
          end: {
            line: 52,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 82
          },
          end: {
            line: 52,
            column: 110
          }
        }, {
          start: {
            line: 52,
            column: 113
          },
          end: {
            line: 52,
            column: 117
          }
        }],
        line: 52
      },
      "31": {
        loc: {
          start: {
            line: 173,
            column: 25
          },
          end: {
            line: 173,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 34
          },
          end: {
            line: 173,
            column: 36
          }
        }],
        line: 173
      },
      "32": {
        loc: {
          start: {
            line: 173,
            column: 38
          },
          end: {
            line: 173,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 48
          },
          end: {
            line: 173,
            column: 50
          }
        }],
        line: 173
      },
      "33": {
        loc: {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "34": {
        loc: {
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 37
          }
        }, {
          start: {
            line: 187,
            column: 41
          },
          end: {
            line: 187,
            column: 50
          }
        }],
        line: 187
      },
      "35": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "36": {
        loc: {
          start: {
            line: 237,
            column: 27
          },
          end: {
            line: 237,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 36
          },
          end: {
            line: 237,
            column: 38
          }
        }],
        line: 237
      },
      "37": {
        loc: {
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 237,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 50
          },
          end: {
            line: 237,
            column: 52
          }
        }],
        line: 237
      },
      "38": {
        loc: {
          start: {
            line: 247,
            column: 36
          },
          end: {
            line: 247,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 247,
            column: 46
          },
          end: {
            line: 247,
            column: 48
          }
        }],
        line: 247
      },
      "39": {
        loc: {
          start: {
            line: 255,
            column: 20
          },
          end: {
            line: 257,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 20
          },
          end: {
            line: 257,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "40": {
        loc: {
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 260,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 260,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "41": {
        loc: {
          start: {
            line: 364,
            column: 24
          },
          end: {
            line: 364,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 47
          },
          end: {
            line: 364,
            column: 58
          }
        }, {
          start: {
            line: 364,
            column: 61
          },
          end: {
            line: 364,
            column: 75
          }
        }],
        line: 364
      },
      "42": {
        loc: {
          start: {
            line: 412,
            column: 21
          },
          end: {
            line: 412,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 39
          },
          end: {
            line: 412,
            column: 68
          }
        }, {
          start: {
            line: 412,
            column: 71
          },
          end: {
            line: 412,
            column: 76
          }
        }],
        line: 412
      },
      "43": {
        loc: {
          start: {
            line: 413,
            column: 21
          },
          end: {
            line: 413,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 21
          },
          end: {
            line: 413,
            column: 42
          }
        }, {
          start: {
            line: 413,
            column: 46
          },
          end: {
            line: 413,
            column: 48
          }
        }],
        line: 413
      },
      "44": {
        loc: {
          start: {
            line: 414,
            column: 21
          },
          end: {
            line: 414,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 21
          },
          end: {
            line: 414,
            column: 42
          }
        }, {
          start: {
            line: 414,
            column: 46
          },
          end: {
            line: 414,
            column: 47
          }
        }],
        line: 414
      },
      "45": {
        loc: {
          start: {
            line: 415,
            column: 35
          },
          end: {
            line: 415,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 35
          },
          end: {
            line: 415,
            column: 70
          }
        }, {
          start: {
            line: 415,
            column: 74
          },
          end: {
            line: 415,
            column: 79
          }
        }],
        line: 415
      },
      "46": {
        loc: {
          start: {
            line: 441,
            column: 25
          },
          end: {
            line: 441,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 441,
            column: 43
          },
          end: {
            line: 441,
            column: 72
          }
        }, {
          start: {
            line: 441,
            column: 75
          },
          end: {
            line: 441,
            column: 80
          }
        }],
        line: 441
      },
      "47": {
        loc: {
          start: {
            line: 444,
            column: 25
          },
          end: {
            line: 444,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 25
          },
          end: {
            line: 444,
            column: 46
          }
        }, {
          start: {
            line: 444,
            column: 50
          },
          end: {
            line: 444,
            column: 51
          }
        }],
        line: 444
      },
      "48": {
        loc: {
          start: {
            line: 445,
            column: 25
          },
          end: {
            line: 445,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 25
          },
          end: {
            line: 445,
            column: 46
          }
        }, {
          start: {
            line: 445,
            column: 50
          },
          end: {
            line: 445,
            column: 52
          }
        }],
        line: 445
      },
      "49": {
        loc: {
          start: {
            line: 446,
            column: 39
          },
          end: {
            line: 446,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 446,
            column: 39
          },
          end: {
            line: 446,
            column: 74
          }
        }, {
          start: {
            line: 446,
            column: 78
          },
          end: {
            line: 446,
            column: 83
          }
        }],
        line: 446
      },
      "50": {
        loc: {
          start: {
            line: 478,
            column: 12
          },
          end: {
            line: 483,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 12
          },
          end: {
            line: 483,
            column: 13
          }
        }, {
          start: {
            line: 481,
            column: 17
          },
          end: {
            line: 483,
            column: 13
          }
        }],
        line: 478
      },
      "51": {
        loc: {
          start: {
            line: 485,
            column: 12
          },
          end: {
            line: 497,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 12
          },
          end: {
            line: 497,
            column: 13
          }
        }, {
          start: {
            line: 490,
            column: 17
          },
          end: {
            line: 497,
            column: 13
          }
        }],
        line: 485
      },
      "52": {
        loc: {
          start: {
            line: 518,
            column: 26
          },
          end: {
            line: 518,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 518,
            column: 76
          },
          end: {
            line: 518,
            column: 95
          }
        }, {
          start: {
            line: 518,
            column: 98
          },
          end: {
            line: 518,
            column: 104
          }
        }],
        line: 518
      },
      "53": {
        loc: {
          start: {
            line: 518,
            column: 26
          },
          end: {
            line: 518,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 26
          },
          end: {
            line: 518,
            column: 54
          }
        }, {
          start: {
            line: 518,
            column: 58
          },
          end: {
            line: 518,
            column: 73
          }
        }],
        line: 518
      },
      "54": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 521,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 521,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0],
      "38": [0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/adapters/postgresql.adapter.ts"],
      sourcesContent: ["/**\n * @file postgresql.adapter.ts\n * @description PostgreSQL\u6570\u636E\u5E93\u9002\u914D\u5668\u5B9E\u73B0\n *\n * \u8BE5\u6587\u4EF6\u5B9E\u73B0\u4E86PostgreSQL\u6570\u636E\u5E93\u9002\u914D\u5668\uFF0C\u5305\u62EC\uFF1A\n * - \u8FDE\u63A5\u7BA1\u7406\n * - \u67E5\u8BE2\u6267\u884C\n * - \u4E8B\u52A1\u7BA1\u7406\n * - \u5065\u5EB7\u68C0\u67E5\n * - \u7EDF\u8BA1\u76D1\u63A7\n * - \u4E8B\u4EF6\u901A\u77E5\n *\n * \u9075\u5FAADDD\u548CClean Architecture\u539F\u5219\uFF0C\u63D0\u4F9B\u7EDF\u4E00\u7684\u6570\u636E\u5E93\u64CD\u4F5C\u63A5\u53E3\u3002\n */\n\nimport { Injectable, Inject } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Pool, QueryResult } from 'pg';\nimport { Knex, knex } from 'knex';\nimport { PinoLoggerService, LogContext } from '@aiofix/logging';\nimport type {\n  IDatabaseAdapter,\n  DatabaseConfig,\n  DatabaseConnection,\n  DatabaseHealth,\n  DatabaseStats,\n  QueryOptions,\n  TransactionOptions,\n} from '../interfaces/database.interface';\nimport type { Connection } from 'pg';\nimport type { Connection as MikroOrmConnection } from '@mikro-orm/core';\n\n/**\n * @class PostgreSQLAdapter\n * @description PostgreSQL\u6570\u636E\u5E93\u9002\u914D\u5668\n *\n * \u63D0\u4F9BPostgreSQL\u6570\u636E\u5E93\u7684\u7EDF\u4E00\u64CD\u4F5C\u63A5\u53E3\uFF0C\u652F\u6301\uFF1A\n * - \u539F\u751Fpg\u8FDE\u63A5\u6C60\n * - Knex\u67E5\u8BE2\u6784\u5EFA\u5668\n * - \u8FDE\u63A5\u6C60\u7BA1\u7406\n * - \u5065\u5EB7\u68C0\u67E5\n * - \u6027\u80FD\u76D1\u63A7\n * - \u4E8B\u4EF6\u901A\u77E5\n *\n * @implements {IDatabaseAdapter}\n */\n@Injectable()\nexport class PostgreSQLAdapter implements IDatabaseAdapter {\n  public readonly name: string;\n  public readonly type: string = 'postgresql';\n  public readonly eventEmitter: EventEmitter2;\n  public readonly config: DatabaseConfig;\n\n  private readonly logger: PinoLoggerService;\n  private pool: Pool = {} as Pool;\n  private knexInstance: Knex = {} as Knex;\n  private isConnectedFlag = false;\n  private stats: DatabaseStats;\n  private connectionId: string;\n\n  constructor(\n    @Inject('DATABASE_CONFIG') config: DatabaseConfig,\n    @Inject('DATABASE_NAME') name: string,\n    eventEmitter: EventEmitter2,\n    logger: PinoLoggerService,\n  ) {\n    this.config = config;\n    this.name = name;\n    this.eventEmitter = eventEmitter;\n    this.logger = logger;\n    this.connectionId = uuidv4();\n    this.stats = this.initializeStats();\n    this.initializePool();\n    this.initializeKnex();\n\n    // \u81EA\u52A8\u8FDE\u63A5\u6570\u636E\u5E93\n    this.connect().catch(error => {\n      this.logger.warn(\n        'Failed to auto-connect to database, will retry on first query',\n        LogContext.DATABASE,\n        { adapter: this.name, error: (error as Error).message },\n      );\n    });\n  }\n\n  /**\n   * @getter isConnected\n   * @description \u83B7\u53D6\u8FDE\u63A5\u72B6\u6001\n   * @returns {boolean} \u662F\u5426\u5DF2\u8FDE\u63A5\n   */\n  get isConnected(): boolean {\n    return this.isConnectedFlag;\n  }\n\n  /**\n   * @method connect\n   * @description \u8FDE\u63A5\u5230PostgreSQL\u6570\u636E\u5E93\n   * @returns {Promise<void>} \u8FDE\u63A5\u7ED3\u679C\n   */\n  async connect(): Promise<void> {\n    try {\n      this.logger.info(\n        `Connecting to PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name, host: this.config.host, port: this.config.port },\n      );\n\n      // \u6D4B\u8BD5\u8FDE\u63A5\u6C60\u8FDE\u63A5\n      const client = await this.pool.connect();\n      await client.query('SELECT 1');\n      client.release();\n\n      this.isConnectedFlag = true;\n\n      this.logger.info(\n        `Successfully connected to PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name },\n      );\n\n      this.emitEvent('connected', {\n        adapter: this.name,\n        database: this.config.database,\n        timestamp: new Date(),\n      });\n    } catch (error) {\n      this.isConnectedFlag = false;\n      this.logger.error(\n        `Failed to connect to PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name, error: (error as Error).message },\n        error as Error,\n      );\n\n      this.emitEvent('connection_error', {\n        adapter: this.name,\n        error: (error as Error).message,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method disconnect\n   * @description \u65AD\u5F00PostgreSQL\u6570\u636E\u5E93\u8FDE\u63A5\n   * @returns {Promise<void>} \u65AD\u5F00\u7ED3\u679C\n   */\n  async disconnect(): Promise<void> {\n    try {\n      this.logger.info(\n        `Disconnecting from PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name },\n      );\n\n      await this.pool.end();\n      await this.knexInstance.destroy();\n\n      this.isConnectedFlag = false;\n\n      this.logger.info(\n        `Successfully disconnected from PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name },\n      );\n\n      this.emitEvent('disconnected', {\n        adapter: this.name,\n        timestamp: new Date(),\n      });\n    } catch (error) {\n      this.logger.error(\n        `Failed to disconnect from PostgreSQL database: ${this.config.database}`,\n        LogContext.DATABASE,\n        { adapter: this.name, error: (error as Error).message },\n        error as Error,\n      );\n\n      this.emitEvent('disconnection_error', {\n        adapter: this.name,\n        error: (error as Error).message,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method query\n   * @description \u6267\u884C\u67E5\u8BE2\n   * @param sql SQL\u8BED\u53E5\n   * @param params \u67E5\u8BE2\u53C2\u6570\n   * @param options \u67E5\u8BE2\u9009\u9879\n   * @returns {Promise<QueryResult>} \u67E5\u8BE2\u7ED3\u679C\n   */\n  async query(\n    sql: string,\n    params: any[] = [],\n    options: QueryOptions = {},\n  ): Promise<QueryResult> {\n    const startTime = Date.now();\n    this.stats.totalQueries++;\n\n    try {\n      if (options.logQuery) {\n        this.logger.debug(`Executing query: ${sql}`, LogContext.DATABASE, {\n          adapter: this.name,\n          params,\n          tag: options.tag,\n        });\n      }\n\n      const queryConfig = {\n        text: sql,\n        values: params,\n        name: options.tag || 'unnamed',\n      };\n\n      const result = await this.pool.query(queryConfig);\n      const responseTime = Date.now() - startTime;\n\n      this.updateStats(responseTime, true);\n\n      if (options.logQuery) {\n        this.logger.debug(`Query completed: ${sql}`, LogContext.DATABASE, {\n          adapter: this.name,\n          responseTime,\n          rowCount: result.rowCount,\n        });\n      }\n\n      this.emitEvent('query_executed', {\n        adapter: this.name,\n        sql,\n        params,\n        responseTime,\n        rowCount: result.rowCount,\n        timestamp: new Date(),\n      });\n\n      return result;\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n      this.updateStats(responseTime, false);\n\n      this.logger.error(\n        `Query failed: ${sql}`,\n        LogContext.DATABASE,\n        {\n          adapter: this.name,\n          params,\n          responseTime,\n          error: (error as Error).message,\n        },\n        error as Error,\n      );\n\n      this.emitEvent('query_error', {\n        adapter: this.name,\n        sql,\n        params,\n        error: (error as Error).message,\n        responseTime,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method execute\n   * @description \u6267\u884C\u547D\u4EE4\n   * @param sql SQL\u8BED\u53E5\n   * @param params \u53C2\u6570\n   * @param options \u6267\u884C\u9009\u9879\n   * @returns {Promise<QueryResult>} \u6267\u884C\u7ED3\u679C\n   */\n  async execute(\n    sql: string,\n    params: any[] = [],\n    options: QueryOptions = {},\n  ): Promise<QueryResult> {\n    return this.query(sql, params, { ...options, logQuery: true });\n  }\n\n  /**\n   * @method transaction\n   * @description \u6267\u884C\u4E8B\u52A1\n   * @param callback \u4E8B\u52A1\u56DE\u8C03\u51FD\u6570\n   * @param options \u4E8B\u52A1\u9009\u9879\n   * @returns {Promise<T>} \u4E8B\u52A1\u7ED3\u679C\n   */\n  async transaction<T>(\n    callback: (_trx: unknown) => Promise<T>,\n    options: TransactionOptions = {},\n  ): Promise<T> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.debug(`Starting transaction`, LogContext.DATABASE, {\n        adapter: this.name,\n        tag: options.tag,\n      });\n\n      const result = await this.knexInstance.transaction(async trx => {\n        if (options.isolationLevel) {\n          await trx.raw(\n            `SET TRANSACTION ISOLATION LEVEL ${options.isolationLevel.toUpperCase()}`,\n          );\n        }\n\n        if (options.readOnly) {\n          await trx.raw('SET TRANSACTION READ ONLY');\n        }\n\n        return await callback(trx);\n      });\n\n      const responseTime = Date.now() - startTime;\n\n      this.logger.debug(`Transaction completed`, LogContext.DATABASE, {\n        adapter: this.name,\n        responseTime,\n        tag: options.tag,\n      });\n\n      this.emitEvent('transaction_completed', {\n        adapter: this.name,\n        responseTime,\n        tag: options.tag,\n        timestamp: new Date(),\n      });\n\n      return result;\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n\n      this.logger.error(\n        `Transaction failed`,\n        LogContext.DATABASE,\n        {\n          adapter: this.name,\n          responseTime,\n          error: (error as Error).message,\n          tag: options.tag,\n        },\n        error as Error,\n      );\n\n      this.emitEvent('transaction_error', {\n        adapter: this.name,\n        error: (error as Error).message,\n        responseTime,\n        tag: options.tag,\n        timestamp: new Date(),\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * @method getHealth\n   * @description \u83B7\u53D6\u5065\u5EB7\u72B6\u6001\n   * @returns {Promise<DatabaseHealth>} \u5065\u5EB7\u72B6\u6001\n   */\n  async getHealth(): Promise<DatabaseHealth> {\n    const startTime = Date.now();\n\n    try {\n      // \u6267\u884C\u5065\u5EB7\u68C0\u67E5\u67E5\u8BE2\n      await this.query('SELECT 1 as health_check', [], { tag: 'health_check' });\n\n      const responseTime = Date.now() - startTime;\n\n      const poolStatus = {\n        total: this.pool.totalCount,\n        idle: this.pool.idleCount,\n        active: this.pool.totalCount - this.pool.idleCount,\n        waiting: this.pool.waitingCount,\n      };\n\n      return {\n        healthy: true,\n        connected: this.isConnectedFlag,\n        responseTime,\n        lastCheck: new Date(),\n        poolStatus,\n      };\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n\n      return {\n        healthy: false,\n        connected: false,\n        responseTime,\n        error: (error as Error).message,\n        lastCheck: new Date(),\n      };\n    }\n  }\n\n  /**\n   * @method getStats\n   * @description \u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\n   * @returns {Promise<DatabaseStats>} \u7EDF\u8BA1\u4FE1\u606F\n   */\n  async getStats(): Promise<DatabaseStats> {\n    // \u6A21\u62DF\u5F02\u6B65\u64CD\u4F5C\u4EE5\u6EE1\u8DB3\u63A5\u53E3\u8981\u6C42\n    await Promise.resolve();\n    return { ...this.stats };\n  }\n\n  /**\n   * @method resetStats\n   * @description \u91CD\u7F6E\u7EDF\u8BA1\u4FE1\u606F\n   * @returns {Promise<void>} \u91CD\u7F6E\u7ED3\u679C\n   */\n  async resetStats(): Promise<void> {\n    // \u6A21\u62DF\u5F02\u6B65\u64CD\u4F5C\u4EE5\u6EE1\u8DB3\u63A5\u53E3\u8981\u6C42\n    await Promise.resolve();\n    this.stats = this.initializeStats();\n    this.logger.info('Database stats reset', LogContext.DATABASE, {\n      adapter: this.name,\n    });\n  }\n\n  /**\n   * @method getConnection\n   * @description \u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\n   * @returns {Promise<DatabaseConnection>} \u6570\u636E\u5E93\u8FDE\u63A5\n   */\n  async getConnection(): Promise<DatabaseConnection> {\n    // \u6A21\u62DF\u5F02\u6B65\u64CD\u4F5C\u4EE5\u6EE1\u8DB3\u63A5\u53E3\u8981\u6C42\n    await Promise.resolve();\n    return {\n      id: this.connectionId,\n      status: this.isConnectedFlag ? 'connected' : 'disconnected',\n      config: this.config,\n      instance: this.pool as unknown as Connection | Knex | MikroOrmConnection,\n      lastActivity: new Date(),\n    };\n  }\n\n  /**\n   * @method ping\n   * @description \u6570\u636E\u5E93\u8FDE\u63A5\u6D4B\u8BD5\n   * @returns {Promise<boolean>} \u6D4B\u8BD5\u7ED3\u679C\n   */\n  async ping(): Promise<boolean> {\n    try {\n      await this.query('SELECT 1', [], { tag: 'ping_test' });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * @method getKnex\n   * @description \u83B7\u53D6Knex\u5B9E\u4F8B\n   * @returns {Knex} Knex\u5B9E\u4F8B\n   */\n  getKnex(): Knex {\n    return this.knexInstance;\n  }\n\n  /**\n   * @method getPool\n   * @description \u83B7\u53D6\u8FDE\u63A5\u6C60\u5B9E\u4F8B\n   * @returns {Pool} \u8FDE\u63A5\u6C60\u5B9E\u4F8B\n   */\n  getPool(): Pool {\n    return this.pool;\n  }\n\n  /**\n   * @private\n   * @method initializePool\n   * @description \u521D\u59CB\u5316\u8FDE\u63A5\u6C60\n   */\n  private initializePool(): void {\n    this.pool = new Pool({\n      host: this.config.host,\n      port: this.config.port,\n      user: this.config.username,\n      password: this.config.password,\n      database: this.config.database,\n      ssl: this.config.ssl ? { rejectUnauthorized: false } : false,\n      max: this.config.pool?.max || 20,\n      min: this.config.pool?.min || 2,\n      idleTimeoutMillis: this.config.pool?.idleTimeoutMillis || 30000,\n    });\n\n    // \u76D1\u542C\u8FDE\u63A5\u6C60\u4E8B\u4EF6\n    this.pool.on('connect', () => {\n      this.logger.debug('New client connected to pool', LogContext.DATABASE, {\n        adapter: this.name,\n      });\n    });\n\n    this.pool.on('error', err => {\n      this.logger.error(\n        'Unexpected error on idle client',\n        LogContext.DATABASE,\n        { adapter: this.name },\n        err,\n      );\n    });\n  }\n\n  /**\n   * @private\n   * @method initializeKnex\n   * @description \u521D\u59CB\u5316Knex\u5B9E\u4F8B\n   */\n  private initializeKnex(): void {\n    this.knexInstance = knex({\n      client: 'postgresql',\n      connection: {\n        host: this.config.host,\n        port: this.config.port,\n        user: this.config.username,\n        password: this.config.password,\n        database: this.config.database,\n        ssl: this.config.ssl ? { rejectUnauthorized: false } : false,\n      },\n      pool: {\n        min: this.config.pool?.min || 2,\n        max: this.config.pool?.max || 20,\n        idleTimeoutMillis: this.config.pool?.idleTimeoutMillis || 30000,\n      },\n      debug: false,\n    });\n  }\n\n  /**\n   * @private\n   * @method initializeStats\n   * @description \u521D\u59CB\u5316\u7EDF\u8BA1\u4FE1\u606F\n   * @returns {DatabaseStats} \u521D\u59CB\u7EDF\u8BA1\u4FE1\u606F\n   */\n  private initializeStats(): DatabaseStats {\n    return {\n      totalQueries: 0,\n      successfulQueries: 0,\n      failedQueries: 0,\n      averageResponseTime: 0,\n      maxResponseTime: 0,\n      minResponseTime: 0,\n      activeConnections: 0,\n      idleConnections: 0,\n      lastReset: new Date(),\n    };\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description \u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\n   * @param responseTime \u54CD\u5E94\u65F6\u95F4\n   * @param success \u662F\u5426\u6210\u529F\n   */\n  private updateStats(responseTime: number, success: boolean): void {\n    if (success) {\n      this.stats.successfulQueries++;\n    } else {\n      this.stats.failedQueries++;\n    }\n\n    // \u66F4\u65B0\u54CD\u5E94\u65F6\u95F4\u7EDF\u8BA1\n    if (this.stats.totalQueries === 1) {\n      this.stats.minResponseTime = responseTime;\n      this.stats.maxResponseTime = responseTime;\n      this.stats.averageResponseTime = responseTime;\n    } else {\n      this.stats.minResponseTime = Math.min(\n        this.stats.minResponseTime,\n        responseTime,\n      );\n      this.stats.maxResponseTime = Math.max(\n        this.stats.maxResponseTime,\n        responseTime,\n      );\n      this.stats.averageResponseTime =\n        (this.stats.averageResponseTime * (this.stats.totalQueries - 1) +\n          responseTime) /\n        this.stats.totalQueries;\n    }\n\n    // \u66F4\u65B0\u8FDE\u63A5\u6C60\u7EDF\u8BA1\n    this.stats.activeConnections = this.pool.totalCount - this.pool.idleCount;\n    this.stats.idleConnections = this.pool.idleCount;\n  }\n\n  /**\n   * @private\n   * @method emitEvent\n   * @description \u53D1\u5C04\u4E8B\u4EF6\n   * @param event \u4E8B\u4EF6\u540D\u79F0\n   * @param _data \u4E8B\u4EF6\u6570\u636E\n   */\n  private emitEvent(event: string, _data: Record<string, unknown>): void {\n    this.eventEmitter.emit(`database.${event}`, {\n      adapter: this.name,\n      ..._data,\n    });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62df81de50c6eb7eecdcaff7546d15cbc9bb3733"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hu555lw70 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hu555lw70();
var __esDecorate =
/* istanbul ignore next */
(cov_2hu555lw70().s[0]++,
/* istanbul ignore next */
(cov_2hu555lw70().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2hu555lw70().b[0][1]++, this.__esDecorate) ||
/* istanbul ignore next */
(cov_2hu555lw70().b[0][2]++, function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  /* istanbul ignore next */
  cov_2hu555lw70().f[0]++;
  function accept(f) {
    /* istanbul ignore next */
    cov_2hu555lw70().f[1]++;
    cov_2hu555lw70().s[1]++;
    if (
    /* istanbul ignore next */
    (cov_2hu555lw70().b[2][0]++, f !== void 0) &&
    /* istanbul ignore next */
    (cov_2hu555lw70().b[2][1]++, typeof f !== "function")) {
      /* istanbul ignore next */
      cov_2hu555lw70().b[1][0]++;
      cov_2hu555lw70().s[2]++;
      throw new TypeError("Function expected");
    } else
    /* istanbul ignore next */
    {
      cov_2hu555lw70().b[1][1]++;
    }
    cov_2hu555lw70().s[3]++;
    return f;
  }
  var kind =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[4]++, contextIn.kind),
    key =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[5]++, kind === "getter" ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[3][0]++, "get") :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[3][1]++, kind === "setter" ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[4][0]++, "set") :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[4][1]++, "value")));
  var target =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[6]++,
  /* istanbul ignore next */
  (cov_2hu555lw70().b[6][0]++, !descriptorIn) &&
  /* istanbul ignore next */
  (cov_2hu555lw70().b[6][1]++, ctor) ?
  /* istanbul ignore next */
  (cov_2hu555lw70().b[5][0]++, contextIn["static"] ?
  /* istanbul ignore next */
  (cov_2hu555lw70().b[7][0]++, ctor) :
  /* istanbul ignore next */
  (cov_2hu555lw70().b[7][1]++, ctor.prototype)) :
  /* istanbul ignore next */
  (cov_2hu555lw70().b[5][1]++, null));
  var descriptor =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[7]++,
  /* istanbul ignore next */
  (cov_2hu555lw70().b[8][0]++, descriptorIn) ||
  /* istanbul ignore next */
  (cov_2hu555lw70().b[8][1]++, target ?
  /* istanbul ignore next */
  (cov_2hu555lw70().b[9][0]++, Object.getOwnPropertyDescriptor(target, contextIn.name)) :
  /* istanbul ignore next */
  (cov_2hu555lw70().b[9][1]++, {})));
  var _,
    done =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[8]++, false);
  /* istanbul ignore next */
  cov_2hu555lw70().s[9]++;
  for (var i =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[10]++, decorators.length - 1); i >= 0; i--) {
    var context =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[11]++, {});
    /* istanbul ignore next */
    cov_2hu555lw70().s[12]++;
    for (var p in contextIn) {
      /* istanbul ignore next */
      cov_2hu555lw70().s[13]++;
      context[p] = p === "access" ?
      /* istanbul ignore next */
      (cov_2hu555lw70().b[10][0]++, {}) :
      /* istanbul ignore next */
      (cov_2hu555lw70().b[10][1]++, contextIn[p]);
    }
    /* istanbul ignore next */
    cov_2hu555lw70().s[14]++;
    for (var p in contextIn.access) {
      /* istanbul ignore next */
      cov_2hu555lw70().s[15]++;
      context.access[p] = contextIn.access[p];
    }
    /* istanbul ignore next */
    cov_2hu555lw70().s[16]++;
    context.addInitializer = function (f) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[2]++;
      cov_2hu555lw70().s[17]++;
      if (done) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[11][0]++;
        cov_2hu555lw70().s[18]++;
        throw new TypeError("Cannot add initializers after decoration has completed");
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[11][1]++;
      }
      cov_2hu555lw70().s[19]++;
      extraInitializers.push(accept(
      /* istanbul ignore next */
      (cov_2hu555lw70().b[12][0]++, f) ||
      /* istanbul ignore next */
      (cov_2hu555lw70().b[12][1]++, null)));
    };
    var result =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[20]++, (0, decorators[i])(kind === "accessor" ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[13][0]++, {
      get: descriptor.get,
      set: descriptor.set
    }) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[13][1]++, descriptor[key]), context));
    /* istanbul ignore next */
    cov_2hu555lw70().s[21]++;
    if (kind === "accessor") {
      /* istanbul ignore next */
      cov_2hu555lw70().b[14][0]++;
      cov_2hu555lw70().s[22]++;
      if (result === void 0) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[15][0]++;
        cov_2hu555lw70().s[23]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[15][1]++;
      }
      cov_2hu555lw70().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_2hu555lw70().b[17][0]++, result === null) ||
      /* istanbul ignore next */
      (cov_2hu555lw70().b[17][1]++, typeof result !== "object")) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[16][0]++;
        cov_2hu555lw70().s[25]++;
        throw new TypeError("Object expected");
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[16][1]++;
      }
      cov_2hu555lw70().s[26]++;
      if (_ = accept(result.get)) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[18][0]++;
        cov_2hu555lw70().s[27]++;
        descriptor.get = _;
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[18][1]++;
      }
      cov_2hu555lw70().s[28]++;
      if (_ = accept(result.set)) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[19][0]++;
        cov_2hu555lw70().s[29]++;
        descriptor.set = _;
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[19][1]++;
      }
      cov_2hu555lw70().s[30]++;
      if (_ = accept(result.init)) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[20][0]++;
        cov_2hu555lw70().s[31]++;
        initializers.unshift(_);
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[20][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_2hu555lw70().b[14][1]++;
      cov_2hu555lw70().s[32]++;
      if (_ = accept(result)) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[21][0]++;
        cov_2hu555lw70().s[33]++;
        if (kind === "field") {
          /* istanbul ignore next */
          cov_2hu555lw70().b[22][0]++;
          cov_2hu555lw70().s[34]++;
          initializers.unshift(_);
        } else {
          /* istanbul ignore next */
          cov_2hu555lw70().b[22][1]++;
          cov_2hu555lw70().s[35]++;
          descriptor[key] = _;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2hu555lw70().b[21][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2hu555lw70().s[36]++;
  if (target) {
    /* istanbul ignore next */
    cov_2hu555lw70().b[23][0]++;
    cov_2hu555lw70().s[37]++;
    Object.defineProperty(target, contextIn.name, descriptor);
  } else
  /* istanbul ignore next */
  {
    cov_2hu555lw70().b[23][1]++;
  }
  cov_2hu555lw70().s[38]++;
  done = true;
}));
var __runInitializers =
/* istanbul ignore next */
(cov_2hu555lw70().s[39]++,
/* istanbul ignore next */
(cov_2hu555lw70().b[24][0]++, this) &&
/* istanbul ignore next */
(cov_2hu555lw70().b[24][1]++, this.__runInitializers) ||
/* istanbul ignore next */
(cov_2hu555lw70().b[24][2]++, function (thisArg, initializers, value) {
  /* istanbul ignore next */
  cov_2hu555lw70().f[3]++;
  var useValue =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[40]++, arguments.length > 2);
  /* istanbul ignore next */
  cov_2hu555lw70().s[41]++;
  for (var i =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[42]++, 0); i < initializers.length; i++) {
    /* istanbul ignore next */
    cov_2hu555lw70().s[43]++;
    value = useValue ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[25][0]++, initializers[i].call(thisArg, value)) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[25][1]++, initializers[i].call(thisArg));
  }
  /* istanbul ignore next */
  cov_2hu555lw70().s[44]++;
  return useValue ?
  /* istanbul ignore next */
  (cov_2hu555lw70().b[26][0]++, value) :
  /* istanbul ignore next */
  (cov_2hu555lw70().b[26][1]++, void 0);
}));
var __setFunctionName =
/* istanbul ignore next */
(cov_2hu555lw70().s[45]++,
/* istanbul ignore next */
(cov_2hu555lw70().b[27][0]++, this) &&
/* istanbul ignore next */
(cov_2hu555lw70().b[27][1]++, this.__setFunctionName) ||
/* istanbul ignore next */
(cov_2hu555lw70().b[27][2]++, function (f, name, prefix) {
  /* istanbul ignore next */
  cov_2hu555lw70().f[4]++;
  cov_2hu555lw70().s[46]++;
  if (typeof name === "symbol") {
    /* istanbul ignore next */
    cov_2hu555lw70().b[28][0]++;
    cov_2hu555lw70().s[47]++;
    name = name.description ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[29][0]++, "[".concat(name.description, "]")) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[29][1]++, "");
  } else
  /* istanbul ignore next */
  {
    cov_2hu555lw70().b[28][1]++;
  }
  cov_2hu555lw70().s[48]++;
  return Object.defineProperty(f, "name", {
    configurable: true,
    value: prefix ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[30][0]++, "".concat(prefix, " ", name)) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[30][1]++, name)
  });
}));
/* istanbul ignore next */
cov_2hu555lw70().s[49]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hu555lw70().s[50]++;
exports.PostgreSQLAdapter = void 0;
const common_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[51]++, require("@nestjs/common"));
const uuid_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[52]++, require("uuid"));
const pg_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[53]++, require("pg"));
const knex_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[54]++, require("knex"));
const logging_1 =
/* istanbul ignore next */
(cov_2hu555lw70().s[55]++, require("@aiofix/logging"));
/**
 * @class PostgreSQLAdapter
 * @description PostgreSQL数据库适配器
 *
 * 提供PostgreSQL数据库的统一操作接口，支持：
 * - 原生pg连接池
 * - Knex查询构建器
 * - 连接池管理
 * - 健康检查
 * - 性能监控
 * - 事件通知
 *
 * @implements {IDatabaseAdapter}
 */
let PostgreSQLAdapter =
/* istanbul ignore next */
(cov_2hu555lw70().s[56]++, (() => {
  /* istanbul ignore next */
  cov_2hu555lw70().f[5]++;
  let _classDecorators =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[57]++, [(0, common_1.Injectable)()]);
  let _classDescriptor;
  let _classExtraInitializers =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[58]++, []);
  let _classThis;
  var PostgreSQLAdapter =
  /* istanbul ignore next */
  (cov_2hu555lw70().s[59]++, _classThis = class {
    constructor(config, name, eventEmitter, logger) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[6]++;
      cov_2hu555lw70().s[60]++;
      this.type = 'postgresql';
      /* istanbul ignore next */
      cov_2hu555lw70().s[61]++;
      this.pool = {};
      /* istanbul ignore next */
      cov_2hu555lw70().s[62]++;
      this.knexInstance = {};
      /* istanbul ignore next */
      cov_2hu555lw70().s[63]++;
      this.isConnectedFlag = false;
      /* istanbul ignore next */
      cov_2hu555lw70().s[64]++;
      this.config = config;
      /* istanbul ignore next */
      cov_2hu555lw70().s[65]++;
      this.name = name;
      /* istanbul ignore next */
      cov_2hu555lw70().s[66]++;
      this.eventEmitter = eventEmitter;
      /* istanbul ignore next */
      cov_2hu555lw70().s[67]++;
      this.logger = logger;
      /* istanbul ignore next */
      cov_2hu555lw70().s[68]++;
      this.connectionId = (0, uuid_1.v4)();
      /* istanbul ignore next */
      cov_2hu555lw70().s[69]++;
      this.stats = this.initializeStats();
      /* istanbul ignore next */
      cov_2hu555lw70().s[70]++;
      this.initializePool();
      /* istanbul ignore next */
      cov_2hu555lw70().s[71]++;
      this.initializeKnex();
      // 自动连接数据库
      /* istanbul ignore next */
      cov_2hu555lw70().s[72]++;
      this.connect().catch(error => {
        /* istanbul ignore next */
        cov_2hu555lw70().f[7]++;
        cov_2hu555lw70().s[73]++;
        this.logger.warn('Failed to auto-connect to database, will retry on first query', logging_1.LogContext.DATABASE, {
          adapter: this.name,
          error: error.message
        });
      });
    }
    /**
     * @getter isConnected
     * @description 获取连接状态
     * @returns {boolean} 是否已连接
     */
    get isConnected() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[8]++;
      cov_2hu555lw70().s[74]++;
      return this.isConnectedFlag;
    }
    /**
     * @method connect
     * @description 连接到PostgreSQL数据库
     * @returns {Promise<void>} 连接结果
     */
    async connect() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[9]++;
      cov_2hu555lw70().s[75]++;
      try {
        /* istanbul ignore next */
        cov_2hu555lw70().s[76]++;
        this.logger.info(`Connecting to PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          host: this.config.host,
          port: this.config.port
        });
        // 测试连接池连接
        const client =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[77]++, await this.pool.connect());
        /* istanbul ignore next */
        cov_2hu555lw70().s[78]++;
        await client.query('SELECT 1');
        /* istanbul ignore next */
        cov_2hu555lw70().s[79]++;
        client.release();
        /* istanbul ignore next */
        cov_2hu555lw70().s[80]++;
        this.isConnectedFlag = true;
        /* istanbul ignore next */
        cov_2hu555lw70().s[81]++;
        this.logger.info(`Successfully connected to PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
          adapter: this.name
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[82]++;
        this.emitEvent('connected', {
          adapter: this.name,
          database: this.config.database,
          timestamp: new Date()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2hu555lw70().s[83]++;
        this.isConnectedFlag = false;
        /* istanbul ignore next */
        cov_2hu555lw70().s[84]++;
        this.logger.error(`Failed to connect to PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          error: error.message
        }, error);
        /* istanbul ignore next */
        cov_2hu555lw70().s[85]++;
        this.emitEvent('connection_error', {
          adapter: this.name,
          error: error.message,
          timestamp: new Date()
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[86]++;
        throw error;
      }
    }
    /**
     * @method disconnect
     * @description 断开PostgreSQL数据库连接
     * @returns {Promise<void>} 断开结果
     */
    async disconnect() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[10]++;
      cov_2hu555lw70().s[87]++;
      try {
        /* istanbul ignore next */
        cov_2hu555lw70().s[88]++;
        this.logger.info(`Disconnecting from PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
          adapter: this.name
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[89]++;
        await this.pool.end();
        /* istanbul ignore next */
        cov_2hu555lw70().s[90]++;
        await this.knexInstance.destroy();
        /* istanbul ignore next */
        cov_2hu555lw70().s[91]++;
        this.isConnectedFlag = false;
        /* istanbul ignore next */
        cov_2hu555lw70().s[92]++;
        this.logger.info(`Successfully disconnected from PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
          adapter: this.name
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[93]++;
        this.emitEvent('disconnected', {
          adapter: this.name,
          timestamp: new Date()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2hu555lw70().s[94]++;
        this.logger.error(`Failed to disconnect from PostgreSQL database: ${this.config.database}`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          error: error.message
        }, error);
        /* istanbul ignore next */
        cov_2hu555lw70().s[95]++;
        this.emitEvent('disconnection_error', {
          adapter: this.name,
          error: error.message,
          timestamp: new Date()
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[96]++;
        throw error;
      }
    }
    /**
     * @method query
     * @description 执行查询
     * @param sql SQL语句
     * @param params 查询参数
     * @param options 查询选项
     * @returns {Promise<QueryResult>} 查询结果
     */
    async query(sql, params =
    /* istanbul ignore next */
    (cov_2hu555lw70().b[31][0]++, []), options =
    /* istanbul ignore next */
    (cov_2hu555lw70().b[32][0]++, {})) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[11]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[97]++, Date.now());
      /* istanbul ignore next */
      cov_2hu555lw70().s[98]++;
      this.stats.totalQueries++;
      /* istanbul ignore next */
      cov_2hu555lw70().s[99]++;
      try {
        /* istanbul ignore next */
        cov_2hu555lw70().s[100]++;
        if (options.logQuery) {
          /* istanbul ignore next */
          cov_2hu555lw70().b[33][0]++;
          cov_2hu555lw70().s[101]++;
          this.logger.debug(`Executing query: ${sql}`, logging_1.LogContext.DATABASE, {
            adapter: this.name,
            params,
            tag: options.tag
          });
        } else
        /* istanbul ignore next */
        {
          cov_2hu555lw70().b[33][1]++;
        }
        const queryConfig =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[102]++, {
          text: sql,
          values: params,
          name:
          /* istanbul ignore next */
          (cov_2hu555lw70().b[34][0]++, options.tag) ||
          /* istanbul ignore next */
          (cov_2hu555lw70().b[34][1]++, 'unnamed')
        });
        const result =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[103]++, await this.pool.query(queryConfig));
        const responseTime =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[104]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[105]++;
        this.updateStats(responseTime, true);
        /* istanbul ignore next */
        cov_2hu555lw70().s[106]++;
        if (options.logQuery) {
          /* istanbul ignore next */
          cov_2hu555lw70().b[35][0]++;
          cov_2hu555lw70().s[107]++;
          this.logger.debug(`Query completed: ${sql}`, logging_1.LogContext.DATABASE, {
            adapter: this.name,
            responseTime,
            rowCount: result.rowCount
          });
        } else
        /* istanbul ignore next */
        {
          cov_2hu555lw70().b[35][1]++;
        }
        cov_2hu555lw70().s[108]++;
        this.emitEvent('query_executed', {
          adapter: this.name,
          sql,
          params,
          responseTime,
          rowCount: result.rowCount,
          timestamp: new Date()
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[109]++;
        return result;
      } catch (error) {
        const responseTime =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[110]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[111]++;
        this.updateStats(responseTime, false);
        /* istanbul ignore next */
        cov_2hu555lw70().s[112]++;
        this.logger.error(`Query failed: ${sql}`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          params,
          responseTime,
          error: error.message
        }, error);
        /* istanbul ignore next */
        cov_2hu555lw70().s[113]++;
        this.emitEvent('query_error', {
          adapter: this.name,
          sql,
          params,
          error: error.message,
          responseTime,
          timestamp: new Date()
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[114]++;
        throw error;
      }
    }
    /**
     * @method execute
     * @description 执行命令
     * @param sql SQL语句
     * @param params 参数
     * @param options 执行选项
     * @returns {Promise<QueryResult>} 执行结果
     */
    async execute(sql, params =
    /* istanbul ignore next */
    (cov_2hu555lw70().b[36][0]++, []), options =
    /* istanbul ignore next */
    (cov_2hu555lw70().b[37][0]++, {})) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[12]++;
      cov_2hu555lw70().s[115]++;
      return this.query(sql, params, {
        ...options,
        logQuery: true
      });
    }
    /**
     * @method transaction
     * @description 执行事务
     * @param callback 事务回调函数
     * @param options 事务选项
     * @returns {Promise<T>} 事务结果
     */
    async transaction(callback, options =
    /* istanbul ignore next */
    (cov_2hu555lw70().b[38][0]++, {})) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[13]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[116]++, Date.now());
      /* istanbul ignore next */
      cov_2hu555lw70().s[117]++;
      try {
        /* istanbul ignore next */
        cov_2hu555lw70().s[118]++;
        this.logger.debug(`Starting transaction`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          tag: options.tag
        });
        const result =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[119]++, await this.knexInstance.transaction(async trx => {
          /* istanbul ignore next */
          cov_2hu555lw70().f[14]++;
          cov_2hu555lw70().s[120]++;
          if (options.isolationLevel) {
            /* istanbul ignore next */
            cov_2hu555lw70().b[39][0]++;
            cov_2hu555lw70().s[121]++;
            await trx.raw(`SET TRANSACTION ISOLATION LEVEL ${options.isolationLevel.toUpperCase()}`);
          } else
          /* istanbul ignore next */
          {
            cov_2hu555lw70().b[39][1]++;
          }
          cov_2hu555lw70().s[122]++;
          if (options.readOnly) {
            /* istanbul ignore next */
            cov_2hu555lw70().b[40][0]++;
            cov_2hu555lw70().s[123]++;
            await trx.raw('SET TRANSACTION READ ONLY');
          } else
          /* istanbul ignore next */
          {
            cov_2hu555lw70().b[40][1]++;
          }
          cov_2hu555lw70().s[124]++;
          return await callback(trx);
        }));
        const responseTime =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[125]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[126]++;
        this.logger.debug(`Transaction completed`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          responseTime,
          tag: options.tag
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[127]++;
        this.emitEvent('transaction_completed', {
          adapter: this.name,
          responseTime,
          tag: options.tag,
          timestamp: new Date()
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[128]++;
        return result;
      } catch (error) {
        const responseTime =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[129]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[130]++;
        this.logger.error(`Transaction failed`, logging_1.LogContext.DATABASE, {
          adapter: this.name,
          responseTime,
          error: error.message,
          tag: options.tag
        }, error);
        /* istanbul ignore next */
        cov_2hu555lw70().s[131]++;
        this.emitEvent('transaction_error', {
          adapter: this.name,
          error: error.message,
          responseTime,
          tag: options.tag,
          timestamp: new Date()
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[132]++;
        throw error;
      }
    }
    /**
     * @method getHealth
     * @description 获取健康状态
     * @returns {Promise<DatabaseHealth>} 健康状态
     */
    async getHealth() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[15]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2hu555lw70().s[133]++, Date.now());
      /* istanbul ignore next */
      cov_2hu555lw70().s[134]++;
      try {
        /* istanbul ignore next */
        cov_2hu555lw70().s[135]++;
        // 执行健康检查查询
        await this.query('SELECT 1 as health_check', [], {
          tag: 'health_check'
        });
        const responseTime =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[136]++, Date.now() - startTime);
        const poolStatus =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[137]++, {
          total: this.pool.totalCount,
          idle: this.pool.idleCount,
          active: this.pool.totalCount - this.pool.idleCount,
          waiting: this.pool.waitingCount
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[138]++;
        return {
          healthy: true,
          connected: this.isConnectedFlag,
          responseTime,
          lastCheck: new Date(),
          poolStatus
        };
      } catch (error) {
        const responseTime =
        /* istanbul ignore next */
        (cov_2hu555lw70().s[139]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[140]++;
        return {
          healthy: false,
          connected: false,
          responseTime,
          error: error.message,
          lastCheck: new Date()
        };
      }
    }
    /**
     * @method getStats
     * @description 获取统计信息
     * @returns {Promise<DatabaseStats>} 统计信息
     */
    async getStats() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[16]++;
      cov_2hu555lw70().s[141]++;
      // 模拟异步操作以满足接口要求
      await Promise.resolve();
      /* istanbul ignore next */
      cov_2hu555lw70().s[142]++;
      return {
        ...this.stats
      };
    }
    /**
     * @method resetStats
     * @description 重置统计信息
     * @returns {Promise<void>} 重置结果
     */
    async resetStats() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[17]++;
      cov_2hu555lw70().s[143]++;
      // 模拟异步操作以满足接口要求
      await Promise.resolve();
      /* istanbul ignore next */
      cov_2hu555lw70().s[144]++;
      this.stats = this.initializeStats();
      /* istanbul ignore next */
      cov_2hu555lw70().s[145]++;
      this.logger.info('Database stats reset', logging_1.LogContext.DATABASE, {
        adapter: this.name
      });
    }
    /**
     * @method getConnection
     * @description 获取数据库连接
     * @returns {Promise<DatabaseConnection>} 数据库连接
     */
    async getConnection() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[18]++;
      cov_2hu555lw70().s[146]++;
      // 模拟异步操作以满足接口要求
      await Promise.resolve();
      /* istanbul ignore next */
      cov_2hu555lw70().s[147]++;
      return {
        id: this.connectionId,
        status: this.isConnectedFlag ?
        /* istanbul ignore next */
        (cov_2hu555lw70().b[41][0]++, 'connected') :
        /* istanbul ignore next */
        (cov_2hu555lw70().b[41][1]++, 'disconnected'),
        config: this.config,
        instance: this.pool,
        lastActivity: new Date()
      };
    }
    /**
     * @method ping
     * @description 数据库连接测试
     * @returns {Promise<boolean>} 测试结果
     */
    async ping() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[19]++;
      cov_2hu555lw70().s[148]++;
      try {
        /* istanbul ignore next */
        cov_2hu555lw70().s[149]++;
        await this.query('SELECT 1', [], {
          tag: 'ping_test'
        });
        /* istanbul ignore next */
        cov_2hu555lw70().s[150]++;
        return true;
      } catch {
        /* istanbul ignore next */
        cov_2hu555lw70().s[151]++;
        return false;
      }
    }
    /**
     * @method getKnex
     * @description 获取Knex实例
     * @returns {Knex} Knex实例
     */
    getKnex() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[20]++;
      cov_2hu555lw70().s[152]++;
      return this.knexInstance;
    }
    /**
     * @method getPool
     * @description 获取连接池实例
     * @returns {Pool} 连接池实例
     */
    getPool() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[21]++;
      cov_2hu555lw70().s[153]++;
      return this.pool;
    }
    /**
     * @private
     * @method initializePool
     * @description 初始化连接池
     */
    initializePool() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[22]++;
      cov_2hu555lw70().s[154]++;
      this.pool = new pg_1.Pool({
        host: this.config.host,
        port: this.config.port,
        user: this.config.username,
        password: this.config.password,
        database: this.config.database,
        ssl: this.config.ssl ?
        /* istanbul ignore next */
        (cov_2hu555lw70().b[42][0]++, {
          rejectUnauthorized: false
        }) :
        /* istanbul ignore next */
        (cov_2hu555lw70().b[42][1]++, false),
        max:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[43][0]++, this.config.pool?.max) ||
        /* istanbul ignore next */
        (cov_2hu555lw70().b[43][1]++, 20),
        min:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[44][0]++, this.config.pool?.min) ||
        /* istanbul ignore next */
        (cov_2hu555lw70().b[44][1]++, 2),
        idleTimeoutMillis:
        /* istanbul ignore next */
        (cov_2hu555lw70().b[45][0]++, this.config.pool?.idleTimeoutMillis) ||
        /* istanbul ignore next */
        (cov_2hu555lw70().b[45][1]++, 30000)
      });
      // 监听连接池事件
      /* istanbul ignore next */
      cov_2hu555lw70().s[155]++;
      this.pool.on('connect', () => {
        /* istanbul ignore next */
        cov_2hu555lw70().f[23]++;
        cov_2hu555lw70().s[156]++;
        this.logger.debug('New client connected to pool', logging_1.LogContext.DATABASE, {
          adapter: this.name
        });
      });
      /* istanbul ignore next */
      cov_2hu555lw70().s[157]++;
      this.pool.on('error', err => {
        /* istanbul ignore next */
        cov_2hu555lw70().f[24]++;
        cov_2hu555lw70().s[158]++;
        this.logger.error('Unexpected error on idle client', logging_1.LogContext.DATABASE, {
          adapter: this.name
        }, err);
      });
    }
    /**
     * @private
     * @method initializeKnex
     * @description 初始化Knex实例
     */
    initializeKnex() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[25]++;
      cov_2hu555lw70().s[159]++;
      this.knexInstance = (0, knex_1.knex)({
        client: 'postgresql',
        connection: {
          host: this.config.host,
          port: this.config.port,
          user: this.config.username,
          password: this.config.password,
          database: this.config.database,
          ssl: this.config.ssl ?
          /* istanbul ignore next */
          (cov_2hu555lw70().b[46][0]++, {
            rejectUnauthorized: false
          }) :
          /* istanbul ignore next */
          (cov_2hu555lw70().b[46][1]++, false)
        },
        pool: {
          min:
          /* istanbul ignore next */
          (cov_2hu555lw70().b[47][0]++, this.config.pool?.min) ||
          /* istanbul ignore next */
          (cov_2hu555lw70().b[47][1]++, 2),
          max:
          /* istanbul ignore next */
          (cov_2hu555lw70().b[48][0]++, this.config.pool?.max) ||
          /* istanbul ignore next */
          (cov_2hu555lw70().b[48][1]++, 20),
          idleTimeoutMillis:
          /* istanbul ignore next */
          (cov_2hu555lw70().b[49][0]++, this.config.pool?.idleTimeoutMillis) ||
          /* istanbul ignore next */
          (cov_2hu555lw70().b[49][1]++, 30000)
        },
        debug: false
      });
    }
    /**
     * @private
     * @method initializeStats
     * @description 初始化统计信息
     * @returns {DatabaseStats} 初始统计信息
     */
    initializeStats() {
      /* istanbul ignore next */
      cov_2hu555lw70().f[26]++;
      cov_2hu555lw70().s[160]++;
      return {
        totalQueries: 0,
        successfulQueries: 0,
        failedQueries: 0,
        averageResponseTime: 0,
        maxResponseTime: 0,
        minResponseTime: 0,
        activeConnections: 0,
        idleConnections: 0,
        lastReset: new Date()
      };
    }
    /**
     * @private
     * @method updateStats
     * @description 更新统计信息
     * @param responseTime 响应时间
     * @param success 是否成功
     */
    updateStats(responseTime, success) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[27]++;
      cov_2hu555lw70().s[161]++;
      if (success) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[50][0]++;
        cov_2hu555lw70().s[162]++;
        this.stats.successfulQueries++;
      } else {
        /* istanbul ignore next */
        cov_2hu555lw70().b[50][1]++;
        cov_2hu555lw70().s[163]++;
        this.stats.failedQueries++;
      }
      // 更新响应时间统计
      /* istanbul ignore next */
      cov_2hu555lw70().s[164]++;
      if (this.stats.totalQueries === 1) {
        /* istanbul ignore next */
        cov_2hu555lw70().b[51][0]++;
        cov_2hu555lw70().s[165]++;
        this.stats.minResponseTime = responseTime;
        /* istanbul ignore next */
        cov_2hu555lw70().s[166]++;
        this.stats.maxResponseTime = responseTime;
        /* istanbul ignore next */
        cov_2hu555lw70().s[167]++;
        this.stats.averageResponseTime = responseTime;
      } else {
        /* istanbul ignore next */
        cov_2hu555lw70().b[51][1]++;
        cov_2hu555lw70().s[168]++;
        this.stats.minResponseTime = Math.min(this.stats.minResponseTime, responseTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[169]++;
        this.stats.maxResponseTime = Math.max(this.stats.maxResponseTime, responseTime);
        /* istanbul ignore next */
        cov_2hu555lw70().s[170]++;
        this.stats.averageResponseTime = (this.stats.averageResponseTime * (this.stats.totalQueries - 1) + responseTime) / this.stats.totalQueries;
      }
      // 更新连接池统计
      /* istanbul ignore next */
      cov_2hu555lw70().s[171]++;
      this.stats.activeConnections = this.pool.totalCount - this.pool.idleCount;
      /* istanbul ignore next */
      cov_2hu555lw70().s[172]++;
      this.stats.idleConnections = this.pool.idleCount;
    }
    /**
     * @private
     * @method emitEvent
     * @description 发射事件
     * @param event 事件名称
     * @param _data 事件数据
     */
    emitEvent(event, _data) {
      /* istanbul ignore next */
      cov_2hu555lw70().f[28]++;
      cov_2hu555lw70().s[173]++;
      this.eventEmitter.emit(`database.${event}`, {
        adapter: this.name,
        ..._data
      });
    }
  });
  /* istanbul ignore next */
  cov_2hu555lw70().s[174]++;
  __setFunctionName(_classThis, "PostgreSQLAdapter");
  /* istanbul ignore next */
  cov_2hu555lw70().s[175]++;
  (() => {
    /* istanbul ignore next */
    cov_2hu555lw70().f[29]++;
    const _metadata =
    /* istanbul ignore next */
    (cov_2hu555lw70().s[176]++,
    /* istanbul ignore next */
    (cov_2hu555lw70().b[53][0]++, typeof Symbol === "function") &&
    /* istanbul ignore next */
    (cov_2hu555lw70().b[53][1]++, Symbol.metadata) ?
    /* istanbul ignore next */
    (cov_2hu555lw70().b[52][0]++, Object.create(null)) :
    /* istanbul ignore next */
    (cov_2hu555lw70().b[52][1]++, void 0));
    /* istanbul ignore next */
    cov_2hu555lw70().s[177]++;
    __esDecorate(null, _classDescriptor = {
      value: _classThis
    }, _classDecorators, {
      kind: "class",
      name: _classThis.name,
      metadata: _metadata
    }, null, _classExtraInitializers);
    /* istanbul ignore next */
    cov_2hu555lw70().s[178]++;
    PostgreSQLAdapter = _classThis = _classDescriptor.value;
    /* istanbul ignore next */
    cov_2hu555lw70().s[179]++;
    if (_metadata) {
      /* istanbul ignore next */
      cov_2hu555lw70().b[54][0]++;
      cov_2hu555lw70().s[180]++;
      Object.defineProperty(_classThis, Symbol.metadata, {
        enumerable: true,
        configurable: true,
        writable: true,
        value: _metadata
      });
    } else
    /* istanbul ignore next */
    {
      cov_2hu555lw70().b[54][1]++;
    }
    cov_2hu555lw70().s[181]++;
    __runInitializers(_classThis, _classExtraInitializers);
  })();
  /* istanbul ignore next */
  cov_2hu555lw70().s[182]++;
  return PostgreSQLAdapter = _classThis;
})());
/* istanbul ignore next */
cov_2hu555lw70().s[183]++;
exports.PostgreSQLAdapter = PostgreSQLAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,