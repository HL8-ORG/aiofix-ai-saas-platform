6f4666d737e99cd31e5ba67d184eb5e0
"use strict";

/* istanbul ignore next */
function cov_gc6bto892() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts";
  var hash = "e1118348de0fc2ac1e6594bb04148ad1e9bf4a39";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 111
        }
      },
      "2": {
        start: {
          line: 3,
          column: 70
        },
        end: {
          line: 3,
          column: 111
        }
      },
      "3": {
        start: {
          line: 3,
          column: 112
        },
        end: {
          line: 3,
          column: 121
        }
      },
      "4": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 29
        }
      },
      "5": {
        start: {
          line: 4,
          column: 37
        },
        end: {
          line: 4,
          column: 100
        }
      },
      "6": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 91
        }
      },
      "7": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 108
        }
      },
      "8": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "9": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "11": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "12": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "13": {
        start: {
          line: 10,
          column: 33
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "14": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "15": {
        start: {
          line: 11,
          column: 40
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "16": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 182
        }
      },
      "17": {
        start: {
          line: 12,
          column: 48
        },
        end: {
          line: 12,
          column: 136
        }
      },
      "18": {
        start: {
          line: 12,
          column: 58
        },
        end: {
          line: 12,
          column: 136
        }
      },
      "19": {
        start: {
          line: 12,
          column: 137
        },
        end: {
          line: 12,
          column: 179
        }
      },
      "20": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 134
        }
      },
      "21": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "22": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "23": {
        start: {
          line: 15,
          column: 35
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "24": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "25": {
        start: {
          line: 16,
          column: 63
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "26": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "27": {
        start: {
          line: 17,
          column: 40
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "28": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "29": {
        start: {
          line: 18,
          column: 40
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "30": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "31": {
        start: {
          line: 19,
          column: 41
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "32": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "33": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "34": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "35": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "36": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "37": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "38": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 16
        }
      },
      "39": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "40": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "41": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "42": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "43": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 96
        }
      },
      "44": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "45": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "46": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "47": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "48": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 121
        }
      },
      "49": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "50": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "51": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "52": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "53": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "54": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 647,
          column: 4
        }
      },
      "55": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 55
        }
      },
      "56": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "57": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 637,
          column: 5
        }
      },
      "58": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "59": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 33
        }
      },
      "60": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 35
        }
      },
      "61": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 34
        }
      },
      "62": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 45
        }
      },
      "63": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 88,
          column: 14
        }
      },
      "64": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "65": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 99,
          column: 14
        }
      },
      "66": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 37
        }
      },
      "67": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 135
        }
      },
      "68": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 36
        }
      },
      "69": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "70": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 49
        }
      },
      "71": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 46
        }
      },
      "72": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 31
        }
      },
      "73": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 40
        }
      },
      "74": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 41
        }
      },
      "75": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 89
        }
      },
      "76": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "77": {
        start: {
          line: 127,
          column: 34
        },
        end: {
          line: 127,
          column: 63
        }
      },
      "78": {
        start: {
          line: 128,
          column: 30
        },
        end: {
          line: 128,
          column: 55
        }
      },
      "79": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "80": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 44
        }
      },
      "81": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 131,
          column: 32
        }
      },
      "82": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 141,
          column: 17
        }
      },
      "83": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "84": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 136,
          column: 58
        }
      },
      "85": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 59
        }
      },
      "86": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 48
        }
      },
      "87": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 44
        }
      },
      "88": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 32
        }
      },
      "89": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 56
        }
      },
      "90": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 39
        }
      },
      "91": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "92": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 127
        }
      },
      "93": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 40
        }
      },
      "94": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 28
        }
      },
      "95": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "96": {
        start: {
          line: 164,
          column: 34
        },
        end: {
          line: 164,
          column: 63
        }
      },
      "97": {
        start: {
          line: 165,
          column: 33
        },
        end: {
          line: 165,
          column: 81
        }
      },
      "98": {
        start: {
          line: 166,
          column: 28
        },
        end: {
          line: 166,
          column: 66
        }
      },
      "99": {
        start: {
          line: 168,
          column: 34
        },
        end: {
          line: 168,
          column: 59
        }
      },
      "100": {
        start: {
          line: 170,
          column: 35
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "101": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 187,
          column: 17
        }
      },
      "102": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 46
        }
      },
      "103": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "104": {
        start: {
          line: 198,
          column: 38
        },
        end: {
          line: 198,
          column: 63
        }
      },
      "105": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "106": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 63
        }
      },
      "107": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 46
        }
      },
      "108": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 49
        }
      },
      "109": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 49
        }
      },
      "110": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 55
        }
      },
      "111": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 50
        }
      },
      "112": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 215,
          column: 28
        }
      },
      "113": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 28
        }
      },
      "114": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 127
        }
      },
      "115": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 29
        }
      },
      "116": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "117": {
        start: {
          line: 231,
          column: 34
        },
        end: {
          line: 231,
          column: 63
        }
      },
      "118": {
        start: {
          line: 232,
          column: 30
        },
        end: {
          line: 232,
          column: 55
        }
      },
      "119": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 235,
          column: 17
        }
      },
      "120": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 33
        }
      },
      "121": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "122": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 54
        }
      },
      "123": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 55
        }
      },
      "124": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 58
        }
      },
      "125": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 51
        }
      },
      "126": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 246,
          column: 28
        }
      },
      "127": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 28
        }
      },
      "128": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 128
        }
      },
      "129": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 29
        }
      },
      "130": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "131": {
        start: {
          line: 262,
          column: 34
        },
        end: {
          line: 262,
          column: 63
        }
      },
      "132": {
        start: {
          line: 263,
          column: 30
        },
        end: {
          line: 263,
          column: 55
        }
      },
      "133": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 266,
          column: 17
        }
      },
      "134": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 265,
          column: 33
        }
      },
      "135": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 274,
          column: 17
        }
      },
      "136": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 49
        }
      },
      "137": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 58
        }
      },
      "138": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 271,
          column: 59
        }
      },
      "139": {
        start: {
          line: 272,
          column: 20
        },
        end: {
          line: 272,
          column: 48
        }
      },
      "140": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 33
        }
      },
      "141": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 28
        }
      },
      "142": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 136
        }
      },
      "143": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 29
        }
      },
      "144": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "145": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 354,
          column: 17
        }
      },
      "146": {
        start: {
          line: 292,
          column: 41
        },
        end: {
          line: 292,
          column: 43
        }
      },
      "147": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 304,
          column: 21
        }
      },
      "148": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 303,
          column: 25
        }
      },
      "149": {
        start: {
          line: 295,
          column: 46
        },
        end: {
          line: 295,
          column: 78
        }
      },
      "150": {
        start: {
          line: 296,
          column: 28
        },
        end: {
          line: 298,
          column: 29
        }
      },
      "151": {
        start: {
          line: 297,
          column: 32
        },
        end: {
          line: 297,
          column: 61
        }
      },
      "152": {
        start: {
          line: 302,
          column: 28
        },
        end: {
          line: 302,
          column: 37
        }
      },
      "153": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 313,
          column: 21
        }
      },
      "154": {
        start: {
          line: 307,
          column: 24
        },
        end: {
          line: 312,
          column: 25
        }
      },
      "155": {
        start: {
          line: 308,
          column: 28
        },
        end: {
          line: 311,
          column: 29
        }
      },
      "156": {
        start: {
          line: 310,
          column: 32
        },
        end: {
          line: 310,
          column: 61
        }
      },
      "157": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 321,
          column: 21
        }
      },
      "158": {
        start: {
          line: 316,
          column: 24
        },
        end: {
          line: 320,
          column: 25
        }
      },
      "159": {
        start: {
          line: 317,
          column: 28
        },
        end: {
          line: 319,
          column: 29
        }
      },
      "160": {
        start: {
          line: 318,
          column: 32
        },
        end: {
          line: 318,
          column: 61
        }
      },
      "161": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 330,
          column: 21
        }
      },
      "162": {
        start: {
          line: 324,
          column: 24
        },
        end: {
          line: 329,
          column: 25
        }
      },
      "163": {
        start: {
          line: 325,
          column: 42
        },
        end: {
          line: 325,
          column: 62
        }
      },
      "164": {
        start: {
          line: 326,
          column: 28
        },
        end: {
          line: 328,
          column: 29
        }
      },
      "165": {
        start: {
          line: 327,
          column: 32
        },
        end: {
          line: 327,
          column: 61
        }
      },
      "166": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 339,
          column: 21
        }
      },
      "167": {
        start: {
          line: 332,
          column: 38
        },
        end: {
          line: 332,
          column: 63
        }
      },
      "168": {
        start: {
          line: 333,
          column: 24
        },
        end: {
          line: 338,
          column: 25
        }
      },
      "169": {
        start: {
          line: 334,
          column: 28
        },
        end: {
          line: 334,
          column: 57
        }
      },
      "170": {
        start: {
          line: 335,
          column: 28
        },
        end: {
          line: 335,
          column: 66
        }
      },
      "171": {
        start: {
          line: 336,
          column: 28
        },
        end: {
          line: 336,
          column: 67
        }
      },
      "172": {
        start: {
          line: 337,
          column: 28
        },
        end: {
          line: 337,
          column: 63
        }
      },
      "173": {
        start: {
          line: 340,
          column: 20
        },
        end: {
          line: 340,
          column: 62
        }
      },
      "174": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 344,
          column: 32
        }
      },
      "175": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 39
        }
      },
      "176": {
        start: {
          line: 349,
          column: 20
        },
        end: {
          line: 349,
          column: 48
        }
      },
      "177": {
        start: {
          line: 350,
          column: 20
        },
        end: {
          line: 350,
          column: 49
        }
      },
      "178": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 48
        }
      },
      "179": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 45
        }
      },
      "180": {
        start: {
          line: 353,
          column: 20
        },
        end: {
          line: 353,
          column: 47
        }
      },
      "181": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 28
        }
      },
      "182": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 122
        }
      },
      "183": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 29
        }
      },
      "184": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 37
        }
      },
      "185": {
        start: {
          line: 376,
          column: 30
        },
        end: {
          line: 376,
          column: 40
        }
      },
      "186": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 400,
          column: 13
        }
      },
      "187": {
        start: {
          line: 379,
          column: 32
        },
        end: {
          line: 379,
          column: 70
        }
      },
      "188": {
        start: {
          line: 380,
          column: 34
        },
        end: {
          line: 380,
          column: 59
        }
      },
      "189": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 66
        }
      },
      "190": {
        start: {
          line: 382,
          column: 34
        },
        end: {
          line: 382,
          column: 57
        }
      },
      "191": {
        start: {
          line: 383,
          column: 37
        },
        end: {
          line: 383,
          column: 59
        }
      },
      "192": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 389,
          column: 18
        }
      },
      "193": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 103
        }
      },
      "194": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 399,
          column: 18
        }
      },
      "195": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 418,
          column: 14
        }
      },
      "196": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 428,
          column: 44
        }
      },
      "197": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 427,
          column: 45
        }
      },
      "198": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 437,
          column: 23
        }
      },
      "199": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 23
        }
      },
      "200": {
        start: {
          line: 438,
          column: 33
        },
        end: {
          line: 438,
          column: 35
        }
      },
      "201": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "202": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 442,
          column: 17
        }
      },
      "203": {
        start: {
          line: 441,
          column: 20
        },
        end: {
          line: 441,
          column: 49
        }
      },
      "204": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 453,
          column: 13
        }
      },
      "205": {
        start: {
          line: 445,
          column: 30
        },
        end: {
          line: 445,
          column: 55
        }
      },
      "206": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 452,
          column: 17
        }
      },
      "207": {
        start: {
          line: 447,
          column: 20
        },
        end: {
          line: 447,
          column: 49
        }
      },
      "208": {
        start: {
          line: 448,
          column: 20
        },
        end: {
          line: 448,
          column: 58
        }
      },
      "209": {
        start: {
          line: 449,
          column: 20
        },
        end: {
          line: 449,
          column: 59
        }
      },
      "210": {
        start: {
          line: 450,
          column: 20
        },
        end: {
          line: 450,
          column: 55
        }
      },
      "211": {
        start: {
          line: 451,
          column: 20
        },
        end: {
          line: 451,
          column: 48
        }
      },
      "212": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 54
        }
      },
      "213": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 458,
          column: 24
        }
      },
      "214": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 461,
          column: 13
        }
      },
      "215": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 115
        }
      },
      "216": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 81
        }
      },
      "217": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 486,
          column: 13
        }
      },
      "218": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 73
        }
      },
      "219": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 485,
          column: 25
        }
      },
      "220": {
        start: {
          line: 496,
          column: 24
        },
        end: {
          line: 496,
          column: 34
        }
      },
      "221": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 38
        }
      },
      "222": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 43
        }
      },
      "223": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 500,
          column: 37
        }
      },
      "224": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 32
        }
      },
      "225": {
        start: {
          line: 503,
          column: 32
        },
        end: {
          line: 503,
          column: 72
        }
      },
      "226": {
        start: {
          line: 504,
          column: 28
        },
        end: {
          line: 504,
          column: 43
        }
      },
      "227": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 57
        }
      },
      "228": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 44
        }
      },
      "229": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 50
        }
      },
      "230": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 45
        }
      },
      "231": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 45
        }
      },
      "232": {
        start: {
          line: 527,
          column: 26
        },
        end: {
          line: 527,
          column: 61
        }
      },
      "233": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 530,
          column: 13
        }
      },
      "234": {
        start: {
          line: 529,
          column: 16
        },
        end: {
          line: 529,
          column: 50
        }
      },
      "235": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 580,
          column: 13
        }
      },
      "236": {
        start: {
          line: 543,
          column: 20
        },
        end: {
          line: 545,
          column: 21
        }
      },
      "237": {
        start: {
          line: 544,
          column: 24
        },
        end: {
          line: 544,
          column: 57
        }
      },
      "238": {
        start: {
          line: 546,
          column: 20
        },
        end: {
          line: 546,
          column: 26
        }
      },
      "239": {
        start: {
          line: 549,
          column: 34
        },
        end: {
          line: 549,
          column: 42
        }
      },
      "240": {
        start: {
          line: 550,
          column: 20
        },
        end: {
          line: 555,
          column: 21
        }
      },
      "241": {
        start: {
          line: 551,
          column: 24
        },
        end: {
          line: 554,
          column: 25
        }
      },
      "242": {
        start: {
          line: 552,
          column: 28
        },
        end: {
          line: 552,
          column: 43
        }
      },
      "243": {
        start: {
          line: 553,
          column: 28
        },
        end: {
          line: 553,
          column: 45
        }
      },
      "244": {
        start: {
          line: 556,
          column: 20
        },
        end: {
          line: 556,
          column: 26
        }
      },
      "245": {
        start: {
          line: 560,
          column: 37
        },
        end: {
          line: 560,
          column: 45
        }
      },
      "246": {
        start: {
          line: 561,
          column: 20
        },
        end: {
          line: 566,
          column: 21
        }
      },
      "247": {
        start: {
          line: 562,
          column: 24
        },
        end: {
          line: 565,
          column: 25
        }
      },
      "248": {
        start: {
          line: 563,
          column: 28
        },
        end: {
          line: 563,
          column: 57
        }
      },
      "249": {
        start: {
          line: 564,
          column: 28
        },
        end: {
          line: 564,
          column: 45
        }
      },
      "250": {
        start: {
          line: 567,
          column: 20
        },
        end: {
          line: 567,
          column: 26
        }
      },
      "251": {
        start: {
          line: 571,
          column: 41
        },
        end: {
          line: 571,
          column: 49
        }
      },
      "252": {
        start: {
          line: 572,
          column: 20
        },
        end: {
          line: 577,
          column: 21
        }
      },
      "253": {
        start: {
          line: 573,
          column: 24
        },
        end: {
          line: 576,
          column: 25
        }
      },
      "254": {
        start: {
          line: 574,
          column: 28
        },
        end: {
          line: 574,
          column: 67
        }
      },
      "255": {
        start: {
          line: 575,
          column: 28
        },
        end: {
          line: 575,
          column: 45
        }
      },
      "256": {
        start: {
          line: 578,
          column: 20
        },
        end: {
          line: 578,
          column: 26
        }
      },
      "257": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 614,
          column: 13
        }
      },
      "258": {
        start: {
          line: 582,
          column: 30
        },
        end: {
          line: 582,
          column: 56
        }
      },
      "259": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 594,
          column: 17
        }
      },
      "260": {
        start: {
          line: 584,
          column: 20
        },
        end: {
          line: 584,
          column: 50
        }
      },
      "261": {
        start: {
          line: 585,
          column: 20
        },
        end: {
          line: 585,
          column: 59
        }
      },
      "262": {
        start: {
          line: 586,
          column: 20
        },
        end: {
          line: 586,
          column: 60
        }
      },
      "263": {
        start: {
          line: 587,
          column: 20
        },
        end: {
          line: 587,
          column: 55
        }
      },
      "264": {
        start: {
          line: 588,
          column: 20
        },
        end: {
          line: 588,
          column: 48
        }
      },
      "265": {
        start: {
          line: 589,
          column: 20
        },
        end: {
          line: 589,
          column: 62
        }
      },
      "266": {
        start: {
          line: 590,
          column: 20
        },
        end: {
          line: 593,
          column: 32
        }
      },
      "267": {
        start: {
          line: 598,
          column: 16
        },
        end: {
          line: 613,
          column: 17
        }
      },
      "268": {
        start: {
          line: 599,
          column: 20
        },
        end: {
          line: 599,
          column: 53
        }
      },
      "269": {
        start: {
          line: 600,
          column: 34
        },
        end: {
          line: 600,
          column: 60
        }
      },
      "270": {
        start: {
          line: 601,
          column: 20
        },
        end: {
          line: 612,
          column: 21
        }
      },
      "271": {
        start: {
          line: 602,
          column: 24
        },
        end: {
          line: 602,
          column: 54
        }
      },
      "272": {
        start: {
          line: 603,
          column: 24
        },
        end: {
          line: 603,
          column: 63
        }
      },
      "273": {
        start: {
          line: 604,
          column: 24
        },
        end: {
          line: 604,
          column: 64
        }
      },
      "274": {
        start: {
          line: 605,
          column: 24
        },
        end: {
          line: 605,
          column: 59
        }
      },
      "275": {
        start: {
          line: 606,
          column: 24
        },
        end: {
          line: 606,
          column: 52
        }
      },
      "276": {
        start: {
          line: 607,
          column: 24
        },
        end: {
          line: 607,
          column: 66
        }
      },
      "277": {
        start: {
          line: 608,
          column: 24
        },
        end: {
          line: 611,
          column: 36
        }
      },
      "278": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 619,
          column: 13
        }
      },
      "279": {
        start: {
          line: 617,
          column: 16
        },
        end: {
          line: 617,
          column: 55
        }
      },
      "280": {
        start: {
          line: 618,
          column: 16
        },
        end: {
          line: 618,
          column: 56
        }
      },
      "281": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 633,
          column: 13
        }
      },
      "282": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 629,
          column: 34
        }
      },
      "283": {
        start: {
          line: 632,
          column: 16
        },
        end: {
          line: 632,
          column: 36
        }
      },
      "284": {
        start: {
          line: 634,
          column: 26
        },
        end: {
          line: 634,
          column: 61
        }
      },
      "285": {
        start: {
          line: 635,
          column: 12
        },
        end: {
          line: 635,
          column: 73
        }
      },
      "286": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 638,
          column: 56
        }
      },
      "287": {
        start: {
          line: 639,
          column: 4
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "288": {
        start: {
          line: 640,
          column: 26
        },
        end: {
          line: 640,
          column: 104
        }
      },
      "289": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 641,
          column: 181
        }
      },
      "290": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 642,
          column: 65
        }
      },
      "291": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 643,
          column: 150
        }
      },
      "292": {
        start: {
          line: 643,
          column: 23
        },
        end: {
          line: 643,
          column: 150
        }
      },
      "293": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 644,
          column: 63
        }
      },
      "294": {
        start: {
          line: 646,
          column: 4
        },
        end: {
          line: 646,
          column: 43
        }
      },
      "295": {
        start: {
          line: 648,
          column: 0
        },
        end: {
          line: 648,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 50
          },
          end: {
            line: 2,
            column: 51
          }
        },
        loc: {
          start: {
            line: 2,
            column: 136
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "accept",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 19
          }
        },
        loc: {
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 3,
            column: 123
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 34
          }
        },
        loc: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 12,
            column: 181
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 29,
            column: 61
          }
        },
        loc: {
          start: {
            line: 29,
            column: 100
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 61
          }
        },
        loc: {
          start: {
            line: 36,
            column: 87
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 647,
            column: 1
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        loc: {
          start: {
            line: 68,
            column: 40
          },
          end: {
            line: 103,
            column: 9
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        loc: {
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 118,
            column: 9
          }
        },
        line: 108
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        loc: {
          start: {
            line: 125,
            column: 23
          },
          end: {
            line: 153,
            column: 9
          }
        },
        line: 125
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        loc: {
          start: {
            line: 162,
            column: 39
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 162
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 253,
            column: 9
          }
        },
        line: 229
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        loc: {
          start: {
            line: 260,
            column: 26
          },
          end: {
            line: 281,
            column: 9
          }
        },
        line: 260
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        loc: {
          start: {
            line: 288,
            column: 31
          },
          end: {
            line: 361,
            column: 9
          }
        },
        line: 288
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        loc: {
          start: {
            line: 367,
            column: 25
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 367
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        },
        loc: {
          start: {
            line: 375,
            column: 26
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 375
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 407,
            column: 9
          }
        },
        loc: {
          start: {
            line: 407,
            column: 27
          },
          end: {
            line: 419,
            column: 9
          }
        },
        line: 407
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        loc: {
          start: {
            line: 425,
            column: 28
          },
          end: {
            line: 429,
            column: 9
          }
        },
        line: 425
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 426,
            column: 44
          },
          end: {
            line: 426,
            column: 45
          }
        },
        loc: {
          start: {
            line: 426,
            column: 50
          },
          end: {
            line: 428,
            column: 13
          }
        },
        line: 426
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        },
        loc: {
          start: {
            line: 435,
            column: 32
          },
          end: {
            line: 462,
            column: 9
          }
        },
        line: 435
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        loc: {
          start: {
            line: 470,
            column: 25
          },
          end: {
            line: 472,
            column: 9
          }
        },
        line: 470
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 480,
            column: 8
          },
          end: {
            line: 480,
            column: 9
          }
        },
        loc: {
          start: {
            line: 480,
            column: 30
          },
          end: {
            line: 487,
            column: 9
          }
        },
        line: 480
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        },
        loc: {
          start: {
            line: 495,
            column: 43
          },
          end: {
            line: 510,
            column: 9
          }
        },
        line: 495
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 517,
            column: 9
          }
        },
        loc: {
          start: {
            line: 517,
            column: 36
          },
          end: {
            line: 519,
            column: 9
          }
        },
        line: 517
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 526,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        loc: {
          start: {
            line: 526,
            column: 41
          },
          end: {
            line: 531,
            column: 9
          }
        },
        line: 526
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 538,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        },
        loc: {
          start: {
            line: 538,
            column: 29
          },
          end: {
            line: 620,
            column: 9
          }
        },
        line: 538
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 627,
            column: 9
          }
        },
        loc: {
          start: {
            line: 627,
            column: 27
          },
          end: {
            line: 636,
            column: 9
          }
        },
        line: 627
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 639,
            column: 5
          },
          end: {
            line: 639,
            column: 6
          }
        },
        loc: {
          start: {
            line: 639,
            column: 11
          },
          end: {
            line: 645,
            column: 5
          }
        },
        line: 639
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 19
          },
          end: {
            line: 28,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 20
          },
          end: {
            line: 2,
            column: 24
          }
        }, {
          start: {
            line: 2,
            column: 28
          },
          end: {
            line: 2,
            column: 45
          }
        }, {
          start: {
            line: 2,
            column: 50
          },
          end: {
            line: 28,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 111
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 3,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 3,
            column: 41
          }
        }, {
          start: {
            line: 3,
            column: 45
          },
          end: {
            line: 3,
            column: 68
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 37
          },
          end: {
            line: 4,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 57
          },
          end: {
            line: 4,
            column: 62
          }
        }, {
          start: {
            line: 4,
            column: 65
          },
          end: {
            line: 4,
            column: 100
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 65
          },
          end: {
            line: 4,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 90
          }
        }, {
          start: {
            line: 4,
            column: 93
          },
          end: {
            line: 4,
            column: 100
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 5,
            column: 84
          }
        }, {
          start: {
            line: 5,
            column: 87
          },
          end: {
            line: 5,
            column: 91
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 30
          }
        }, {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 38
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 63
          },
          end: {
            line: 5,
            column: 67
          }
        }, {
          start: {
            line: 5,
            column: 70
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 6,
            column: 47
          },
          end: {
            line: 6,
            column: 102
          }
        }, {
          start: {
            line: 6,
            column: 105
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 10,
            column: 46
          },
          end: {
            line: 10,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 63
          },
          end: {
            line: 10,
            column: 65
          }
        }, {
          start: {
            line: 10,
            column: 68
          },
          end: {
            line: 10,
            column: 80
          }
        }],
        line: 10
      },
      "11": {
        loc: {
          start: {
            line: 12,
            column: 48
          },
          end: {
            line: 12,
            column: 136
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 48
          },
          end: {
            line: 12,
            column: 136
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "12": {
        loc: {
          start: {
            line: 12,
            column: 167
          },
          end: {
            line: 12,
            column: 176
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 167
          },
          end: {
            line: 12,
            column: 168
          }
        }, {
          start: {
            line: 12,
            column: 172
          },
          end: {
            line: 12,
            column: 176
          }
        }],
        line: 12
      },
      "13": {
        loc: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 62
          },
          end: {
            line: 13,
            column: 106
          }
        }, {
          start: {
            line: 13,
            column: 109
          },
          end: {
            line: 13,
            column: 124
          }
        }],
        line: 13
      },
      "14": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 14
      },
      "15": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "16": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "17": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 31
          }
        }, {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 61
          }
        }],
        line: 16
      },
      "18": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "19": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "20": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "21": {
        loc: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "22": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 37
          }
        }, {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 37
          }
        }],
        line: 22
      },
      "23": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "24": {
        loc: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 35,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 29
          }
        }, {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 55
          }
        }, {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 35,
            column: 1
          }
        }],
        line: 29
      },
      "25": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 63
          }
        }, {
          start: {
            line: 32,
            column: 66
          },
          end: {
            line: 32,
            column: 95
          }
        }],
        line: 32
      },
      "26": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 36
          }
        }],
        line: 34
      },
      "27": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 39,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 29
          }
        }, {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 39,
            column: 1
          }
        }],
        line: 36
      },
      "28": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "29": {
        loc: {
          start: {
            line: 37,
            column: 41
          },
          end: {
            line: 37,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 60
          },
          end: {
            line: 37,
            column: 93
          }
        }, {
          start: {
            line: 37,
            column: 96
          },
          end: {
            line: 37,
            column: 98
          }
        }],
        line: 37
      },
      "30": {
        loc: {
          start: {
            line: 38,
            column: 73
          },
          end: {
            line: 38,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 82
          },
          end: {
            line: 38,
            column: 110
          }
        }, {
          start: {
            line: 38,
            column: 113
          },
          end: {
            line: 38,
            column: 117
          }
        }],
        line: 38
      },
      "31": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "32": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "33": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "34": {
        loc: {
          start: {
            line: 165,
            column: 33
          },
          end: {
            line: 165,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 33
          },
          end: {
            line: 165,
            column: 50
          }
        }, {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 81
          }
        }],
        line: 165
      },
      "35": {
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 40
          }
        }, {
          start: {
            line: 166,
            column: 44
          },
          end: {
            line: 166,
            column: 66
          }
        }],
        line: 166
      },
      "36": {
        loc: {
          start: {
            line: 173,
            column: 31
          },
          end: {
            line: 173,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 41
          },
          end: {
            line: 173,
            column: 57
          }
        }, {
          start: {
            line: 173,
            column: 60
          },
          end: {
            line: 173,
            column: 69
          }
        }],
        line: 173
      },
      "37": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "38": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: 203,
            column: 21
          },
          end: {
            line: 206,
            column: 17
          }
        }],
        line: 199
      },
      "39": {
        loc: {
          start: {
            line: 213,
            column: 20
          },
          end: {
            line: 215,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 72
          }
        }, {
          start: {
            line: 215,
            column: 26
          },
          end: {
            line: 215,
            column: 27
          }
        }],
        line: 213
      },
      "40": {
        loc: {
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "41": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 246,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 245,
            column: 26
          },
          end: {
            line: 245,
            column: 72
          }
        }, {
          start: {
            line: 246,
            column: 26
          },
          end: {
            line: 246,
            column: 27
          }
        }],
        line: 244
      },
      "42": {
        loc: {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 266,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 266,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "43": {
        loc: {
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 274,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 274,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "44": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 354,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 354,
            column: 17
          }
        }, {
          start: {
            line: 346,
            column: 21
          },
          end: {
            line: 354,
            column: 17
          }
        }],
        line: 290
      },
      "45": {
        loc: {
          start: {
            line: 296,
            column: 28
          },
          end: {
            line: 298,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 28
          },
          end: {
            line: 298,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "46": {
        loc: {
          start: {
            line: 306,
            column: 20
          },
          end: {
            line: 313,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 20
          },
          end: {
            line: 313,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "47": {
        loc: {
          start: {
            line: 308,
            column: 28
          },
          end: {
            line: 311,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 28
          },
          end: {
            line: 311,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "48": {
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 309,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 68
          }
        }, {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 69
          }
        }],
        line: 308
      },
      "49": {
        loc: {
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 321,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 321,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "50": {
        loc: {
          start: {
            line: 317,
            column: 28
          },
          end: {
            line: 319,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 28
          },
          end: {
            line: 319,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "51": {
        loc: {
          start: {
            line: 323,
            column: 20
          },
          end: {
            line: 330,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 20
          },
          end: {
            line: 330,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "52": {
        loc: {
          start: {
            line: 326,
            column: 28
          },
          end: {
            line: 328,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 28
          },
          end: {
            line: 328,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "53": {
        loc: {
          start: {
            line: 333,
            column: 24
          },
          end: {
            line: 338,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 24
          },
          end: {
            line: 338,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "54": {
        loc: {
          start: {
            line: 342,
            column: 24
          },
          end: {
            line: 344,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 76
          }
        }, {
          start: {
            line: 344,
            column: 30
          },
          end: {
            line: 344,
            column: 31
          }
        }],
        line: 342
      },
      "55": {
        loc: {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 437,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 437,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "56": {
        loc: {
          start: {
            line: 440,
            column: 16
          },
          end: {
            line: 442,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 16
          },
          end: {
            line: 442,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "57": {
        loc: {
          start: {
            line: 446,
            column: 16
          },
          end: {
            line: 452,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 16
          },
          end: {
            line: 452,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "58": {
        loc: {
          start: {
            line: 456,
            column: 16
          },
          end: {
            line: 458,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 457,
            column: 22
          },
          end: {
            line: 457,
            column: 68
          }
        }, {
          start: {
            line: 458,
            column: 22
          },
          end: {
            line: 458,
            column: 23
          }
        }],
        line: 456
      },
      "59": {
        loc: {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 461,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 461,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "60": {
        loc: {
          start: {
            line: 471,
            column: 19
          },
          end: {
            line: 471,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 19
          },
          end: {
            line: 471,
            column: 48
          }
        }, {
          start: {
            line: 471,
            column: 52
          },
          end: {
            line: 471,
            column: 80
          }
        }],
        line: 471
      },
      "61": {
        loc: {
          start: {
            line: 503,
            column: 32
          },
          end: {
            line: 503,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 503,
            column: 32
          },
          end: {
            line: 503,
            column: 67
          }
        }, {
          start: {
            line: 503,
            column: 71
          },
          end: {
            line: 503,
            column: 72
          }
        }],
        line: 503
      },
      "62": {
        loc: {
          start: {
            line: 528,
            column: 12
          },
          end: {
            line: 530,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 12
          },
          end: {
            line: 530,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 528
      },
      "63": {
        loc: {
          start: {
            line: 540,
            column: 12
          },
          end: {
            line: 580,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 541,
            column: 16
          },
          end: {
            line: 546,
            column: 26
          }
        }, {
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 557,
            column: 17
          }
        }, {
          start: {
            line: 558,
            column: 16
          },
          end: {
            line: 568,
            column: 17
          }
        }, {
          start: {
            line: 569,
            column: 16
          },
          end: {
            line: 579,
            column: 17
          }
        }],
        line: 540
      },
      "64": {
        loc: {
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 545,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 545,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "65": {
        loc: {
          start: {
            line: 551,
            column: 24
          },
          end: {
            line: 554,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 24
          },
          end: {
            line: 554,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "66": {
        loc: {
          start: {
            line: 562,
            column: 24
          },
          end: {
            line: 565,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 24
          },
          end: {
            line: 565,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "67": {
        loc: {
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 576,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 576,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "68": {
        loc: {
          start: {
            line: 573,
            column: 28
          },
          end: {
            line: 573,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 573,
            column: 28
          },
          end: {
            line: 573,
            column: 49
          }
        }, {
          start: {
            line: 573,
            column: 53
          },
          end: {
            line: 573,
            column: 91
          }
        }],
        line: 573
      },
      "69": {
        loc: {
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 614,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 614,
            column: 13
          }
        }, {
          start: {
            line: 596,
            column: 17
          },
          end: {
            line: 614,
            column: 13
          }
        }],
        line: 581
      },
      "70": {
        loc: {
          start: {
            line: 583,
            column: 16
          },
          end: {
            line: 594,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 583,
            column: 16
          },
          end: {
            line: 594,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 583
      },
      "71": {
        loc: {
          start: {
            line: 591,
            column: 24
          },
          end: {
            line: 593,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 592,
            column: 30
          },
          end: {
            line: 592,
            column: 76
          }
        }, {
          start: {
            line: 593,
            column: 30
          },
          end: {
            line: 593,
            column: 31
          }
        }],
        line: 591
      },
      "72": {
        loc: {
          start: {
            line: 598,
            column: 16
          },
          end: {
            line: 613,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 16
          },
          end: {
            line: 613,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "73": {
        loc: {
          start: {
            line: 601,
            column: 20
          },
          end: {
            line: 612,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 20
          },
          end: {
            line: 612,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "74": {
        loc: {
          start: {
            line: 609,
            column: 28
          },
          end: {
            line: 611,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 610,
            column: 34
          },
          end: {
            line: 610,
            column: 80
          }
        }, {
          start: {
            line: 611,
            column: 34
          },
          end: {
            line: 611,
            column: 35
          }
        }],
        line: 609
      },
      "75": {
        loc: {
          start: {
            line: 616,
            column: 12
          },
          end: {
            line: 619,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 616,
            column: 12
          },
          end: {
            line: 619,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 616
      },
      "76": {
        loc: {
          start: {
            line: 628,
            column: 12
          },
          end: {
            line: 633,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 628,
            column: 12
          },
          end: {
            line: 633,
            column: 13
          }
        }, {
          start: {
            line: 631,
            column: 17
          },
          end: {
            line: 633,
            column: 13
          }
        }],
        line: 628
      },
      "77": {
        loc: {
          start: {
            line: 635,
            column: 33
          },
          end: {
            line: 635,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 635,
            column: 45
          },
          end: {
            line: 635,
            column: 68
          }
        }, {
          start: {
            line: 635,
            column: 71
          },
          end: {
            line: 635,
            column: 72
          }
        }],
        line: 635
      },
      "78": {
        loc: {
          start: {
            line: 640,
            column: 26
          },
          end: {
            line: 640,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 640,
            column: 76
          },
          end: {
            line: 640,
            column: 95
          }
        }, {
          start: {
            line: 640,
            column: 98
          },
          end: {
            line: 640,
            column: 104
          }
        }],
        line: 640
      },
      "79": {
        loc: {
          start: {
            line: 640,
            column: 26
          },
          end: {
            line: 640,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 640,
            column: 26
          },
          end: {
            line: 640,
            column: 54
          }
        }, {
          start: {
            line: 640,
            column: 58
          },
          end: {
            line: 640,
            column: 73
          }
        }],
        line: 640
      },
      "80": {
        loc: {
          start: {
            line: 643,
            column: 8
          },
          end: {
            line: 643,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 643,
            column: 8
          },
          end: {
            line: 643,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 643
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0, 0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts"],
      sourcesContent: ["import { Injectable, OnModuleDestroy, Inject } from '@nestjs/common';\nimport {\n  ICacheService,\n  CacheKey,\n  CacheValue,\n  CacheOptions,\n  CacheStats,\n  CacheHealth,\n  CacheStrategy,\n} from '../interfaces/cache.interface';\nimport type { ICacheKeyFactory } from '../interfaces/cache.interface';\nimport { PinoLoggerService, LogContext } from '@aiofix/logging';\n\n/**\n * @interface MemoryCacheConfig\n * @description \u5185\u5B58\u7F13\u5B58\u914D\u7F6E\u63A5\u53E3\n */\nexport interface MemoryCacheConfig {\n  /** \u9ED8\u8BA4\u8FC7\u671F\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09 */\n  defaultTtl?: number;\n  /** \u6700\u5927\u7F13\u5B58\u9879\u6570\u91CF */\n  maxSize?: number;\n  /** \u9ED8\u8BA4\u7F13\u5B58\u7B56\u7565 */\n  defaultStrategy?: CacheStrategy;\n  /** \u6E05\u7406\u95F4\u9694\uFF08\u6BEB\u79D2\uFF09 */\n  cleanupInterval?: number;\n  /** \u662F\u5426\u542F\u7528\u538B\u7F29 */\n  enableCompression?: boolean;\n  /** \u662F\u5426\u542F\u7528\u52A0\u5BC6 */\n  enableEncryption?: boolean;\n}\n\n/**\n * @interface MemoryCacheEntry<T>\n * @description \u5185\u5B58\u7F13\u5B58\u6761\u76EE\u63A5\u53E3\n */\ninterface MemoryCacheEntry<T = any> {\n  /** \u7F13\u5B58\u503C */\n  value: CacheValue<T>;\n  /** \u5927\u5C0F\uFF08\u5B57\u8282\uFF09 */\n  size: number;\n  /** \u521B\u5EFA\u65F6\u95F4 */\n  createdAt: number;\n  /** \u6700\u540E\u8BBF\u95EE\u65F6\u95F4 */\n  lastAccessed: number;\n  /** \u8BBF\u95EE\u6B21\u6570 */\n  accessCount: number;\n  /** \u8BBF\u95EE\u9891\u7387\uFF08\u7528\u4E8ELFU\u7B56\u7565\uFF09 */\n  accessFrequency: number;\n}\n\n/**\n * @class MemoryCacheService\n * @description \u5185\u5B58\u7F13\u5B58\u670D\u52A1\u5B9E\u73B0\n *\n * \u8BE5\u670D\u52A1\u63D0\u4F9B\u9AD8\u6027\u80FD\u7684\u5185\u5B58\u7F13\u5B58\u529F\u80FD\uFF0C\u652F\u6301\u591A\u79CD\u7F13\u5B58\u7B56\u7565\uFF1A\n * - LRU (Least Recently Used): \u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7B56\u7565\n * - LFU (Least Frequently Used): \u6700\u5C11\u4F7F\u7528\u9891\u7387\u7B56\u7565\n * - FIFO (First In First Out): \u5148\u8FDB\u5148\u51FA\u7B56\u7565\n * - TTL (Time To Live): \u57FA\u4E8E\u65F6\u95F4\u8FC7\u671F\u7B56\u7565\n *\n * \u4E3B\u8981\u7279\u6027\uFF1A\n * 1. \u652F\u6301\u591A\u79CD\u7F13\u5B58\u7B56\u7565\uFF0C\u53EF\u6839\u636E\u4E1A\u52A1\u9700\u6C42\u9009\u62E9\n * 2. \u81EA\u52A8\u8FC7\u671F\u6E05\u7406\u548C\u5185\u5B58\u7BA1\u7406\n * 3. \u5B8C\u6574\u7684\u7EDF\u8BA1\u4FE1\u606F\u548C\u5065\u5EB7\u68C0\u67E5\n * 4. \u7EBF\u7A0B\u5B89\u5168\u7684\u5E76\u53D1\u8BBF\u95EE\n * 5. \u53EF\u914D\u7F6E\u7684\u538B\u7F29\u548C\u52A0\u5BC6\u529F\u80FD\n */\n@Injectable()\nexport class MemoryCacheService implements ICacheService, OnModuleDestroy {\n  /** \u5185\u5B58\u5B58\u50A8 */\n  private readonly cache = new Map<string, MemoryCacheEntry>();\n\n  /** \u8BBF\u95EE\u987A\u5E8F\u961F\u5217\uFF08\u7528\u4E8ELRU\u7B56\u7565\uFF09 */\n  private readonly accessOrder: string[] = [];\n\n  /** \u8BBF\u95EE\u9891\u7387\u6620\u5C04\uFF08\u7528\u4E8ELFU\u7B56\u7565\uFF09 */\n  private readonly accessFrequency = new Map<string, number>();\n\n  /** \u914D\u7F6E\u9009\u9879 */\n  private readonly config: Required<MemoryCacheConfig>;\n\n  /** \u7EDF\u8BA1\u4FE1\u606F */\n  private stats: CacheStats = {\n    totalEntries: 0,\n    hits: 0,\n    misses: 0,\n    hitRate: 0,\n    totalSize: 0,\n    averageSize: 0,\n    expiredEntries: 0,\n    evictedEntries: 0,\n    lastReset: Date.now(),\n  };\n\n  /** \u6E05\u7406\u5B9A\u65F6\u5668 */\n  private cleanupTimer?: NodeJS.Timeout;\n\n  /** \u662F\u5426\u5DF2\u9500\u6BC1 */\n  private isDestroyed = false;\n\n  constructor(\n    @Inject('MEMORY_CACHE_CONFIG')\n    @Inject('ICacheKeyFactory')\n    private readonly keyFactory: ICacheKeyFactory,\n    @Inject(PinoLoggerService) private readonly logger: PinoLoggerService,\n  ) {\n    // \u8BBE\u7F6E\u9ED8\u8BA4\u914D\u7F6E\n    this.config = {\n      defaultTtl: 300000, // 5\u5206\u949F\n      maxSize: 1000,\n      defaultStrategy: CacheStrategy.LRU,\n      cleanupInterval: 60000, // 1\u5206\u949F\n      enableCompression: false,\n      enableEncryption: false,\n    };\n\n    // \u542F\u52A8\u6E05\u7406\u5B9A\u65F6\u5668\n    this.startCleanupTimer();\n\n    this.logger.info(\n      `MemoryCacheService initialized with config: ${JSON.stringify(\n        this.config,\n      )}`,\n      LogContext.CACHE,\n    );\n  }\n\n  /**\n   * @method onModuleDestroy\n   * @description \u6A21\u5757\u9500\u6BC1\u65F6\u7684\u6E05\u7406\u5DE5\u4F5C\n   */\n  async onModuleDestroy(): Promise<void> {\n    this.isDestroyed = true;\n\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = undefined;\n    }\n\n    this.cache.clear();\n    this.accessOrder.length = 0;\n    this.accessFrequency.clear();\n\n    this.logger.info('MemoryCacheService destroyed', LogContext.CACHE);\n  }\n\n  /**\n   * @method get\n   * @description \u83B7\u53D6\u7F13\u5B58\u503C\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @returns {Promise<T | null>} \u7F13\u5B58\u503C\u6216null\n   */\n  async get<T = any>(key: CacheKey): Promise<T | null> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const entry = this.cache.get(keyString);\n\n      if (!entry) {\n        this.updateStats(false);\n        return null;\n      }\n\n      // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\n      if (this.isExpired(entry.value)) {\n        this.cache.delete(keyString);\n        this.removeFromAccessOrder(keyString);\n        this.accessFrequency.delete(keyString);\n        this.stats.expiredEntries++;\n        this.updateStats(false);\n        return null;\n      }\n\n      // \u66F4\u65B0\u8BBF\u95EE\u4FE1\u606F\n      this.updateAccessInfo(keyString, entry);\n\n      // \u66F4\u65B0\u7EDF\u8BA1\n      this.updateStats(true);\n\n      return entry.value.value as T;\n    } catch (error) {\n      this.logger.error(\n        `Error getting cache value: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      this.updateStats(false);\n      return null;\n    }\n  }\n\n  /**\n   * @method set\n   * @description \u8BBE\u7F6E\u7F13\u5B58\u503C\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @param {T} value \u7F13\u5B58\u503C\n   * @param {Partial<CacheOptions>} options \u7F13\u5B58\u9009\u9879\n   * @returns {Promise<boolean>} \u662F\u5426\u6210\u529F\n   */\n  async set<T = any>(\n    key: CacheKey,\n    value: T,\n    options?: Partial<CacheOptions>,\n  ): Promise<boolean> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const strategy = options?.strategy ?? this.config.defaultStrategy;\n      const ttl = options?.ttl ?? this.config.defaultTtl;\n\n      // \u8BA1\u7B97\u503C\u5927\u5C0F\n      const valueSize = this.calculateSize(value);\n\n      // \u521B\u5EFA\u7F13\u5B58\u503C\n      const cacheValue: CacheValue<T> = {\n        value,\n        createdAt: Date.now(),\n        expiresAt: ttl > 0 ? Date.now() + ttl : undefined,\n        accessCount: 0,\n        lastAccessed: Date.now(),\n        version: key.version,\n        tags: key.tags,\n        metadata: {\n          strategy,\n          compressed: this.config.enableCompression,\n          encrypted: this.config.enableEncryption,\n        },\n      };\n\n      // \u68C0\u67E5\u662F\u5426\u9700\u8981\u9A71\u9010\u65E7\u6761\u76EE\n      if (this.cache.size >= this.config.maxSize) {\n        this.evictEntry(strategy);\n      }\n\n      // \u5B58\u50A8\u65B0\u6761\u76EE\n      const entry: MemoryCacheEntry<T> = {\n        value: cacheValue,\n        size: valueSize,\n        createdAt: Date.now(),\n        lastAccessed: Date.now(),\n        accessCount: 0,\n        accessFrequency: 0,\n      };\n\n      // \u5982\u679C\u952E\u5DF2\u5B58\u5728\uFF0C\u5148\u66F4\u65B0\u7EDF\u8BA1\n      const existingEntry = this.cache.get(keyString);\n      if (existingEntry) {\n        this.stats.totalSize -= existingEntry.size;\n        // \u4E0D\u51CF\u5C11 totalEntries\uFF0C\u56E0\u4E3A\u6211\u4EEC\u8981\u66FF\u6362\u5B83\n      } else {\n        // \u53EA\u6709\u65B0\u952E\u624D\u589E\u52A0 totalEntries\n        this.stats.totalEntries++;\n      }\n\n      this.cache.set(keyString, entry);\n      this.addToAccessOrder(keyString);\n      this.accessFrequency.set(keyString, 0);\n\n      // \u66F4\u65B0\u7EDF\u8BA1\n      this.stats.totalSize += valueSize;\n      this.stats.averageSize =\n        this.stats.totalEntries > 0\n          ? this.stats.totalSize / this.stats.totalEntries\n          : 0;\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error setting cache value: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method delete\n   * @description \u5220\u9664\u7F13\u5B58\u503C\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @returns {Promise<boolean>} \u662F\u5426\u6210\u529F\n   */\n  async delete(key: CacheKey): Promise<boolean> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const entry = this.cache.get(keyString);\n\n      if (!entry) {\n        return false;\n      }\n\n      // \u4ECE\u7F13\u5B58\u4E2D\u5220\u9664\n      this.cache.delete(keyString);\n      this.removeFromAccessOrder(keyString);\n      this.accessFrequency.delete(keyString);\n\n      // \u66F4\u65B0\u7EDF\u8BA1\n      this.stats.totalEntries = this.cache.size;\n      this.stats.totalSize -= entry.size;\n      this.stats.averageSize =\n        this.stats.totalEntries > 0\n          ? this.stats.totalSize / this.stats.totalEntries\n          : 0;\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error deleting cache value: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method exists\n   * @description \u68C0\u67E5\u7F13\u5B58\u952E\u662F\u5426\u5B58\u5728\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @returns {Promise<boolean>} \u662F\u5426\u5B58\u5728\n   */\n  async exists(key: CacheKey): Promise<boolean> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const entry = this.cache.get(keyString);\n\n      if (!entry) {\n        return false;\n      }\n\n      // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\n      if (this.isExpired(entry.value)) {\n        this.cache.delete(keyString);\n        this.removeFromAccessOrder(keyString);\n        this.accessFrequency.delete(keyString);\n        this.stats.expiredEntries++;\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error checking cache key existence: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method clear\n   * @description \u6E05\u7A7A\u7F13\u5B58\n   * @param {string} namespace \u547D\u540D\u7A7A\u95F4\uFF08\u53EF\u9009\uFF09\n   * @returns {Promise<boolean>} \u662F\u5426\u6210\u529F\n   */\n  async clear(namespace?: string): Promise<boolean> {\n    try {\n      if (namespace) {\n        // \u6E05\u7A7A\u6307\u5B9A\u547D\u540D\u7A7A\u95F4\n        const keysToDelete: string[] = [];\n\n        for (const [keyString] of this.cache.entries()) {\n          try {\n            const parsedKey = this.keyFactory.parse(keyString);\n            if (parsedKey.namespace === namespace) {\n              keysToDelete.push(keyString);\n            }\n          } catch {\n            // \u5982\u679C\u89E3\u6790\u5931\u8D25\uFF0C\u8DF3\u8FC7\u8FD9\u4E2A\u952E\n            continue;\n          }\n        }\n\n        // \u5982\u679C\u901A\u8FC7\u89E3\u6790\u6CA1\u6709\u627E\u5230\u952E\uFF0C\u5C1D\u8BD5\u76F4\u63A5\u5339\u914D\uFF08\u56E0\u4E3A\u952E\u683C\u5F0F\u53EF\u80FD\u5305\u542B\u7248\u672C\u53F7\uFF09\n        if (keysToDelete.length === 0) {\n          for (const [keyString] of this.cache.entries()) {\n            if (\n              keyString.includes(`:${namespace}:`) ||\n              keyString.startsWith(`${namespace}:`)\n            ) {\n              keysToDelete.push(keyString);\n            }\n          }\n        }\n\n        // \u5982\u679C\u8FD8\u662F\u6CA1\u6709\u627E\u5230\uFF0C\u5C1D\u8BD5\u66F4\u5BBD\u677E\u7684\u5339\u914D\n        if (keysToDelete.length === 0) {\n          for (const [keyString] of this.cache.entries()) {\n            if (keyString.includes(namespace)) {\n              keysToDelete.push(keyString);\n            }\n          }\n        }\n\n        // \u5982\u679C\u8FD8\u662F\u6CA1\u6709\u627E\u5230\uFF0C\u5C1D\u8BD5\u6700\u5BBD\u677E\u7684\u5339\u914D\uFF08\u5305\u542B\u547D\u540D\u7A7A\u95F4\u7684\u4EFB\u4F55\u952E\uFF09\n        if (keysToDelete.length === 0) {\n          for (const [keyString] of this.cache.entries()) {\n            const parts = keyString.split(':');\n            if (parts.includes(namespace)) {\n              keysToDelete.push(keyString);\n            }\n          }\n        }\n\n        for (const keyString of keysToDelete) {\n          const entry = this.cache.get(keyString);\n          if (entry) {\n            this.cache.delete(keyString);\n            this.removeFromAccessOrder(keyString);\n            this.accessFrequency.delete(keyString);\n            this.stats.totalSize -= entry.size;\n          }\n        }\n\n        this.stats.totalEntries = this.cache.size;\n        this.stats.averageSize =\n          this.stats.totalEntries > 0\n            ? this.stats.totalSize / this.stats.totalEntries\n            : 0;\n      } else {\n        // \u6E05\u7A7A\u6240\u6709\u7F13\u5B58\n        this.cache.clear();\n        this.accessOrder.length = 0;\n        this.accessFrequency.clear();\n        this.stats.totalEntries = 0;\n        this.stats.totalSize = 0;\n        this.stats.averageSize = 0;\n      }\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error clearing cache: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method getStats\n   * @description \u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\n   * @returns {Promise<CacheStats>} \u7F13\u5B58\u7EDF\u8BA1\n   */\n  async getStats(): Promise<CacheStats> {\n    return { ...this.stats };\n  }\n\n  /**\n   * @method getHealth\n   * @description \u83B7\u53D6\u7F13\u5B58\u5065\u5EB7\u72B6\u6001\n   * @returns {Promise<CacheHealth>} \u7F13\u5B58\u5065\u5EB7\u72B6\u6001\n   */\n  async getHealth(): Promise<CacheHealth> {\n    const startTime = Date.now();\n\n    try {\n      // \u7B80\u5355\u7684\u5065\u5EB7\u68C0\u67E5\uFF1A\u5C1D\u8BD5\u8BBE\u7F6E\u548C\u83B7\u53D6\u4E00\u4E2A\u6D4B\u8BD5\u503C\n      const testKey = this.keyFactory.create('health-check');\n      const testValue = { timestamp: Date.now() };\n\n      await this.set(testKey, testValue, { ttl: 1000 });\n      const retrieved = await this.get(testKey);\n\n      const responseTime = Date.now() - startTime;\n\n      return {\n        healthy: retrieved !== null,\n        connected: true,\n        responseTime,\n        lastCheck: Date.now(),\n      };\n    } catch (error) {\n      this.logger.error(\n        `Health check failed: ${(error as Error).message}`,\n        LogContext.CACHE,\n      );\n      return {\n        healthy: false,\n        connected: false,\n        responseTime: Date.now() - startTime,\n        error: (error as Error).message,\n        lastCheck: Date.now(),\n      };\n    }\n  }\n\n  /**\n   * @method resetStats\n   * @description \u91CD\u7F6E\u7F13\u5B58\u7EDF\u8BA1\n   * @returns {Promise<void>}\n   */\n  async resetStats(): Promise<void> {\n    this.stats = {\n      totalEntries: this.cache.size,\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      totalSize: this.stats.totalSize,\n      averageSize: this.stats.averageSize,\n      expiredEntries: 0,\n      evictedEntries: 0,\n      lastReset: Date.now(),\n    };\n  }\n\n  /**\n   * @private\n   * @method startCleanupTimer\n   * @description \u542F\u52A8\u6E05\u7406\u5B9A\u65F6\u5668\n   */\n  private startCleanupTimer(): void {\n    this.cleanupTimer = setInterval(() => {\n      this.cleanupExpiredEntries();\n    }, this.config.cleanupInterval);\n  }\n\n  /**\n   * @private\n   * @method cleanupExpiredEntries\n   * @description \u6E05\u7406\u8FC7\u671F\u6761\u76EE\n   */\n  private cleanupExpiredEntries(): void {\n    if (this.isDestroyed) return;\n\n    const keysToDelete: string[] = [];\n\n    for (const [keyString, entry] of this.cache.entries()) {\n      if (this.isExpired(entry.value)) {\n        keysToDelete.push(keyString);\n      }\n    }\n\n    for (const keyString of keysToDelete) {\n      const entry = this.cache.get(keyString);\n      if (entry) {\n        this.cache.delete(keyString);\n        this.removeFromAccessOrder(keyString);\n        this.accessFrequency.delete(keyString);\n        this.stats.totalSize -= entry.size;\n        this.stats.expiredEntries++;\n      }\n    }\n\n    this.stats.totalEntries = this.cache.size;\n    this.stats.averageSize =\n      this.stats.totalEntries > 0\n        ? this.stats.totalSize / this.stats.totalEntries\n        : 0;\n\n    if (keysToDelete.length > 0) {\n      this.logger.debug(\n        `Cleaned up ${keysToDelete.length} expired entries`,\n        LogContext.CACHE,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @method isExpired\n   * @description \u68C0\u67E5\u7F13\u5B58\u503C\u662F\u5426\u8FC7\u671F\n   * @param {CacheValue} value \u7F13\u5B58\u503C\n   * @returns {boolean} \u662F\u5426\u8FC7\u671F\n   */\n  private isExpired(value: CacheValue): boolean {\n    return value.expiresAt !== undefined && Date.now() > value.expiresAt;\n  }\n\n  /**\n   * @private\n   * @method calculateSize\n   * @description \u8BA1\u7B97\u503C\u5927\u5C0F\n   * @param {any} value \u503C\n   * @returns {number} \u5927\u5C0F\uFF08\u5B57\u8282\uFF09\n   */\n  private calculateSize(_value: unknown): number {\n    try {\n      return Buffer.byteLength(JSON.stringify(_value), 'utf8');\n    } catch {\n      return 0;\n    }\n  }\n\n  /**\n   * @private\n   * @method updateAccessInfo\n   * @description \u66F4\u65B0\u8BBF\u95EE\u4FE1\u606F\n   * @param {string} keyString \u952E\u5B57\u7B26\u4E32\n   * @param {MemoryCacheEntry} entry \u7F13\u5B58\u6761\u76EE\n   */\n  private updateAccessInfo(keyString: string, entry: MemoryCacheEntry): void {\n    const now = Date.now();\n\n    // \u66F4\u65B0\u8BBF\u95EE\u6B21\u6570\u548C\u65F6\u95F4\n    entry.value.accessCount++;\n    entry.value.lastAccessed = now;\n    entry.lastAccessed = now;\n    entry.accessCount++;\n\n    // \u66F4\u65B0\u8BBF\u95EE\u9891\u7387\uFF08\u7528\u4E8ELFU\u7B56\u7565\uFF09\n    const currentFreq = this.accessFrequency.get(keyString) ?? 0;\n    const newFreq = currentFreq + 1;\n    this.accessFrequency.set(keyString, newFreq);\n    entry.accessFrequency = newFreq;\n\n    // \u66F4\u65B0\u8BBF\u95EE\u987A\u5E8F\uFF08\u7528\u4E8ELRU\u7B56\u7565\uFF09\n    this.removeFromAccessOrder(keyString);\n    this.accessOrder.push(keyString);\n  }\n\n  /**\n   * @private\n   * @method addToAccessOrder\n   * @description \u6DFB\u52A0\u5230\u8BBF\u95EE\u987A\u5E8F\n   * @param {string} keyString \u952E\u5B57\u7B26\u4E32\n   */\n  private addToAccessOrder(keyString: string): void {\n    this.accessOrder.push(keyString);\n  }\n\n  /**\n   * @private\n   * @method removeFromAccessOrder\n   * @description \u4ECE\u8BBF\u95EE\u987A\u5E8F\u4E2D\u79FB\u9664\n   * @param {string} keyString \u952E\u5B57\u7B26\u4E32\n   */\n  private removeFromAccessOrder(keyString: string): void {\n    const index = this.accessOrder.indexOf(keyString);\n    if (index > -1) {\n      this.accessOrder.splice(index, 1);\n    }\n  }\n\n  /**\n   * @private\n   * @method evictEntry\n   * @description \u9A71\u9010\u7F13\u5B58\u6761\u76EE\n   * @param {CacheStrategy} strategy \u7F13\u5B58\u7B56\u7565\n   */\n  private evictEntry(strategy: CacheStrategy): void {\n    let keyToEvict: string | undefined;\n\n    switch (strategy) {\n      case CacheStrategy.LRU:\n        // \u9A71\u9010\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u6761\u76EE\uFF08\u8BBF\u95EE\u987A\u5E8F\u4E2D\u7684\u7B2C\u4E00\u4E2A\uFF09\n        if (this.accessOrder.length > 0) {\n          keyToEvict = this.accessOrder[0];\n        }\n        break;\n\n      case CacheStrategy.LFU: {\n        // \u9A71\u9010\u6700\u5C11\u4F7F\u7528\u9891\u7387\u7684\u6761\u76EE\n        let minFreq = Infinity;\n        for (const [key, freq] of this.accessFrequency.entries()) {\n          if (freq < minFreq) {\n            minFreq = freq;\n            keyToEvict = key;\n          }\n        }\n        break;\n      }\n\n      case CacheStrategy.FIFO: {\n        // \u9A71\u9010\u6700\u65E9\u521B\u5EFA\u7684\u6761\u76EE\n        let oldestTime = Infinity;\n        for (const [key, entry] of this.cache.entries()) {\n          if (entry.createdAt < oldestTime) {\n            oldestTime = entry.createdAt;\n            keyToEvict = key;\n          }\n        }\n        break;\n      }\n\n      case CacheStrategy.TTL: {\n        // \u9A71\u9010\u6700\u65E9\u8FC7\u671F\u7684\u6761\u76EE\n        let earliestExpiry = Infinity;\n        for (const [key, entry] of this.cache.entries()) {\n          if (entry.value.expiresAt && entry.value.expiresAt < earliestExpiry) {\n            earliestExpiry = entry.value.expiresAt;\n            keyToEvict = key;\n          }\n        }\n        break;\n      }\n    }\n\n    if (keyToEvict) {\n      const entry = this.cache.get(keyToEvict);\n      if (entry) {\n        this.cache.delete(keyToEvict);\n        this.removeFromAccessOrder(keyToEvict);\n        this.accessFrequency.delete(keyToEvict);\n        this.stats.totalSize -= entry.size;\n        this.stats.evictedEntries++;\n        this.stats.totalEntries = this.cache.size;\n        this.stats.averageSize =\n          this.stats.totalEntries > 0\n            ? this.stats.totalSize / this.stats.totalEntries\n            : 0;\n      }\n    } else {\n      // \u5982\u679C\u6CA1\u6709\u627E\u5230\u8981\u9A71\u9010\u7684\u952E\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u7B56\u7565\uFF08LRU\uFF09\n      if (this.accessOrder.length > 0) {\n        keyToEvict = this.accessOrder[0];\n        const entry = this.cache.get(keyToEvict);\n        if (entry) {\n          this.cache.delete(keyToEvict);\n          this.removeFromAccessOrder(keyToEvict);\n          this.accessFrequency.delete(keyToEvict);\n          this.stats.totalSize -= entry.size;\n          this.stats.evictedEntries++;\n          this.stats.totalEntries = this.cache.size;\n          this.stats.averageSize =\n            this.stats.totalEntries > 0\n              ? this.stats.totalSize / this.stats.totalEntries\n              : 0;\n        }\n      }\n    }\n\n    // \u786E\u4FDD\u9A71\u9010\u540E\u8BBF\u95EE\u987A\u5E8F\u548C\u9891\u7387\u6620\u5C04\u7684\u4E00\u81F4\u6027\n    if (keyToEvict) {\n      this.removeFromAccessOrder(keyToEvict);\n      this.accessFrequency.delete(keyToEvict);\n    }\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description \u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\n   * @param {boolean} isHit \u662F\u5426\u547D\u4E2D\n   */\n  private updateStats(isHit: boolean): void {\n    if (isHit) {\n      this.stats.hits++;\n    } else {\n      this.stats.misses++;\n    }\n\n    const total = this.stats.hits + this.stats.misses;\n    this.stats.hitRate = total > 0 ? this.stats.hits / total : 0;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e1118348de0fc2ac1e6594bb04148ad1e9bf4a39"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gc6bto892 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gc6bto892();
var __esDecorate =
/* istanbul ignore next */
(cov_gc6bto892().s[0]++,
/* istanbul ignore next */
(cov_gc6bto892().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_gc6bto892().b[0][1]++, this.__esDecorate) ||
/* istanbul ignore next */
(cov_gc6bto892().b[0][2]++, function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  /* istanbul ignore next */
  cov_gc6bto892().f[0]++;
  function accept(f) {
    /* istanbul ignore next */
    cov_gc6bto892().f[1]++;
    cov_gc6bto892().s[1]++;
    if (
    /* istanbul ignore next */
    (cov_gc6bto892().b[2][0]++, f !== void 0) &&
    /* istanbul ignore next */
    (cov_gc6bto892().b[2][1]++, typeof f !== "function")) {
      /* istanbul ignore next */
      cov_gc6bto892().b[1][0]++;
      cov_gc6bto892().s[2]++;
      throw new TypeError("Function expected");
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[1][1]++;
    }
    cov_gc6bto892().s[3]++;
    return f;
  }
  var kind =
    /* istanbul ignore next */
    (cov_gc6bto892().s[4]++, contextIn.kind),
    key =
    /* istanbul ignore next */
    (cov_gc6bto892().s[5]++, kind === "getter" ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[3][0]++, "get") :
    /* istanbul ignore next */
    (cov_gc6bto892().b[3][1]++, kind === "setter" ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[4][0]++, "set") :
    /* istanbul ignore next */
    (cov_gc6bto892().b[4][1]++, "value")));
  var target =
  /* istanbul ignore next */
  (cov_gc6bto892().s[6]++,
  /* istanbul ignore next */
  (cov_gc6bto892().b[6][0]++, !descriptorIn) &&
  /* istanbul ignore next */
  (cov_gc6bto892().b[6][1]++, ctor) ?
  /* istanbul ignore next */
  (cov_gc6bto892().b[5][0]++, contextIn["static"] ?
  /* istanbul ignore next */
  (cov_gc6bto892().b[7][0]++, ctor) :
  /* istanbul ignore next */
  (cov_gc6bto892().b[7][1]++, ctor.prototype)) :
  /* istanbul ignore next */
  (cov_gc6bto892().b[5][1]++, null));
  var descriptor =
  /* istanbul ignore next */
  (cov_gc6bto892().s[7]++,
  /* istanbul ignore next */
  (cov_gc6bto892().b[8][0]++, descriptorIn) ||
  /* istanbul ignore next */
  (cov_gc6bto892().b[8][1]++, target ?
  /* istanbul ignore next */
  (cov_gc6bto892().b[9][0]++, Object.getOwnPropertyDescriptor(target, contextIn.name)) :
  /* istanbul ignore next */
  (cov_gc6bto892().b[9][1]++, {})));
  var _,
    done =
    /* istanbul ignore next */
    (cov_gc6bto892().s[8]++, false);
  /* istanbul ignore next */
  cov_gc6bto892().s[9]++;
  for (var i =
  /* istanbul ignore next */
  (cov_gc6bto892().s[10]++, decorators.length - 1); i >= 0; i--) {
    var context =
    /* istanbul ignore next */
    (cov_gc6bto892().s[11]++, {});
    /* istanbul ignore next */
    cov_gc6bto892().s[12]++;
    for (var p in contextIn) {
      /* istanbul ignore next */
      cov_gc6bto892().s[13]++;
      context[p] = p === "access" ?
      /* istanbul ignore next */
      (cov_gc6bto892().b[10][0]++, {}) :
      /* istanbul ignore next */
      (cov_gc6bto892().b[10][1]++, contextIn[p]);
    }
    /* istanbul ignore next */
    cov_gc6bto892().s[14]++;
    for (var p in contextIn.access) {
      /* istanbul ignore next */
      cov_gc6bto892().s[15]++;
      context.access[p] = contextIn.access[p];
    }
    /* istanbul ignore next */
    cov_gc6bto892().s[16]++;
    context.addInitializer = function (f) {
      /* istanbul ignore next */
      cov_gc6bto892().f[2]++;
      cov_gc6bto892().s[17]++;
      if (done) {
        /* istanbul ignore next */
        cov_gc6bto892().b[11][0]++;
        cov_gc6bto892().s[18]++;
        throw new TypeError("Cannot add initializers after decoration has completed");
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[11][1]++;
      }
      cov_gc6bto892().s[19]++;
      extraInitializers.push(accept(
      /* istanbul ignore next */
      (cov_gc6bto892().b[12][0]++, f) ||
      /* istanbul ignore next */
      (cov_gc6bto892().b[12][1]++, null)));
    };
    var result =
    /* istanbul ignore next */
    (cov_gc6bto892().s[20]++, (0, decorators[i])(kind === "accessor" ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[13][0]++, {
      get: descriptor.get,
      set: descriptor.set
    }) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[13][1]++, descriptor[key]), context));
    /* istanbul ignore next */
    cov_gc6bto892().s[21]++;
    if (kind === "accessor") {
      /* istanbul ignore next */
      cov_gc6bto892().b[14][0]++;
      cov_gc6bto892().s[22]++;
      if (result === void 0) {
        /* istanbul ignore next */
        cov_gc6bto892().b[15][0]++;
        cov_gc6bto892().s[23]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[15][1]++;
      }
      cov_gc6bto892().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_gc6bto892().b[17][0]++, result === null) ||
      /* istanbul ignore next */
      (cov_gc6bto892().b[17][1]++, typeof result !== "object")) {
        /* istanbul ignore next */
        cov_gc6bto892().b[16][0]++;
        cov_gc6bto892().s[25]++;
        throw new TypeError("Object expected");
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[16][1]++;
      }
      cov_gc6bto892().s[26]++;
      if (_ = accept(result.get)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[18][0]++;
        cov_gc6bto892().s[27]++;
        descriptor.get = _;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[18][1]++;
      }
      cov_gc6bto892().s[28]++;
      if (_ = accept(result.set)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[19][0]++;
        cov_gc6bto892().s[29]++;
        descriptor.set = _;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[19][1]++;
      }
      cov_gc6bto892().s[30]++;
      if (_ = accept(result.init)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[20][0]++;
        cov_gc6bto892().s[31]++;
        initializers.unshift(_);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[20][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_gc6bto892().b[14][1]++;
      cov_gc6bto892().s[32]++;
      if (_ = accept(result)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[21][0]++;
        cov_gc6bto892().s[33]++;
        if (kind === "field") {
          /* istanbul ignore next */
          cov_gc6bto892().b[22][0]++;
          cov_gc6bto892().s[34]++;
          initializers.unshift(_);
        } else {
          /* istanbul ignore next */
          cov_gc6bto892().b[22][1]++;
          cov_gc6bto892().s[35]++;
          descriptor[key] = _;
        }
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[21][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_gc6bto892().s[36]++;
  if (target) {
    /* istanbul ignore next */
    cov_gc6bto892().b[23][0]++;
    cov_gc6bto892().s[37]++;
    Object.defineProperty(target, contextIn.name, descriptor);
  } else
  /* istanbul ignore next */
  {
    cov_gc6bto892().b[23][1]++;
  }
  cov_gc6bto892().s[38]++;
  done = true;
}));
var __runInitializers =
/* istanbul ignore next */
(cov_gc6bto892().s[39]++,
/* istanbul ignore next */
(cov_gc6bto892().b[24][0]++, this) &&
/* istanbul ignore next */
(cov_gc6bto892().b[24][1]++, this.__runInitializers) ||
/* istanbul ignore next */
(cov_gc6bto892().b[24][2]++, function (thisArg, initializers, value) {
  /* istanbul ignore next */
  cov_gc6bto892().f[3]++;
  var useValue =
  /* istanbul ignore next */
  (cov_gc6bto892().s[40]++, arguments.length > 2);
  /* istanbul ignore next */
  cov_gc6bto892().s[41]++;
  for (var i =
  /* istanbul ignore next */
  (cov_gc6bto892().s[42]++, 0); i < initializers.length; i++) {
    /* istanbul ignore next */
    cov_gc6bto892().s[43]++;
    value = useValue ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[25][0]++, initializers[i].call(thisArg, value)) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[25][1]++, initializers[i].call(thisArg));
  }
  /* istanbul ignore next */
  cov_gc6bto892().s[44]++;
  return useValue ?
  /* istanbul ignore next */
  (cov_gc6bto892().b[26][0]++, value) :
  /* istanbul ignore next */
  (cov_gc6bto892().b[26][1]++, void 0);
}));
var __setFunctionName =
/* istanbul ignore next */
(cov_gc6bto892().s[45]++,
/* istanbul ignore next */
(cov_gc6bto892().b[27][0]++, this) &&
/* istanbul ignore next */
(cov_gc6bto892().b[27][1]++, this.__setFunctionName) ||
/* istanbul ignore next */
(cov_gc6bto892().b[27][2]++, function (f, name, prefix) {
  /* istanbul ignore next */
  cov_gc6bto892().f[4]++;
  cov_gc6bto892().s[46]++;
  if (typeof name === "symbol") {
    /* istanbul ignore next */
    cov_gc6bto892().b[28][0]++;
    cov_gc6bto892().s[47]++;
    name = name.description ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[29][0]++, "[".concat(name.description, "]")) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[29][1]++, "");
  } else
  /* istanbul ignore next */
  {
    cov_gc6bto892().b[28][1]++;
  }
  cov_gc6bto892().s[48]++;
  return Object.defineProperty(f, "name", {
    configurable: true,
    value: prefix ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[30][0]++, "".concat(prefix, " ", name)) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[30][1]++, name)
  });
}));
/* istanbul ignore next */
cov_gc6bto892().s[49]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gc6bto892().s[50]++;
exports.MemoryCacheService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_gc6bto892().s[51]++, require("@nestjs/common"));
const cache_interface_1 =
/* istanbul ignore next */
(cov_gc6bto892().s[52]++, require("../interfaces/cache.interface"));
const logging_1 =
/* istanbul ignore next */
(cov_gc6bto892().s[53]++, require("@aiofix/logging"));
/**
 * @class MemoryCacheService
 * @description 内存缓存服务实现
 *
 * 该服务提供高性能的内存缓存功能，支持多种缓存策略：
 * - LRU (Least Recently Used): 最近最少使用策略
 * - LFU (Least Frequently Used): 最少使用频率策略
 * - FIFO (First In First Out): 先进先出策略
 * - TTL (Time To Live): 基于时间过期策略
 *
 * 主要特性：
 * 1. 支持多种缓存策略，可根据业务需求选择
 * 2. 自动过期清理和内存管理
 * 3. 完整的统计信息和健康检查
 * 4. 线程安全的并发访问
 * 5. 可配置的压缩和加密功能
 */
let MemoryCacheService =
/* istanbul ignore next */
(cov_gc6bto892().s[54]++, (() => {
  /* istanbul ignore next */
  cov_gc6bto892().f[5]++;
  let _classDecorators =
  /* istanbul ignore next */
  (cov_gc6bto892().s[55]++, [(0, common_1.Injectable)()]);
  let _classDescriptor;
  let _classExtraInitializers =
  /* istanbul ignore next */
  (cov_gc6bto892().s[56]++, []);
  let _classThis;
  var MemoryCacheService =
  /* istanbul ignore next */
  (cov_gc6bto892().s[57]++, _classThis = class {
    constructor(keyFactory, logger) {
      /* istanbul ignore next */
      cov_gc6bto892().f[6]++;
      cov_gc6bto892().s[58]++;
      this.keyFactory = keyFactory;
      /* istanbul ignore next */
      cov_gc6bto892().s[59]++;
      this.logger = logger;
      /** 内存存储 */
      /* istanbul ignore next */
      cov_gc6bto892().s[60]++;
      this.cache = new Map();
      /** 访问顺序队列（用于LRU策略） */
      /* istanbul ignore next */
      cov_gc6bto892().s[61]++;
      this.accessOrder = [];
      /** 访问频率映射（用于LFU策略） */
      /* istanbul ignore next */
      cov_gc6bto892().s[62]++;
      this.accessFrequency = new Map();
      /** 统计信息 */
      /* istanbul ignore next */
      cov_gc6bto892().s[63]++;
      this.stats = {
        totalEntries: 0,
        hits: 0,
        misses: 0,
        hitRate: 0,
        totalSize: 0,
        averageSize: 0,
        expiredEntries: 0,
        evictedEntries: 0,
        lastReset: Date.now()
      };
      /** 是否已销毁 */
      /* istanbul ignore next */
      cov_gc6bto892().s[64]++;
      this.isDestroyed = false;
      // 设置默认配置
      /* istanbul ignore next */
      cov_gc6bto892().s[65]++;
      this.config = {
        defaultTtl: 300000,
        // 5分钟
        maxSize: 1000,
        defaultStrategy: cache_interface_1.CacheStrategy.LRU,
        cleanupInterval: 60000,
        // 1分钟
        enableCompression: false,
        enableEncryption: false
      };
      // 启动清理定时器
      /* istanbul ignore next */
      cov_gc6bto892().s[66]++;
      this.startCleanupTimer();
      /* istanbul ignore next */
      cov_gc6bto892().s[67]++;
      this.logger.info(`MemoryCacheService initialized with config: ${JSON.stringify(this.config)}`, logging_1.LogContext.CACHE);
    }
    /**
     * @method onModuleDestroy
     * @description 模块销毁时的清理工作
     */
    async onModuleDestroy() {
      /* istanbul ignore next */
      cov_gc6bto892().f[7]++;
      cov_gc6bto892().s[68]++;
      this.isDestroyed = true;
      /* istanbul ignore next */
      cov_gc6bto892().s[69]++;
      if (this.cleanupTimer) {
        /* istanbul ignore next */
        cov_gc6bto892().b[31][0]++;
        cov_gc6bto892().s[70]++;
        clearInterval(this.cleanupTimer);
        /* istanbul ignore next */
        cov_gc6bto892().s[71]++;
        this.cleanupTimer = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[31][1]++;
      }
      cov_gc6bto892().s[72]++;
      this.cache.clear();
      /* istanbul ignore next */
      cov_gc6bto892().s[73]++;
      this.accessOrder.length = 0;
      /* istanbul ignore next */
      cov_gc6bto892().s[74]++;
      this.accessFrequency.clear();
      /* istanbul ignore next */
      cov_gc6bto892().s[75]++;
      this.logger.info('MemoryCacheService destroyed', logging_1.LogContext.CACHE);
    }
    /**
     * @method get
     * @description 获取缓存值
     * @param {CacheKey} key 缓存键
     * @returns {Promise<T | null>} 缓存值或null
     */
    async get(key) {
      /* istanbul ignore next */
      cov_gc6bto892().f[8]++;
      cov_gc6bto892().s[76]++;
      try {
        const keyString =
        /* istanbul ignore next */
        (cov_gc6bto892().s[77]++, this.keyFactory.toString(key));
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[78]++, this.cache.get(keyString));
        /* istanbul ignore next */
        cov_gc6bto892().s[79]++;
        if (!entry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[32][0]++;
          cov_gc6bto892().s[80]++;
          this.updateStats(false);
          /* istanbul ignore next */
          cov_gc6bto892().s[81]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[32][1]++;
        }
        // 检查是否过期
        cov_gc6bto892().s[82]++;
        if (this.isExpired(entry.value)) {
          /* istanbul ignore next */
          cov_gc6bto892().b[33][0]++;
          cov_gc6bto892().s[83]++;
          this.cache.delete(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[84]++;
          this.removeFromAccessOrder(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[85]++;
          this.accessFrequency.delete(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[86]++;
          this.stats.expiredEntries++;
          /* istanbul ignore next */
          cov_gc6bto892().s[87]++;
          this.updateStats(false);
          /* istanbul ignore next */
          cov_gc6bto892().s[88]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[33][1]++;
        }
        // 更新访问信息
        cov_gc6bto892().s[89]++;
        this.updateAccessInfo(keyString, entry);
        // 更新统计
        /* istanbul ignore next */
        cov_gc6bto892().s[90]++;
        this.updateStats(true);
        /* istanbul ignore next */
        cov_gc6bto892().s[91]++;
        return entry.value.value;
      } catch (error) {
        /* istanbul ignore next */
        cov_gc6bto892().s[92]++;
        this.logger.error(`Error getting cache value: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
        /* istanbul ignore next */
        cov_gc6bto892().s[93]++;
        this.updateStats(false);
        /* istanbul ignore next */
        cov_gc6bto892().s[94]++;
        return null;
      }
    }
    /**
     * @method set
     * @description 设置缓存值
     * @param {CacheKey} key 缓存键
     * @param {T} value 缓存值
     * @param {Partial<CacheOptions>} options 缓存选项
     * @returns {Promise<boolean>} 是否成功
     */
    async set(key, value, options) {
      /* istanbul ignore next */
      cov_gc6bto892().f[9]++;
      cov_gc6bto892().s[95]++;
      try {
        const keyString =
        /* istanbul ignore next */
        (cov_gc6bto892().s[96]++, this.keyFactory.toString(key));
        const strategy =
        /* istanbul ignore next */
        (cov_gc6bto892().s[97]++,
        /* istanbul ignore next */
        (cov_gc6bto892().b[34][0]++, options?.strategy) ??
        /* istanbul ignore next */
        (cov_gc6bto892().b[34][1]++, this.config.defaultStrategy));
        const ttl =
        /* istanbul ignore next */
        (cov_gc6bto892().s[98]++,
        /* istanbul ignore next */
        (cov_gc6bto892().b[35][0]++, options?.ttl) ??
        /* istanbul ignore next */
        (cov_gc6bto892().b[35][1]++, this.config.defaultTtl));
        // 计算值大小
        const valueSize =
        /* istanbul ignore next */
        (cov_gc6bto892().s[99]++, this.calculateSize(value));
        // 创建缓存值
        const cacheValue =
        /* istanbul ignore next */
        (cov_gc6bto892().s[100]++, {
          value,
          createdAt: Date.now(),
          expiresAt: ttl > 0 ?
          /* istanbul ignore next */
          (cov_gc6bto892().b[36][0]++, Date.now() + ttl) :
          /* istanbul ignore next */
          (cov_gc6bto892().b[36][1]++, undefined),
          accessCount: 0,
          lastAccessed: Date.now(),
          version: key.version,
          tags: key.tags,
          metadata: {
            strategy,
            compressed: this.config.enableCompression,
            encrypted: this.config.enableEncryption
          }
        });
        // 检查是否需要驱逐旧条目
        /* istanbul ignore next */
        cov_gc6bto892().s[101]++;
        if (this.cache.size >= this.config.maxSize) {
          /* istanbul ignore next */
          cov_gc6bto892().b[37][0]++;
          cov_gc6bto892().s[102]++;
          this.evictEntry(strategy);
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[37][1]++;
        }
        // 存储新条目
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[103]++, {
          value: cacheValue,
          size: valueSize,
          createdAt: Date.now(),
          lastAccessed: Date.now(),
          accessCount: 0,
          accessFrequency: 0
        });
        // 如果键已存在，先更新统计
        const existingEntry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[104]++, this.cache.get(keyString));
        /* istanbul ignore next */
        cov_gc6bto892().s[105]++;
        if (existingEntry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[38][0]++;
          cov_gc6bto892().s[106]++;
          this.stats.totalSize -= existingEntry.size;
          // 不减少 totalEntries，因为我们要替换它
        } else {
          /* istanbul ignore next */
          cov_gc6bto892().b[38][1]++;
          cov_gc6bto892().s[107]++;
          // 只有新键才增加 totalEntries
          this.stats.totalEntries++;
        }
        /* istanbul ignore next */
        cov_gc6bto892().s[108]++;
        this.cache.set(keyString, entry);
        /* istanbul ignore next */
        cov_gc6bto892().s[109]++;
        this.addToAccessOrder(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[110]++;
        this.accessFrequency.set(keyString, 0);
        // 更新统计
        /* istanbul ignore next */
        cov_gc6bto892().s[111]++;
        this.stats.totalSize += valueSize;
        /* istanbul ignore next */
        cov_gc6bto892().s[112]++;
        this.stats.averageSize = this.stats.totalEntries > 0 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[39][0]++, this.stats.totalSize / this.stats.totalEntries) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[39][1]++, 0);
        /* istanbul ignore next */
        cov_gc6bto892().s[113]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_gc6bto892().s[114]++;
        this.logger.error(`Error setting cache value: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
        /* istanbul ignore next */
        cov_gc6bto892().s[115]++;
        return false;
      }
    }
    /**
     * @method delete
     * @description 删除缓存值
     * @param {CacheKey} key 缓存键
     * @returns {Promise<boolean>} 是否成功
     */
    async delete(key) {
      /* istanbul ignore next */
      cov_gc6bto892().f[10]++;
      cov_gc6bto892().s[116]++;
      try {
        const keyString =
        /* istanbul ignore next */
        (cov_gc6bto892().s[117]++, this.keyFactory.toString(key));
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[118]++, this.cache.get(keyString));
        /* istanbul ignore next */
        cov_gc6bto892().s[119]++;
        if (!entry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[40][0]++;
          cov_gc6bto892().s[120]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[40][1]++;
        }
        // 从缓存中删除
        cov_gc6bto892().s[121]++;
        this.cache.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[122]++;
        this.removeFromAccessOrder(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[123]++;
        this.accessFrequency.delete(keyString);
        // 更新统计
        /* istanbul ignore next */
        cov_gc6bto892().s[124]++;
        this.stats.totalEntries = this.cache.size;
        /* istanbul ignore next */
        cov_gc6bto892().s[125]++;
        this.stats.totalSize -= entry.size;
        /* istanbul ignore next */
        cov_gc6bto892().s[126]++;
        this.stats.averageSize = this.stats.totalEntries > 0 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[41][0]++, this.stats.totalSize / this.stats.totalEntries) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[41][1]++, 0);
        /* istanbul ignore next */
        cov_gc6bto892().s[127]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_gc6bto892().s[128]++;
        this.logger.error(`Error deleting cache value: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
        /* istanbul ignore next */
        cov_gc6bto892().s[129]++;
        return false;
      }
    }
    /**
     * @method exists
     * @description 检查缓存键是否存在
     * @param {CacheKey} key 缓存键
     * @returns {Promise<boolean>} 是否存在
     */
    async exists(key) {
      /* istanbul ignore next */
      cov_gc6bto892().f[11]++;
      cov_gc6bto892().s[130]++;
      try {
        const keyString =
        /* istanbul ignore next */
        (cov_gc6bto892().s[131]++, this.keyFactory.toString(key));
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[132]++, this.cache.get(keyString));
        /* istanbul ignore next */
        cov_gc6bto892().s[133]++;
        if (!entry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[42][0]++;
          cov_gc6bto892().s[134]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[42][1]++;
        }
        // 检查是否过期
        cov_gc6bto892().s[135]++;
        if (this.isExpired(entry.value)) {
          /* istanbul ignore next */
          cov_gc6bto892().b[43][0]++;
          cov_gc6bto892().s[136]++;
          this.cache.delete(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[137]++;
          this.removeFromAccessOrder(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[138]++;
          this.accessFrequency.delete(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[139]++;
          this.stats.expiredEntries++;
          /* istanbul ignore next */
          cov_gc6bto892().s[140]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[43][1]++;
        }
        cov_gc6bto892().s[141]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_gc6bto892().s[142]++;
        this.logger.error(`Error checking cache key existence: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
        /* istanbul ignore next */
        cov_gc6bto892().s[143]++;
        return false;
      }
    }
    /**
     * @method clear
     * @description 清空缓存
     * @param {string} namespace 命名空间（可选）
     * @returns {Promise<boolean>} 是否成功
     */
    async clear(namespace) {
      /* istanbul ignore next */
      cov_gc6bto892().f[12]++;
      cov_gc6bto892().s[144]++;
      try {
        /* istanbul ignore next */
        cov_gc6bto892().s[145]++;
        if (namespace) {
          /* istanbul ignore next */
          cov_gc6bto892().b[44][0]++;
          // 清空指定命名空间
          const keysToDelete =
          /* istanbul ignore next */
          (cov_gc6bto892().s[146]++, []);
          /* istanbul ignore next */
          cov_gc6bto892().s[147]++;
          for (const [keyString] of this.cache.entries()) {
            /* istanbul ignore next */
            cov_gc6bto892().s[148]++;
            try {
              const parsedKey =
              /* istanbul ignore next */
              (cov_gc6bto892().s[149]++, this.keyFactory.parse(keyString));
              /* istanbul ignore next */
              cov_gc6bto892().s[150]++;
              if (parsedKey.namespace === namespace) {
                /* istanbul ignore next */
                cov_gc6bto892().b[45][0]++;
                cov_gc6bto892().s[151]++;
                keysToDelete.push(keyString);
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[45][1]++;
              }
            } catch {
              /* istanbul ignore next */
              cov_gc6bto892().s[152]++;
              // 如果解析失败，跳过这个键
              continue;
            }
          }
          // 如果通过解析没有找到键，尝试直接匹配（因为键格式可能包含版本号）
          /* istanbul ignore next */
          cov_gc6bto892().s[153]++;
          if (keysToDelete.length === 0) {
            /* istanbul ignore next */
            cov_gc6bto892().b[46][0]++;
            cov_gc6bto892().s[154]++;
            for (const [keyString] of this.cache.entries()) {
              /* istanbul ignore next */
              cov_gc6bto892().s[155]++;
              if (
              /* istanbul ignore next */
              (cov_gc6bto892().b[48][0]++, keyString.includes(`:${namespace}:`)) ||
              /* istanbul ignore next */
              (cov_gc6bto892().b[48][1]++, keyString.startsWith(`${namespace}:`))) {
                /* istanbul ignore next */
                cov_gc6bto892().b[47][0]++;
                cov_gc6bto892().s[156]++;
                keysToDelete.push(keyString);
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[47][1]++;
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_gc6bto892().b[46][1]++;
          }
          // 如果还是没有找到，尝试更宽松的匹配
          cov_gc6bto892().s[157]++;
          if (keysToDelete.length === 0) {
            /* istanbul ignore next */
            cov_gc6bto892().b[49][0]++;
            cov_gc6bto892().s[158]++;
            for (const [keyString] of this.cache.entries()) {
              /* istanbul ignore next */
              cov_gc6bto892().s[159]++;
              if (keyString.includes(namespace)) {
                /* istanbul ignore next */
                cov_gc6bto892().b[50][0]++;
                cov_gc6bto892().s[160]++;
                keysToDelete.push(keyString);
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[50][1]++;
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_gc6bto892().b[49][1]++;
          }
          // 如果还是没有找到，尝试最宽松的匹配（包含命名空间的任何键）
          cov_gc6bto892().s[161]++;
          if (keysToDelete.length === 0) {
            /* istanbul ignore next */
            cov_gc6bto892().b[51][0]++;
            cov_gc6bto892().s[162]++;
            for (const [keyString] of this.cache.entries()) {
              const parts =
              /* istanbul ignore next */
              (cov_gc6bto892().s[163]++, keyString.split(':'));
              /* istanbul ignore next */
              cov_gc6bto892().s[164]++;
              if (parts.includes(namespace)) {
                /* istanbul ignore next */
                cov_gc6bto892().b[52][0]++;
                cov_gc6bto892().s[165]++;
                keysToDelete.push(keyString);
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[52][1]++;
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_gc6bto892().b[51][1]++;
          }
          cov_gc6bto892().s[166]++;
          for (const keyString of keysToDelete) {
            const entry =
            /* istanbul ignore next */
            (cov_gc6bto892().s[167]++, this.cache.get(keyString));
            /* istanbul ignore next */
            cov_gc6bto892().s[168]++;
            if (entry) {
              /* istanbul ignore next */
              cov_gc6bto892().b[53][0]++;
              cov_gc6bto892().s[169]++;
              this.cache.delete(keyString);
              /* istanbul ignore next */
              cov_gc6bto892().s[170]++;
              this.removeFromAccessOrder(keyString);
              /* istanbul ignore next */
              cov_gc6bto892().s[171]++;
              this.accessFrequency.delete(keyString);
              /* istanbul ignore next */
              cov_gc6bto892().s[172]++;
              this.stats.totalSize -= entry.size;
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[53][1]++;
            }
          }
          /* istanbul ignore next */
          cov_gc6bto892().s[173]++;
          this.stats.totalEntries = this.cache.size;
          /* istanbul ignore next */
          cov_gc6bto892().s[174]++;
          this.stats.averageSize = this.stats.totalEntries > 0 ?
          /* istanbul ignore next */
          (cov_gc6bto892().b[54][0]++, this.stats.totalSize / this.stats.totalEntries) :
          /* istanbul ignore next */
          (cov_gc6bto892().b[54][1]++, 0);
        } else {
          /* istanbul ignore next */
          cov_gc6bto892().b[44][1]++;
          cov_gc6bto892().s[175]++;
          // 清空所有缓存
          this.cache.clear();
          /* istanbul ignore next */
          cov_gc6bto892().s[176]++;
          this.accessOrder.length = 0;
          /* istanbul ignore next */
          cov_gc6bto892().s[177]++;
          this.accessFrequency.clear();
          /* istanbul ignore next */
          cov_gc6bto892().s[178]++;
          this.stats.totalEntries = 0;
          /* istanbul ignore next */
          cov_gc6bto892().s[179]++;
          this.stats.totalSize = 0;
          /* istanbul ignore next */
          cov_gc6bto892().s[180]++;
          this.stats.averageSize = 0;
        }
        /* istanbul ignore next */
        cov_gc6bto892().s[181]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_gc6bto892().s[182]++;
        this.logger.error(`Error clearing cache: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
        /* istanbul ignore next */
        cov_gc6bto892().s[183]++;
        return false;
      }
    }
    /**
     * @method getStats
     * @description 获取缓存统计
     * @returns {Promise<CacheStats>} 缓存统计
     */
    async getStats() {
      /* istanbul ignore next */
      cov_gc6bto892().f[13]++;
      cov_gc6bto892().s[184]++;
      return {
        ...this.stats
      };
    }
    /**
     * @method getHealth
     * @description 获取缓存健康状态
     * @returns {Promise<CacheHealth>} 缓存健康状态
     */
    async getHealth() {
      /* istanbul ignore next */
      cov_gc6bto892().f[14]++;
      const startTime =
      /* istanbul ignore next */
      (cov_gc6bto892().s[185]++, Date.now());
      /* istanbul ignore next */
      cov_gc6bto892().s[186]++;
      try {
        // 简单的健康检查：尝试设置和获取一个测试值
        const testKey =
        /* istanbul ignore next */
        (cov_gc6bto892().s[187]++, this.keyFactory.create('health-check'));
        const testValue =
        /* istanbul ignore next */
        (cov_gc6bto892().s[188]++, {
          timestamp: Date.now()
        });
        /* istanbul ignore next */
        cov_gc6bto892().s[189]++;
        await this.set(testKey, testValue, {
          ttl: 1000
        });
        const retrieved =
        /* istanbul ignore next */
        (cov_gc6bto892().s[190]++, await this.get(testKey));
        const responseTime =
        /* istanbul ignore next */
        (cov_gc6bto892().s[191]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_gc6bto892().s[192]++;
        return {
          healthy: retrieved !== null,
          connected: true,
          responseTime,
          lastCheck: Date.now()
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_gc6bto892().s[193]++;
        this.logger.error(`Health check failed: ${error.message}`, logging_1.LogContext.CACHE);
        /* istanbul ignore next */
        cov_gc6bto892().s[194]++;
        return {
          healthy: false,
          connected: false,
          responseTime: Date.now() - startTime,
          error: error.message,
          lastCheck: Date.now()
        };
      }
    }
    /**
     * @method resetStats
     * @description 重置缓存统计
     * @returns {Promise<void>}
     */
    async resetStats() {
      /* istanbul ignore next */
      cov_gc6bto892().f[15]++;
      cov_gc6bto892().s[195]++;
      this.stats = {
        totalEntries: this.cache.size,
        hits: 0,
        misses: 0,
        hitRate: 0,
        totalSize: this.stats.totalSize,
        averageSize: this.stats.averageSize,
        expiredEntries: 0,
        evictedEntries: 0,
        lastReset: Date.now()
      };
    }
    /**
     * @private
     * @method startCleanupTimer
     * @description 启动清理定时器
     */
    startCleanupTimer() {
      /* istanbul ignore next */
      cov_gc6bto892().f[16]++;
      cov_gc6bto892().s[196]++;
      this.cleanupTimer = setInterval(() => {
        /* istanbul ignore next */
        cov_gc6bto892().f[17]++;
        cov_gc6bto892().s[197]++;
        this.cleanupExpiredEntries();
      }, this.config.cleanupInterval);
    }
    /**
     * @private
     * @method cleanupExpiredEntries
     * @description 清理过期条目
     */
    cleanupExpiredEntries() {
      /* istanbul ignore next */
      cov_gc6bto892().f[18]++;
      cov_gc6bto892().s[198]++;
      if (this.isDestroyed) {
        /* istanbul ignore next */
        cov_gc6bto892().b[55][0]++;
        cov_gc6bto892().s[199]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[55][1]++;
      }
      const keysToDelete =
      /* istanbul ignore next */
      (cov_gc6bto892().s[200]++, []);
      /* istanbul ignore next */
      cov_gc6bto892().s[201]++;
      for (const [keyString, entry] of this.cache.entries()) {
        /* istanbul ignore next */
        cov_gc6bto892().s[202]++;
        if (this.isExpired(entry.value)) {
          /* istanbul ignore next */
          cov_gc6bto892().b[56][0]++;
          cov_gc6bto892().s[203]++;
          keysToDelete.push(keyString);
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[56][1]++;
        }
      }
      /* istanbul ignore next */
      cov_gc6bto892().s[204]++;
      for (const keyString of keysToDelete) {
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[205]++, this.cache.get(keyString));
        /* istanbul ignore next */
        cov_gc6bto892().s[206]++;
        if (entry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[57][0]++;
          cov_gc6bto892().s[207]++;
          this.cache.delete(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[208]++;
          this.removeFromAccessOrder(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[209]++;
          this.accessFrequency.delete(keyString);
          /* istanbul ignore next */
          cov_gc6bto892().s[210]++;
          this.stats.totalSize -= entry.size;
          /* istanbul ignore next */
          cov_gc6bto892().s[211]++;
          this.stats.expiredEntries++;
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[57][1]++;
        }
      }
      /* istanbul ignore next */
      cov_gc6bto892().s[212]++;
      this.stats.totalEntries = this.cache.size;
      /* istanbul ignore next */
      cov_gc6bto892().s[213]++;
      this.stats.averageSize = this.stats.totalEntries > 0 ?
      /* istanbul ignore next */
      (cov_gc6bto892().b[58][0]++, this.stats.totalSize / this.stats.totalEntries) :
      /* istanbul ignore next */
      (cov_gc6bto892().b[58][1]++, 0);
      /* istanbul ignore next */
      cov_gc6bto892().s[214]++;
      if (keysToDelete.length > 0) {
        /* istanbul ignore next */
        cov_gc6bto892().b[59][0]++;
        cov_gc6bto892().s[215]++;
        this.logger.debug(`Cleaned up ${keysToDelete.length} expired entries`, logging_1.LogContext.CACHE);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[59][1]++;
      }
    }
    /**
     * @private
     * @method isExpired
     * @description 检查缓存值是否过期
     * @param {CacheValue} value 缓存值
     * @returns {boolean} 是否过期
     */
    isExpired(value) {
      /* istanbul ignore next */
      cov_gc6bto892().f[19]++;
      cov_gc6bto892().s[216]++;
      return /* istanbul ignore next */(cov_gc6bto892().b[60][0]++, value.expiresAt !== undefined) &&
      /* istanbul ignore next */
      (cov_gc6bto892().b[60][1]++, Date.now() > value.expiresAt);
    }
    /**
     * @private
     * @method calculateSize
     * @description 计算值大小
     * @param {any} value 值
     * @returns {number} 大小（字节）
     */
    calculateSize(_value) {
      /* istanbul ignore next */
      cov_gc6bto892().f[20]++;
      cov_gc6bto892().s[217]++;
      try {
        /* istanbul ignore next */
        cov_gc6bto892().s[218]++;
        return Buffer.byteLength(JSON.stringify(_value), 'utf8');
      } catch {
        /* istanbul ignore next */
        cov_gc6bto892().s[219]++;
        return 0;
      }
    }
    /**
     * @private
     * @method updateAccessInfo
     * @description 更新访问信息
     * @param {string} keyString 键字符串
     * @param {MemoryCacheEntry} entry 缓存条目
     */
    updateAccessInfo(keyString, entry) {
      /* istanbul ignore next */
      cov_gc6bto892().f[21]++;
      const now =
      /* istanbul ignore next */
      (cov_gc6bto892().s[220]++, Date.now());
      // 更新访问次数和时间
      /* istanbul ignore next */
      cov_gc6bto892().s[221]++;
      entry.value.accessCount++;
      /* istanbul ignore next */
      cov_gc6bto892().s[222]++;
      entry.value.lastAccessed = now;
      /* istanbul ignore next */
      cov_gc6bto892().s[223]++;
      entry.lastAccessed = now;
      /* istanbul ignore next */
      cov_gc6bto892().s[224]++;
      entry.accessCount++;
      // 更新访问频率（用于LFU策略）
      const currentFreq =
      /* istanbul ignore next */
      (cov_gc6bto892().s[225]++,
      /* istanbul ignore next */
      (cov_gc6bto892().b[61][0]++, this.accessFrequency.get(keyString)) ??
      /* istanbul ignore next */
      (cov_gc6bto892().b[61][1]++, 0));
      const newFreq =
      /* istanbul ignore next */
      (cov_gc6bto892().s[226]++, currentFreq + 1);
      /* istanbul ignore next */
      cov_gc6bto892().s[227]++;
      this.accessFrequency.set(keyString, newFreq);
      /* istanbul ignore next */
      cov_gc6bto892().s[228]++;
      entry.accessFrequency = newFreq;
      // 更新访问顺序（用于LRU策略）
      /* istanbul ignore next */
      cov_gc6bto892().s[229]++;
      this.removeFromAccessOrder(keyString);
      /* istanbul ignore next */
      cov_gc6bto892().s[230]++;
      this.accessOrder.push(keyString);
    }
    /**
     * @private
     * @method addToAccessOrder
     * @description 添加到访问顺序
     * @param {string} keyString 键字符串
     */
    addToAccessOrder(keyString) {
      /* istanbul ignore next */
      cov_gc6bto892().f[22]++;
      cov_gc6bto892().s[231]++;
      this.accessOrder.push(keyString);
    }
    /**
     * @private
     * @method removeFromAccessOrder
     * @description 从访问顺序中移除
     * @param {string} keyString 键字符串
     */
    removeFromAccessOrder(keyString) {
      /* istanbul ignore next */
      cov_gc6bto892().f[23]++;
      const index =
      /* istanbul ignore next */
      (cov_gc6bto892().s[232]++, this.accessOrder.indexOf(keyString));
      /* istanbul ignore next */
      cov_gc6bto892().s[233]++;
      if (index > -1) {
        /* istanbul ignore next */
        cov_gc6bto892().b[62][0]++;
        cov_gc6bto892().s[234]++;
        this.accessOrder.splice(index, 1);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[62][1]++;
      }
    }
    /**
     * @private
     * @method evictEntry
     * @description 驱逐缓存条目
     * @param {CacheStrategy} strategy 缓存策略
     */
    evictEntry(strategy) {
      /* istanbul ignore next */
      cov_gc6bto892().f[24]++;
      let keyToEvict;
      /* istanbul ignore next */
      cov_gc6bto892().s[235]++;
      switch (strategy) {
        case cache_interface_1.CacheStrategy.LRU:
          /* istanbul ignore next */
          cov_gc6bto892().b[63][0]++;
          cov_gc6bto892().s[236]++;
          // 驱逐最近最少使用的条目（访问顺序中的第一个）
          if (this.accessOrder.length > 0) {
            /* istanbul ignore next */
            cov_gc6bto892().b[64][0]++;
            cov_gc6bto892().s[237]++;
            keyToEvict = this.accessOrder[0];
          } else
          /* istanbul ignore next */
          {
            cov_gc6bto892().b[64][1]++;
          }
          cov_gc6bto892().s[238]++;
          break;
        case cache_interface_1.CacheStrategy.LFU:
          /* istanbul ignore next */
          cov_gc6bto892().b[63][1]++;
          {
            // 驱逐最少使用频率的条目
            let minFreq =
            /* istanbul ignore next */
            (cov_gc6bto892().s[239]++, Infinity);
            /* istanbul ignore next */
            cov_gc6bto892().s[240]++;
            for (const [key, freq] of this.accessFrequency.entries()) {
              /* istanbul ignore next */
              cov_gc6bto892().s[241]++;
              if (freq < minFreq) {
                /* istanbul ignore next */
                cov_gc6bto892().b[65][0]++;
                cov_gc6bto892().s[242]++;
                minFreq = freq;
                /* istanbul ignore next */
                cov_gc6bto892().s[243]++;
                keyToEvict = key;
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[65][1]++;
              }
            }
            /* istanbul ignore next */
            cov_gc6bto892().s[244]++;
            break;
          }
        case cache_interface_1.CacheStrategy.FIFO:
          /* istanbul ignore next */
          cov_gc6bto892().b[63][2]++;
          {
            // 驱逐最早创建的条目
            let oldestTime =
            /* istanbul ignore next */
            (cov_gc6bto892().s[245]++, Infinity);
            /* istanbul ignore next */
            cov_gc6bto892().s[246]++;
            for (const [key, entry] of this.cache.entries()) {
              /* istanbul ignore next */
              cov_gc6bto892().s[247]++;
              if (entry.createdAt < oldestTime) {
                /* istanbul ignore next */
                cov_gc6bto892().b[66][0]++;
                cov_gc6bto892().s[248]++;
                oldestTime = entry.createdAt;
                /* istanbul ignore next */
                cov_gc6bto892().s[249]++;
                keyToEvict = key;
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[66][1]++;
              }
            }
            /* istanbul ignore next */
            cov_gc6bto892().s[250]++;
            break;
          }
        case cache_interface_1.CacheStrategy.TTL:
          /* istanbul ignore next */
          cov_gc6bto892().b[63][3]++;
          {
            // 驱逐最早过期的条目
            let earliestExpiry =
            /* istanbul ignore next */
            (cov_gc6bto892().s[251]++, Infinity);
            /* istanbul ignore next */
            cov_gc6bto892().s[252]++;
            for (const [key, entry] of this.cache.entries()) {
              /* istanbul ignore next */
              cov_gc6bto892().s[253]++;
              if (
              /* istanbul ignore next */
              (cov_gc6bto892().b[68][0]++, entry.value.expiresAt) &&
              /* istanbul ignore next */
              (cov_gc6bto892().b[68][1]++, entry.value.expiresAt < earliestExpiry)) {
                /* istanbul ignore next */
                cov_gc6bto892().b[67][0]++;
                cov_gc6bto892().s[254]++;
                earliestExpiry = entry.value.expiresAt;
                /* istanbul ignore next */
                cov_gc6bto892().s[255]++;
                keyToEvict = key;
              } else
              /* istanbul ignore next */
              {
                cov_gc6bto892().b[67][1]++;
              }
            }
            /* istanbul ignore next */
            cov_gc6bto892().s[256]++;
            break;
          }
      }
      /* istanbul ignore next */
      cov_gc6bto892().s[257]++;
      if (keyToEvict) {
        /* istanbul ignore next */
        cov_gc6bto892().b[69][0]++;
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[258]++, this.cache.get(keyToEvict));
        /* istanbul ignore next */
        cov_gc6bto892().s[259]++;
        if (entry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[70][0]++;
          cov_gc6bto892().s[260]++;
          this.cache.delete(keyToEvict);
          /* istanbul ignore next */
          cov_gc6bto892().s[261]++;
          this.removeFromAccessOrder(keyToEvict);
          /* istanbul ignore next */
          cov_gc6bto892().s[262]++;
          this.accessFrequency.delete(keyToEvict);
          /* istanbul ignore next */
          cov_gc6bto892().s[263]++;
          this.stats.totalSize -= entry.size;
          /* istanbul ignore next */
          cov_gc6bto892().s[264]++;
          this.stats.evictedEntries++;
          /* istanbul ignore next */
          cov_gc6bto892().s[265]++;
          this.stats.totalEntries = this.cache.size;
          /* istanbul ignore next */
          cov_gc6bto892().s[266]++;
          this.stats.averageSize = this.stats.totalEntries > 0 ?
          /* istanbul ignore next */
          (cov_gc6bto892().b[71][0]++, this.stats.totalSize / this.stats.totalEntries) :
          /* istanbul ignore next */
          (cov_gc6bto892().b[71][1]++, 0);
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[70][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_gc6bto892().b[69][1]++;
        cov_gc6bto892().s[267]++;
        // 如果没有找到要驱逐的键，使用默认策略（LRU）
        if (this.accessOrder.length > 0) {
          /* istanbul ignore next */
          cov_gc6bto892().b[72][0]++;
          cov_gc6bto892().s[268]++;
          keyToEvict = this.accessOrder[0];
          const entry =
          /* istanbul ignore next */
          (cov_gc6bto892().s[269]++, this.cache.get(keyToEvict));
          /* istanbul ignore next */
          cov_gc6bto892().s[270]++;
          if (entry) {
            /* istanbul ignore next */
            cov_gc6bto892().b[73][0]++;
            cov_gc6bto892().s[271]++;
            this.cache.delete(keyToEvict);
            /* istanbul ignore next */
            cov_gc6bto892().s[272]++;
            this.removeFromAccessOrder(keyToEvict);
            /* istanbul ignore next */
            cov_gc6bto892().s[273]++;
            this.accessFrequency.delete(keyToEvict);
            /* istanbul ignore next */
            cov_gc6bto892().s[274]++;
            this.stats.totalSize -= entry.size;
            /* istanbul ignore next */
            cov_gc6bto892().s[275]++;
            this.stats.evictedEntries++;
            /* istanbul ignore next */
            cov_gc6bto892().s[276]++;
            this.stats.totalEntries = this.cache.size;
            /* istanbul ignore next */
            cov_gc6bto892().s[277]++;
            this.stats.averageSize = this.stats.totalEntries > 0 ?
            /* istanbul ignore next */
            (cov_gc6bto892().b[74][0]++, this.stats.totalSize / this.stats.totalEntries) :
            /* istanbul ignore next */
            (cov_gc6bto892().b[74][1]++, 0);
          } else
          /* istanbul ignore next */
          {
            cov_gc6bto892().b[73][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[72][1]++;
        }
      }
      // 确保驱逐后访问顺序和频率映射的一致性
      /* istanbul ignore next */
      cov_gc6bto892().s[278]++;
      if (keyToEvict) {
        /* istanbul ignore next */
        cov_gc6bto892().b[75][0]++;
        cov_gc6bto892().s[279]++;
        this.removeFromAccessOrder(keyToEvict);
        /* istanbul ignore next */
        cov_gc6bto892().s[280]++;
        this.accessFrequency.delete(keyToEvict);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[75][1]++;
      }
    }
    /**
     * @private
     * @method updateStats
     * @description 更新统计信息
     * @param {boolean} isHit 是否命中
     */
    updateStats(isHit) {
      /* istanbul ignore next */
      cov_gc6bto892().f[25]++;
      cov_gc6bto892().s[281]++;
      if (isHit) {
        /* istanbul ignore next */
        cov_gc6bto892().b[76][0]++;
        cov_gc6bto892().s[282]++;
        this.stats.hits++;
      } else {
        /* istanbul ignore next */
        cov_gc6bto892().b[76][1]++;
        cov_gc6bto892().s[283]++;
        this.stats.misses++;
      }
      const total =
      /* istanbul ignore next */
      (cov_gc6bto892().s[284]++, this.stats.hits + this.stats.misses);
      /* istanbul ignore next */
      cov_gc6bto892().s[285]++;
      this.stats.hitRate = total > 0 ?
      /* istanbul ignore next */
      (cov_gc6bto892().b[77][0]++, this.stats.hits / total) :
      /* istanbul ignore next */
      (cov_gc6bto892().b[77][1]++, 0);
    }
  });
  /* istanbul ignore next */
  cov_gc6bto892().s[286]++;
  __setFunctionName(_classThis, "MemoryCacheService");
  /* istanbul ignore next */
  cov_gc6bto892().s[287]++;
  (() => {
    /* istanbul ignore next */
    cov_gc6bto892().f[26]++;
    const _metadata =
    /* istanbul ignore next */
    (cov_gc6bto892().s[288]++,
    /* istanbul ignore next */
    (cov_gc6bto892().b[79][0]++, typeof Symbol === "function") &&
    /* istanbul ignore next */
    (cov_gc6bto892().b[79][1]++, Symbol.metadata) ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[78][0]++, Object.create(null)) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[78][1]++, void 0));
    /* istanbul ignore next */
    cov_gc6bto892().s[289]++;
    __esDecorate(null, _classDescriptor = {
      value: _classThis
    }, _classDecorators, {
      kind: "class",
      name: _classThis.name,
      metadata: _metadata
    }, null, _classExtraInitializers);
    /* istanbul ignore next */
    cov_gc6bto892().s[290]++;
    MemoryCacheService = _classThis = _classDescriptor.value;
    /* istanbul ignore next */
    cov_gc6bto892().s[291]++;
    if (_metadata) {
      /* istanbul ignore next */
      cov_gc6bto892().b[80][0]++;
      cov_gc6bto892().s[292]++;
      Object.defineProperty(_classThis, Symbol.metadata, {
        enumerable: true,
        configurable: true,
        writable: true,
        value: _metadata
      });
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[80][1]++;
    }
    cov_gc6bto892().s[293]++;
    __runInitializers(_classThis, _classExtraInitializers);
  })();
  /* istanbul ignore next */
  cov_gc6bto892().s[294]++;
  return MemoryCacheService = _classThis;
})());
/* istanbul ignore next */
cov_gc6bto892().s[295]++;
exports.MemoryCacheService = MemoryCacheService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,