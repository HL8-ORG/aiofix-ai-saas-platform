5beef8b798a417e1829a0d6c1b418f98
"use strict";

/* istanbul ignore next */
function cov_2c4qc5ulay() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts";
  var hash = "7becc66ba514d50e9741a6563fbe42ea2eaba360";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "16": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "17": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "18": {
        start: {
          line: 45,
          column: 18
        },
        end: {
          line: 219,
          column: 1
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 43
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 29
        }
      },
      "21": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "22": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "23": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 44
        }
      },
      "24": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 96
        }
      },
      "25": {
        start: {
          line: 183,
          column: 23
        },
        end: {
          line: 183,
          column: 44
        }
      },
      "26": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 102
        }
      },
      "27": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "28": {
        start: {
          line: 193,
          column: 32
        },
        end: {
          line: 193,
          column: 53
        }
      },
      "29": {
        start: {
          line: 194,
          column: 32
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "30": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "31": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 50
        }
      },
      "32": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 29
        }
      },
      "33": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "34": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 50
        }
      },
      "35": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 29
        }
      },
      "36": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 44
        }
      },
      "37": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 24
        }
      },
      "38": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "39": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 25
        }
      },
      "40": {
        start: {
          line: 220,
          column: 0
        },
        end: {
          line: 220,
          column: 34
        }
      },
      "41": {
        start: {
          line: 221,
          column: 0
        },
        end: {
          line: 224,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 39
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 21
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 109
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 171
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 44
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 182
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 21
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 191
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 54
          }
        }, {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 64,
            column: 69
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 63
          }
        }, {
          start: {
            line: 65,
            column: 67
          },
          end: {
            line: 65,
            column: 73
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 62
          }
        }, {
          start: {
            line: 66,
            column: 66
          },
          end: {
            line: 66,
            column: 68
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 59
          }
        }, {
          start: {
            line: 67,
            column: 63
          },
          end: {
            line: 67,
            column: 66
          }
        }],
        line: 67
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 70,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 70,
            column: 70
          }
        }, {
          start: {
            line: 70,
            column: 74
          },
          end: {
            line: 70,
            column: 77
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 70
          }
        }, {
          start: {
            line: 71,
            column: 74
          },
          end: {
            line: 71,
            column: 78
          }
        }],
        line: 71
      },
      "19": {
        loc: {
          start: {
            line: 72,
            column: 44
          },
          end: {
            line: 72,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 44
          },
          end: {
            line: 72,
            column: 93
          }
        }, {
          start: {
            line: 72,
            column: 97
          },
          end: {
            line: 72,
            column: 104
          }
        }],
        line: 72
      },
      "20": {
        loc: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 65
          }
        }, {
          start: {
            line: 76,
            column: 69
          },
          end: {
            line: 76,
            column: 75
          }
        }],
        line: 76
      },
      "21": {
        loc: {
          start: {
            line: 77,
            column: 35
          },
          end: {
            line: 77,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 35
          },
          end: {
            line: 77,
            column: 76
          }
        }, {
          start: {
            line: 77,
            column: 80
          },
          end: {
            line: 77,
            column: 86
          }
        }],
        line: 77
      },
      "22": {
        loc: {
          start: {
            line: 78,
            column: 38
          },
          end: {
            line: 78,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 38
          },
          end: {
            line: 78,
            column: 82
          }
        }, {
          start: {
            line: 78,
            column: 86
          },
          end: {
            line: 78,
            column: 91
          }
        }],
        line: 78
      },
      "23": {
        loc: {
          start: {
            line: 113,
            column: 22
          },
          end: {
            line: 113,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 22
          },
          end: {
            line: 113,
            column: 63
          }
        }, {
          start: {
            line: 113,
            column: 67
          },
          end: {
            line: 113,
            column: 78
          }
        }],
        line: 113
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 31
          },
          end: {
            line: 114,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 31
          },
          end: {
            line: 114,
            column: 72
          }
        }, {
          start: {
            line: 114,
            column: 76
          },
          end: {
            line: 114,
            column: 82
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 71
          }
        }, {
          start: {
            line: 115,
            column: 75
          },
          end: {
            line: 115,
            column: 77
          }
        }],
        line: 115
      },
      "26": {
        loc: {
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 68
          }
        }, {
          start: {
            line: 116,
            column: 72
          },
          end: {
            line: 116,
            column: 75
          }
        }],
        line: 116
      },
      "27": {
        loc: {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 81
          }
        }, {
          start: {
            line: 120,
            column: 85
          },
          end: {
            line: 120,
            column: 88
          }
        }],
        line: 120
      },
      "28": {
        loc: {
          start: {
            line: 121,
            column: 35
          },
          end: {
            line: 121,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 35
          },
          end: {
            line: 121,
            column: 75
          }
        }, {
          start: {
            line: 121,
            column: 79
          },
          end: {
            line: 121,
            column: 82
          }
        }],
        line: 121
      },
      "29": {
        loc: {
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 124,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 124,
            column: 81
          }
        }, {
          start: {
            line: 124,
            column: 85
          },
          end: {
            line: 124,
            column: 91
          }
        }],
        line: 124
      },
      "30": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "31": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 198,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 196,
            column: 33
          }
        }, {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 52
          }
        }, {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 198,
            column: 37
          }
        }],
        line: 196
      },
      "32": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "33": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 205,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 39
          }
        }, {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 204,
            column: 58
          }
        }, {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 43
          }
        }],
        line: 203
      },
      "34": {
        loc: {
          start: {
            line: 214,
            column: 23
          },
          end: {
            line: 214,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 48
          },
          end: {
            line: 214,
            column: 61
          }
        }, {
          start: {
            line: 214,
            column: 64
          },
          end: {
            line: 214,
            column: 77
          }
        }],
        line: 214
      },
      "35": {
        loc: {
          start: {
            line: 223,
            column: 37
          },
          end: {
            line: 223,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 140
          },
          end: {
            line: 223,
            column: 142
          }
        }, {
          start: {
            line: 223,
            column: 145
          },
          end: {
            line: 223,
            column: 151
          }
        }],
        line: 223
      },
      "36": {
        loc: {
          start: {
            line: 223,
            column: 50
          },
          end: {
            line: 223,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 50
          },
          end: {
            line: 223,
            column: 95
          }
        }, {
          start: {
            line: 223,
            column: 99
          },
          end: {
            line: 223,
            column: 121
          }
        }],
        line: 223
      },
      "37": {
        loc: {
          start: {
            line: 223,
            column: 153
          },
          end: {
            line: 223,
            column: 277
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 266
          },
          end: {
            line: 223,
            column: 268
          }
        }, {
          start: {
            line: 223,
            column: 271
          },
          end: {
            line: 223,
            column: 277
          }
        }],
        line: 223
      },
      "38": {
        loc: {
          start: {
            line: 223,
            column: 166
          },
          end: {
            line: 223,
            column: 247
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 166
          },
          end: {
            line: 223,
            column: 216
          }
        }, {
          start: {
            line: 223,
            column: 220
          },
          end: {
            line: 223,
            column: 247
          }
        }],
        line: 223
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/redis.config.ts"],
      sourcesContent: ["import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@aiofix/config';\nimport { PinoLoggerService } from '@aiofix/logging';\n\n/**\n * @class RedisConfig\n * @description\n * Redis\u914D\u7F6E\u7C7B\uFF0C\u8D1F\u8D23\u7BA1\u7406Redis\u7F13\u5B58\u548C\u6D88\u606F\u961F\u5217\u7684\u914D\u7F6E\u4FE1\u606F\u3002\n *\n * \u914D\u7F6E\u7BA1\u7406\u804C\u8D23\uFF1A\n * 1. \u63D0\u4F9BRedis\u7F13\u5B58\u914D\u7F6E\n * 2. \u63D0\u4F9B\u6D88\u606F\u961F\u5217\u914D\u7F6E\n * 3. \u7BA1\u7406\u8FDE\u63A5\u6C60\u548C\u6027\u80FD\u914D\u7F6E\n * 4. \u652F\u6301\u591A\u79DF\u6237\u7F13\u5B58\u9694\u79BB\n *\n * \u591A\u79DF\u6237\u652F\u6301\uFF1A\n * 1. \u57FA\u4E8E\u79DF\u6237ID\u7684\u7F13\u5B58\u952E\u547D\u540D\u7A7A\u95F4\n * 2. \u79DF\u6237\u7EA7\u7F13\u5B58\u9694\u79BB\n * 3. \u79DF\u6237\u7EA7\u961F\u5217\u9694\u79BB\n * 4. \u7F13\u5B58\u7EDF\u8BA1\u548C\u76D1\u63A7\n *\n * @param {ConfigService} configService \u914D\u7F6E\u670D\u52A1\n * @param {PinoLoggerService} logger \u65E5\u5FD7\u670D\u52A1\n *\n * @example\n * ```typescript\n * const redisConfig = new RedisConfig(configService, logger);\n * const cacheConfig = redisConfig.getCacheConfig();\n * const queueConfig = redisConfig.getQueueConfig();\n * ```\n * @since 1.0.0\n */\n@Injectable()\nexport class RedisConfig {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly logger: PinoLoggerService,\n  ) {}\n\n  /**\n   * @method getCacheConfig\n   * @description \u83B7\u53D6Redis\u7F13\u5B58\u914D\u7F6E\n   * @returns {object} Redis\u7F13\u5B58\u914D\u7F6E\u5BF9\u8C61\n   *\n   * \u914D\u7F6E\u5305\u542B\uFF1A\n   * 1. \u8FDE\u63A5\u914D\u7F6E\n   * 2. \u7F13\u5B58\u7B56\u7565\u914D\u7F6E\n   * 3. \u6027\u80FD\u4F18\u5316\u914D\u7F6E\n   * 4. \u591A\u79DF\u6237\u652F\u6301\u914D\u7F6E\n   */\n  getCacheConfig() {\n    return {\n      // \u8FDE\u63A5\u914D\u7F6E\n      host: this.configService.get('REDIS_HOST') || 'localhost',\n      port: parseInt(this.configService.get('REDIS_PORT') || '6379'),\n      password: this.configService.get('REDIS_PASSWORD') || '',\n      db: parseInt(this.configService.get('REDIS_DB') || '0'),\n\n      // \u8FDE\u63A5\u6C60\u914D\u7F6E\n      pool: {\n        min: parseInt(this.configService.get('REDIS_POOL_MIN') || '2'),\n        max: parseInt(this.configService.get('REDIS_POOL_MAX') || '10'),\n        idleTimeoutMillis: parseInt(\n          this.configService.get('REDIS_POOL_IDLE_TIMEOUT') || '30000',\n        ),\n      },\n\n      // \u7F13\u5B58\u914D\u7F6E\n      cache: {\n        ttl: parseInt(this.configService.get('CACHE_TTL') || '3600'), // \u9ED8\u8BA41\u5C0F\u65F6\n        maxItems: parseInt(this.configService.get('CACHE_MAX_ITEMS') || '1000'),\n        checkPeriod: parseInt(\n          this.configService.get('CACHE_CHECK_PERIOD') || '600',\n        ), // 10\u5206\u949F\n      },\n\n      // \u591A\u79DF\u6237\u914D\u7F6E\n      tenant: {\n        keyPrefix: 'tenant:',\n        namespaceSeparator: ':',\n        defaultTenant: 'platform',\n      },\n\n      // \u6027\u80FD\u914D\u7F6E\n      retryDelayOnFailover: 100,\n      maxRetriesPerRequest: 3,\n      lazyConnect: true,\n      keepAlive: 30000,\n\n      // \u96C6\u7FA4\u914D\u7F6E\uFF08\u5982\u679C\u9700\u8981\uFF09\n      cluster: {\n        enabled: false,\n        nodes: [],\n      },\n    };\n  }\n\n  /**\n   * @method getQueueConfig\n   * @description \u83B7\u53D6\u6D88\u606F\u961F\u5217\u914D\u7F6E\n   * @returns {object} \u6D88\u606F\u961F\u5217\u914D\u7F6E\u5BF9\u8C61\n   *\n   * \u914D\u7F6E\u5305\u542B\uFF1A\n   * 1. Bull\u961F\u5217\u914D\u7F6E\n   * 2. \u91CD\u8BD5\u548C\u9519\u8BEF\u5904\u7406\u914D\u7F6E\n   * 3. \u5E76\u53D1\u548C\u6027\u80FD\u914D\u7F6E\n   * 4. \u76D1\u63A7\u548C\u7EDF\u8BA1\u914D\u7F6E\n   */\n  getQueueConfig() {\n    return {\n      // Redis\u8FDE\u63A5\u914D\u7F6E\n      redis: {\n        host: this.configService.get('BULL_REDIS_HOST') || 'localhost',\n        port: parseInt(this.configService.get('BULL_REDIS_PORT') || '6379'),\n        password: this.configService.get('BULL_REDIS_PASSWORD') || '',\n        db: parseInt(this.configService.get('BULL_REDIS_DB') || '1'),\n      },\n\n      // \u961F\u5217\u914D\u7F6E\n      queue: {\n        concurrency: parseInt(\n          this.configService.get('QUEUE_CONCURRENCY') || '5',\n        ),\n        attempts: parseInt(this.configService.get('QUEUE_ATTEMPTS') || '3'),\n        backoff: {\n          type: 'exponential',\n          delay: parseInt(\n            this.configService.get('QUEUE_BACKOFF_DELAY') || '2000',\n          ),\n        },\n        removeOnComplete: 100,\n        removeOnFail: 50,\n      },\n\n      // \u961F\u5217\u7C7B\u578B\u914D\u7F6E\n      queues: {\n        'domain-events': {\n          concurrency: 10,\n          attempts: 5,\n          backoff: { type: 'exponential', delay: 2000 },\n        },\n        notifications: {\n          concurrency: 20,\n          attempts: 3,\n          backoff: { type: 'fixed', delay: 1000 },\n        },\n        emails: {\n          concurrency: 5,\n          attempts: 3,\n          backoff: { type: 'exponential', delay: 5000 },\n        },\n        'push-notifications': {\n          concurrency: 15,\n          attempts: 3,\n          backoff: { type: 'fixed', delay: 2000 },\n        },\n        sms: {\n          concurrency: 10,\n          attempts: 3,\n          backoff: { type: 'exponential', delay: 3000 },\n        },\n      },\n\n      // \u591A\u79DF\u6237\u961F\u5217\u914D\u7F6E\n      tenant: {\n        keyPrefix: 'queue:tenant:',\n        namespaceSeparator: ':',\n      },\n    };\n  }\n\n  /**\n   * @method getTenantCacheKey\n   * @description \u751F\u6210\u79DF\u6237\u7EA7\u7F13\u5B58\u952E\n   * @param {string} tenantId \u79DF\u6237ID\n   * @param {string} key \u539F\u59CB\u952E\n   * @returns {string} \u79DF\u6237\u7EA7\u7F13\u5B58\u952E\n   */\n  getTenantCacheKey(tenantId: string, key: string): string {\n    const config = this.getCacheConfig();\n    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${key}`;\n  }\n\n  /**\n   * @method getTenantQueueName\n   * @description \u751F\u6210\u79DF\u6237\u7EA7\u961F\u5217\u540D\u79F0\n   * @param {string} tenantId \u79DF\u6237ID\n   * @param {string} queueName \u539F\u59CB\u961F\u5217\u540D\u79F0\n   * @returns {string} \u79DF\u6237\u7EA7\u961F\u5217\u540D\u79F0\n   */\n  getTenantQueueName(tenantId: string, queueName: string): string {\n    const config = this.getQueueConfig();\n    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${queueName}`;\n  }\n\n  /**\n   * @method validateConfig\n   * @description \u9A8C\u8BC1Redis\u914D\u7F6E\n   * @returns {boolean} \u914D\u7F6E\u662F\u5426\u6709\u6548\n   */\n  validateConfig(): boolean {\n    try {\n      const cacheConfig = this.getCacheConfig();\n      const queueConfig = this.getQueueConfig();\n\n      // \u9A8C\u8BC1\u7F13\u5B58\u914D\u7F6E\n      if (\n        !cacheConfig.host ||\n        typeof cacheConfig.port !== 'number' ||\n        cacheConfig.port <= 0\n      ) {\n        this.logger.error('Redis\u7F13\u5B58\u914D\u7F6E\u4E0D\u5B8C\u6574');\n        return false;\n      }\n\n      // \u9A8C\u8BC1\u961F\u5217\u914D\u7F6E\n      if (\n        !queueConfig.redis.host ||\n        typeof queueConfig.redis.port !== 'number' ||\n        queueConfig.redis.port <= 0\n      ) {\n        this.logger.error('Redis\u961F\u5217\u914D\u7F6E\u4E0D\u5B8C\u6574');\n        return false;\n      }\n\n      this.logger.info('Redis\u914D\u7F6E\u9A8C\u8BC1\u901A\u8FC7');\n      return true;\n    } catch (error) {\n      this.logger.error('Redis\u914D\u7F6E\u9A8C\u8BC1\u5931\u8D25', undefined, {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return false;\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7becc66ba514d50e9741a6563fbe42ea2eaba360"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c4qc5ulay = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c4qc5ulay();
var __decorate =
/* istanbul ignore next */
(cov_2c4qc5ulay().s[0]++,
/* istanbul ignore next */
(cov_2c4qc5ulay().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2c4qc5ulay().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_2c4qc5ulay().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_2c4qc5ulay().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_2c4qc5ulay().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_2c4qc5ulay().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_2c4qc5ulay().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_2c4qc5ulay().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_2c4qc5ulay().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_2c4qc5ulay().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2c4qc5ulay().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().b[3][0]++;
    cov_2c4qc5ulay().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_2c4qc5ulay().b[3][1]++;
    cov_2c4qc5ulay().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_2c4qc5ulay().b[5][0]++;
        cov_2c4qc5ulay().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_2c4qc5ulay().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2c4qc5ulay().s[9]++;
  return /* istanbul ignore next */(cov_2c4qc5ulay().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_2c4qc5ulay().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_2c4qc5ulay().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_2c4qc5ulay().s[10]++,
/* istanbul ignore next */
(cov_2c4qc5ulay().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2c4qc5ulay().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_2c4qc5ulay().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_2c4qc5ulay().f[1]++;
  cov_2c4qc5ulay().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2c4qc5ulay().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2c4qc5ulay().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().b[11][0]++;
    cov_2c4qc5ulay().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_2c4qc5ulay().b[11][1]++;
  }
}));
var _a, _b;
/* istanbul ignore next */
cov_2c4qc5ulay().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2c4qc5ulay().s[14]++;
exports.RedisConfig = void 0;
const common_1 =
/* istanbul ignore next */
(cov_2c4qc5ulay().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_2c4qc5ulay().s[16]++, require("@aiofix/config"));
const logging_1 =
/* istanbul ignore next */
(cov_2c4qc5ulay().s[17]++, require("@aiofix/logging"));
/**
 * @class RedisConfig
 * @description
 * Redis配置类，负责管理Redis缓存和消息队列的配置信息。
 *
 * 配置管理职责：
 * 1. 提供Redis缓存配置
 * 2. 提供消息队列配置
 * 3. 管理连接池和性能配置
 * 4. 支持多租户缓存隔离
 *
 * 多租户支持：
 * 1. 基于租户ID的缓存键命名空间
 * 2. 租户级缓存隔离
 * 3. 租户级队列隔离
 * 4. 缓存统计和监控
 *
 * @param {ConfigService} configService 配置服务
 * @param {PinoLoggerService} logger 日志服务
 *
 * @example
 * ```typescript
 * const redisConfig = new RedisConfig(configService, logger);
 * const cacheConfig = redisConfig.getCacheConfig();
 * const queueConfig = redisConfig.getQueueConfig();
 * ```
 * @since 1.0.0
 */
/* istanbul ignore next */
cov_2c4qc5ulay().s[18]++;
let RedisConfig = class RedisConfig {
  constructor(configService, logger) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[2]++;
    cov_2c4qc5ulay().s[19]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_2c4qc5ulay().s[20]++;
    this.logger = logger;
  }
  /**
   * @method getCacheConfig
   * @description 获取Redis缓存配置
   * @returns {object} Redis缓存配置对象
   *
   * 配置包含：
   * 1. 连接配置
   * 2. 缓存策略配置
   * 3. 性能优化配置
   * 4. 多租户支持配置
   */
  getCacheConfig() {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[3]++;
    cov_2c4qc5ulay().s[21]++;
    return {
      // 连接配置
      host:
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[13][0]++, this.configService.get('REDIS_HOST')) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[13][1]++, 'localhost'),
      port: parseInt(
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[14][0]++, this.configService.get('REDIS_PORT')) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[14][1]++, '6379')),
      password:
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[15][0]++, this.configService.get('REDIS_PASSWORD')) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[15][1]++, ''),
      db: parseInt(
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[16][0]++, this.configService.get('REDIS_DB')) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[16][1]++, '0')),
      // 连接池配置
      pool: {
        min: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[17][0]++, this.configService.get('REDIS_POOL_MIN')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[17][1]++, '2')),
        max: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[18][0]++, this.configService.get('REDIS_POOL_MAX')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[18][1]++, '10')),
        idleTimeoutMillis: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[19][0]++, this.configService.get('REDIS_POOL_IDLE_TIMEOUT')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[19][1]++, '30000'))
      },
      // 缓存配置
      cache: {
        ttl: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[20][0]++, this.configService.get('CACHE_TTL')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[20][1]++, '3600')),
        // 默认1小时
        maxItems: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[21][0]++, this.configService.get('CACHE_MAX_ITEMS')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[21][1]++, '1000')),
        checkPeriod: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[22][0]++, this.configService.get('CACHE_CHECK_PERIOD')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[22][1]++, '600')) // 10分钟
      },
      // 多租户配置
      tenant: {
        keyPrefix: 'tenant:',
        namespaceSeparator: ':',
        defaultTenant: 'platform'
      },
      // 性能配置
      retryDelayOnFailover: 100,
      maxRetriesPerRequest: 3,
      lazyConnect: true,
      keepAlive: 30000,
      // 集群配置（如果需要）
      cluster: {
        enabled: false,
        nodes: []
      }
    };
  }
  /**
   * @method getQueueConfig
   * @description 获取消息队列配置
   * @returns {object} 消息队列配置对象
   *
   * 配置包含：
   * 1. Bull队列配置
   * 2. 重试和错误处理配置
   * 3. 并发和性能配置
   * 4. 监控和统计配置
   */
  getQueueConfig() {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[4]++;
    cov_2c4qc5ulay().s[22]++;
    return {
      // Redis连接配置
      redis: {
        host:
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[23][0]++, this.configService.get('BULL_REDIS_HOST')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[23][1]++, 'localhost'),
        port: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[24][0]++, this.configService.get('BULL_REDIS_PORT')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[24][1]++, '6379')),
        password:
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[25][0]++, this.configService.get('BULL_REDIS_PASSWORD')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[25][1]++, ''),
        db: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[26][0]++, this.configService.get('BULL_REDIS_DB')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[26][1]++, '1'))
      },
      // 队列配置
      queue: {
        concurrency: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[27][0]++, this.configService.get('QUEUE_CONCURRENCY')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[27][1]++, '5')),
        attempts: parseInt(
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[28][0]++, this.configService.get('QUEUE_ATTEMPTS')) ||
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[28][1]++, '3')),
        backoff: {
          type: 'exponential',
          delay: parseInt(
          /* istanbul ignore next */
          (cov_2c4qc5ulay().b[29][0]++, this.configService.get('QUEUE_BACKOFF_DELAY')) ||
          /* istanbul ignore next */
          (cov_2c4qc5ulay().b[29][1]++, '2000'))
        },
        removeOnComplete: 100,
        removeOnFail: 50
      },
      // 队列类型配置
      queues: {
        'domain-events': {
          concurrency: 10,
          attempts: 5,
          backoff: {
            type: 'exponential',
            delay: 2000
          }
        },
        notifications: {
          concurrency: 20,
          attempts: 3,
          backoff: {
            type: 'fixed',
            delay: 1000
          }
        },
        emails: {
          concurrency: 5,
          attempts: 3,
          backoff: {
            type: 'exponential',
            delay: 5000
          }
        },
        'push-notifications': {
          concurrency: 15,
          attempts: 3,
          backoff: {
            type: 'fixed',
            delay: 2000
          }
        },
        sms: {
          concurrency: 10,
          attempts: 3,
          backoff: {
            type: 'exponential',
            delay: 3000
          }
        }
      },
      // 多租户队列配置
      tenant: {
        keyPrefix: 'queue:tenant:',
        namespaceSeparator: ':'
      }
    };
  }
  /**
   * @method getTenantCacheKey
   * @description 生成租户级缓存键
   * @param {string} tenantId 租户ID
   * @param {string} key 原始键
   * @returns {string} 租户级缓存键
   */
  getTenantCacheKey(tenantId, key) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[5]++;
    const config =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[23]++, this.getCacheConfig());
    /* istanbul ignore next */
    cov_2c4qc5ulay().s[24]++;
    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${key}`;
  }
  /**
   * @method getTenantQueueName
   * @description 生成租户级队列名称
   * @param {string} tenantId 租户ID
   * @param {string} queueName 原始队列名称
   * @returns {string} 租户级队列名称
   */
  getTenantQueueName(tenantId, queueName) {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[6]++;
    const config =
    /* istanbul ignore next */
    (cov_2c4qc5ulay().s[25]++, this.getQueueConfig());
    /* istanbul ignore next */
    cov_2c4qc5ulay().s[26]++;
    return `${config.tenant.keyPrefix}${tenantId}${config.tenant.namespaceSeparator}${queueName}`;
  }
  /**
   * @method validateConfig
   * @description 验证Redis配置
   * @returns {boolean} 配置是否有效
   */
  validateConfig() {
    /* istanbul ignore next */
    cov_2c4qc5ulay().f[7]++;
    cov_2c4qc5ulay().s[27]++;
    try {
      const cacheConfig =
      /* istanbul ignore next */
      (cov_2c4qc5ulay().s[28]++, this.getCacheConfig());
      const queueConfig =
      /* istanbul ignore next */
      (cov_2c4qc5ulay().s[29]++, this.getQueueConfig());
      // 验证缓存配置
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[31][0]++, !cacheConfig.host) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[31][1]++, typeof cacheConfig.port !== 'number') ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[31][2]++, cacheConfig.port <= 0)) {
        /* istanbul ignore next */
        cov_2c4qc5ulay().b[30][0]++;
        cov_2c4qc5ulay().s[31]++;
        this.logger.error('Redis缓存配置不完整');
        /* istanbul ignore next */
        cov_2c4qc5ulay().s[32]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2c4qc5ulay().b[30][1]++;
      }
      // 验证队列配置
      cov_2c4qc5ulay().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[33][0]++, !queueConfig.redis.host) ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[33][1]++, typeof queueConfig.redis.port !== 'number') ||
      /* istanbul ignore next */
      (cov_2c4qc5ulay().b[33][2]++, queueConfig.redis.port <= 0)) {
        /* istanbul ignore next */
        cov_2c4qc5ulay().b[32][0]++;
        cov_2c4qc5ulay().s[34]++;
        this.logger.error('Redis队列配置不完整');
        /* istanbul ignore next */
        cov_2c4qc5ulay().s[35]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2c4qc5ulay().b[32][1]++;
      }
      cov_2c4qc5ulay().s[36]++;
      this.logger.info('Redis配置验证通过');
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[37]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[38]++;
      this.logger.error('Redis配置验证失败', undefined, {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[34][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2c4qc5ulay().b[34][1]++, String(error))
      });
      /* istanbul ignore next */
      cov_2c4qc5ulay().s[39]++;
      return false;
    }
  }
};
/* istanbul ignore next */
cov_2c4qc5ulay().s[40]++;
exports.RedisConfig = RedisConfig;
/* istanbul ignore next */
cov_2c4qc5ulay().s[41]++;
exports.RedisConfig = RedisConfig = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_2c4qc5ulay().b[36][0]++, typeof config_1.ConfigService !== "undefined") &&
/* istanbul ignore next */
(cov_2c4qc5ulay().b[36][1]++, config_1.ConfigService)) === "function" ?
/* istanbul ignore next */
(cov_2c4qc5ulay().b[35][0]++, _a) :
/* istanbul ignore next */
(cov_2c4qc5ulay().b[35][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_2c4qc5ulay().b[38][0]++, typeof logging_1.PinoLoggerService !== "undefined") &&
/* istanbul ignore next */
(cov_2c4qc5ulay().b[38][1]++, logging_1.PinoLoggerService)) === "function" ?
/* istanbul ignore next */
(cov_2c4qc5ulay().b[37][0]++, _b) :
/* istanbul ignore next */
(cov_2c4qc5ulay().b[37][1]++, Object)])], RedisConfig);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,