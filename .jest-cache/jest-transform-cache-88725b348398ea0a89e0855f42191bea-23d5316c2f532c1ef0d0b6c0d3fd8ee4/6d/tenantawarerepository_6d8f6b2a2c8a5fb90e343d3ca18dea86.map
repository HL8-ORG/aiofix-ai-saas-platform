{"version":3,"names":["cov_1gac91zysm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","isolation_config_1","require","TenantAwareRepository","constructor","adapterFactory","isolationConfig","tenantId","adapter","createAdapter","findAll","options","query","getTableName","addIsolationConditions","orderBy","limit","offset","result","rows","findById","id","findByTenantId","isTableLevel","tenantIdField","getTenantIdField","isDatabaseLevel","isSchemaLevel","tenantAdapter","create","data","getDefaultTenantId","fields","Object","keys","values","placeholders","map","_","index","join","update","setClause","field","delete","rowCount","count","conditions","paramIndex","whereConditions","entries","key","value","push","length","parseInt","exists","record","strategy","getStrategy","IsolationStrategy","TABLE_LEVEL","shouldAutoAddTenantCondition","toLowerCase","includes","SCHEMA_LEVEL","DATABASE_LEVEL","setTenantId","getTenantId","createTenantSpecificRepository","RepositoryClass","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/repositories/tenant-aware.repository.ts"],"sourcesContent":["/**\n * @fileoverview 租户感知的仓储基类\n * @description 根据隔离策略配置自动处理租户数据隔离\n */\n\nimport {\n  IsolationConfigService,\n  IsolationStrategy,\n} from '../config/isolation.config';\nimport { DatabaseAdapterFactory } from '../adapters/database-adapter.factory';\nimport { IDatabaseAdapter } from '../interfaces/database.interface';\n\n/**\n * @class TenantAwareRepository\n * @description 租户感知的仓储基类\n * @template T 实体类型\n */\nexport abstract class TenantAwareRepository<T> {\n  protected adapter: IDatabaseAdapter;\n\n  constructor(\n    protected readonly adapterFactory: DatabaseAdapterFactory,\n    protected readonly isolationConfig: IsolationConfigService,\n    protected readonly tenantId?: string,\n  ) {\n    this.adapter = this.adapterFactory.createAdapter(tenantId);\n  }\n\n  /**\n   * @method findAll\n   * @description 查找所有记录\n   * @param {object} [options] 查询选项\n   * @returns {Promise<T[]>} 记录列表\n   */\n  async findAll(options?: {\n    limit?: number;\n    offset?: number;\n    orderBy?: string;\n  }): Promise<T[]> {\n    let query = `SELECT * FROM ${this.getTableName()}`;\n\n    // 根据隔离策略添加条件\n    query = this.addIsolationConditions(query);\n\n    // 添加排序\n    if (options?.orderBy) {\n      query += ` ORDER BY ${options.orderBy}`;\n    }\n\n    // 添加分页\n    if (options?.limit) {\n      query += ` LIMIT ${options.limit}`;\n      if (options?.offset) {\n        query += ` OFFSET ${options.offset}`;\n      }\n    }\n\n    const result = await this.adapter.query(query);\n    return result.rows;\n  }\n\n  /**\n   * @method findById\n   * @description 根据ID查找记录\n   * @param {string} id 记录ID\n   * @returns {Promise<T | null>} 记录或null\n   */\n  async findById(id: string): Promise<T | null> {\n    let query = `SELECT * FROM ${this.getTableName()} WHERE id = $1`;\n\n    // 根据隔离策略添加条件\n    query = this.addIsolationConditions(query);\n\n    const result = await this.adapter.query(query, [id]);\n    return result.rows[0] || null;\n  }\n\n  /**\n   * @method findByTenantId\n   * @description 根据租户ID查找记录\n   * @param {string} tenantId 租户ID\n   * @param {object} [options] 查询选项\n   * @returns {Promise<T[]>} 记录列表\n   */\n  async findByTenantId(\n    tenantId: string,\n    options?: { limit?: number; offset?: number },\n  ): Promise<T[]> {\n    let query = `SELECT * FROM ${this.getTableName()}`;\n\n    // 添加租户条件\n    if (this.isolationConfig.isTableLevel()) {\n      const tenantIdField = this.isolationConfig.getTenantIdField();\n      query += ` WHERE ${tenantIdField} = $1`;\n    } else if (\n      this.isolationConfig.isDatabaseLevel() ||\n      this.isolationConfig.isSchemaLevel()\n    ) {\n      // 对于数据库级和Schema级隔离，需要创建新的适配器\n      const tenantAdapter = this.adapterFactory.createAdapter(tenantId);\n      query = `SELECT * FROM ${this.getTableName()}`;\n\n      if (options?.limit) {\n        query += ` LIMIT ${options.limit}`;\n        if (options?.offset) {\n          query += ` OFFSET ${options.offset}`;\n        }\n      }\n\n      const result = await tenantAdapter.query(query);\n      return result.rows;\n    }\n\n    // 添加分页\n    if (options?.limit) {\n      query += ` LIMIT ${options.limit}`;\n      if (options?.offset) {\n        query += ` OFFSET ${options.offset}`;\n      }\n    }\n\n    const result = await this.adapter.query(query, [tenantId]);\n    return result.rows;\n  }\n\n  /**\n   * @method create\n   * @description 创建新记录\n   * @param {Partial<T>} data 记录数据\n   * @returns {Promise<T>} 创建的记录\n   */\n  async create(data: Partial<T>): Promise<T> {\n    const tenantId = this.tenantId || this.isolationConfig.getDefaultTenantId();\n\n    // 为表级隔离添加tenant_id\n    if (this.isolationConfig.isTableLevel()) {\n      const tenantIdField = this.isolationConfig.getTenantIdField();\n      (data as any)[tenantIdField] = tenantId;\n    }\n\n    const fields = Object.keys(data);\n    const values = Object.values(data);\n    const placeholders = fields.map((_, index) => `$${index + 1}`).join(', ');\n\n    const query = `\n      INSERT INTO ${this.getTableName()} (${fields.join(', ')})\n      VALUES (${placeholders})\n      RETURNING *\n    `;\n\n    const result = await this.adapter.query(query, values);\n    return result.rows[0];\n  }\n\n  /**\n   * @method update\n   * @description 更新记录\n   * @param {string} id 记录ID\n   * @param {Partial<T>} data 更新数据\n   * @returns {Promise<T | null>} 更新后的记录\n   */\n  async update(id: string, data: Partial<T>): Promise<T | null> {\n    const fields = Object.keys(data);\n    const values = Object.values(data);\n    const setClause = fields\n      .map((field, index) => `${field} = $${index + 2}`)\n      .join(', ');\n\n    let query = `\n      UPDATE ${this.getTableName()}\n      SET ${setClause}, updated_at = NOW()\n      WHERE id = $1\n    `;\n\n    // 根据隔离策略添加条件\n    query = this.addIsolationConditions(query);\n\n    const result = await this.adapter.query(query, [id, ...values]);\n    return result.rows[0] || null;\n  }\n\n  /**\n   * @method delete\n   * @description 删除记录\n   * @param {string} id 记录ID\n   * @returns {Promise<boolean>} 是否删除成功\n   */\n  async delete(id: string): Promise<boolean> {\n    let query = `DELETE FROM ${this.getTableName()} WHERE id = $1`;\n\n    // 根据隔离策略添加条件\n    query = this.addIsolationConditions(query);\n\n    const result = await this.adapter.query(query, [id]);\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  /**\n   * @method count\n   * @description 统计记录数量\n   * @param {object} [conditions] 查询条件\n   * @returns {Promise<number>} 记录数量\n   */\n  async count(conditions?: Record<string, any>): Promise<number> {\n    let query = `SELECT COUNT(*) as count FROM ${this.getTableName()}`;\n    const values: any[] = [];\n    let paramIndex = 1;\n\n    // 添加查询条件\n    if (conditions) {\n      const whereConditions = Object.entries(conditions).map(([key, value]) => {\n        query += ` WHERE ${key} = $${paramIndex}`;\n        values.push(value);\n        paramIndex++;\n        return `${key} = $${paramIndex}`;\n      });\n\n      if (whereConditions.length > 0) {\n        query += ` WHERE ${whereConditions.join(' AND ')}`;\n      }\n    }\n\n    // 根据隔离策略添加条件\n    query = this.addIsolationConditions(query);\n\n    const result = await this.adapter.query(query, values);\n    return parseInt(result.rows[0]?.count) || 0;\n  }\n\n  /**\n   * @method exists\n   * @description 检查记录是否存在\n   * @param {string} id 记录ID\n   * @returns {Promise<boolean>} 是否存在\n   */\n  async exists(id: string): Promise<boolean> {\n    const record = await this.findById(id);\n    return record !== null;\n  }\n\n  /**\n   * @method addIsolationConditions\n   * @description 根据隔离策略添加隔离条件\n   * @param {string} query 原始查询\n   * @returns {string} 修改后的查询\n   * @protected\n   */\n  protected addIsolationConditions(query: string): string {\n    if (!this.tenantId) {\n      return query;\n    }\n\n    const strategy = this.isolationConfig.getStrategy();\n\n    switch (strategy) {\n      case IsolationStrategy.TABLE_LEVEL:\n        if (this.isolationConfig.shouldAutoAddTenantCondition()) {\n          const tenantIdField = this.isolationConfig.getTenantIdField();\n          if (!query.toLowerCase().includes('where')) {\n            return `${query} WHERE ${tenantIdField} = '${this.tenantId}'`;\n          } else {\n            return `${query} AND ${tenantIdField} = '${this.tenantId}'`;\n          }\n        }\n        break;\n\n      case IsolationStrategy.SCHEMA_LEVEL:\n        // Schema级隔离通过适配器处理，这里不需要修改查询\n        break;\n\n      case IsolationStrategy.DATABASE_LEVEL:\n        // 数据库级隔离通过适配器处理，这里不需要修改查询\n        break;\n    }\n\n    return query;\n  }\n\n  /**\n   * @method getTableName\n   * @description 获取表名（子类必须实现）\n   * @returns {string} 表名\n   * @abstract\n   */\n  protected abstract getTableName(): string;\n\n  /**\n   * @method setTenantId\n   * @description 设置租户ID\n   * @param {string} tenantId 租户ID\n   */\n  setTenantId(tenantId: string): void {\n    (this as any).tenantId = tenantId;\n    this.adapter = this.adapterFactory.createAdapter(tenantId);\n  }\n\n  /**\n   * @method getTenantId\n   * @description 获取当前租户ID\n   * @returns {string | undefined} 租户ID\n   */\n  getTenantId(): string | undefined {\n    return this.tenantId;\n  }\n\n  /**\n   * @method createTenantSpecificRepository\n   * @description 创建特定租户的仓储实例\n   * @param {string} tenantId 租户ID\n   * @returns {TenantAwareRepository<T>} 新的仓储实例\n   */\n  createTenantSpecificRepository(tenantId: string): TenantAwareRepository<T> {\n    const RepositoryClass = this.constructor as new (\n      adapterFactory: DatabaseAdapterFactory,\n      isolationConfig: IsolationConfigService,\n      tenantId?: string,\n    ) => TenantAwareRepository<T>;\n\n    return new RepositoryClass(\n      this.adapterFactory,\n      this.isolationConfig,\n      tenantId,\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}