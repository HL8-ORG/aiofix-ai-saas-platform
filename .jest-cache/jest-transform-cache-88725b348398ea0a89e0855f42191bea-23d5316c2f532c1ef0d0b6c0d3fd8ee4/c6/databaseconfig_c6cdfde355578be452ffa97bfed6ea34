2627a106bfcbd5e5e270c764a9f9fc6e
"use strict";

/* istanbul ignore next */
function cov_23v5ly6mx() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/database.config.ts";
  var hash = "a226bc6ddece950eeffa0cd901aedf989c3da4e1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/database.config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "16": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "17": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "18": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 204,
          column: 1
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 45
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 29
        }
      },
      "21": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "22": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 148,
          column: 10
        }
      },
      "23": {
        start: {
          line: 157,
          column: 32
        },
        end: {
          line: 157,
          column: 72
        }
      },
      "24": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 72
        }
      },
      "25": {
        start: {
          line: 167,
          column: 27
        },
        end: {
          line: 167,
          column: 51
        }
      },
      "26": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 10
        }
      },
      "27": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "28": {
        start: {
          line: 180,
          column: 35
        },
        end: {
          line: 180,
          column: 59
        }
      },
      "29": {
        start: {
          line: 181,
          column: 34
        },
        end: {
          line: 181,
          column: 57
        }
      },
      "30": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "31": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 53
        }
      },
      "32": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "33": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "34": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 50
        }
      },
      "35": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 29
        }
      },
      "36": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 42
        }
      },
      "37": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 24
        }
      },
      "38": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 200,
          column: 15
        }
      },
      "39": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 25
        }
      },
      "40": {
        start: {
          line: 205,
          column: 0
        },
        end: {
          line: 205,
          column: 40
        }
      },
      "41": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 209,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 40
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 111
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 36
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 156
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 166
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 21
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 178
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 58
          }
        }, {
          start: {
            line: 64,
            column: 62
          },
          end: {
            line: 64,
            column: 73
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 67
          }
        }, {
          start: {
            line: 65,
            column: 71
          },
          end: {
            line: 65,
            column: 77
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 60
          }
        }, {
          start: {
            line: 66,
            column: 64
          },
          end: {
            line: 66,
            column: 81
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 62
          }
        }, {
          start: {
            line: 67,
            column: 66
          },
          end: {
            line: 67,
            column: 79
          }
        }],
        line: 67
      },
      "17": {
        loc: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 66
          }
        }, {
          start: {
            line: 68,
            column: 70
          },
          end: {
            line: 68,
            column: 87
          }
        }],
        line: 68
      },
      "18": {
        loc: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 74
          }
        }, {
          start: {
            line: 71,
            column: 78
          },
          end: {
            line: 71,
            column: 81
          }
        }],
        line: 71
      },
      "19": {
        loc: {
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 72,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 72,
            column: 74
          }
        }, {
          start: {
            line: 72,
            column: 78
          },
          end: {
            line: 72,
            column: 82
          }
        }],
        line: 72
      },
      "20": {
        loc: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 76,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 76,
            column: 97
          }
        }, {
          start: {
            line: 76,
            column: 101
          },
          end: {
            line: 76,
            column: 108
          }
        }],
        line: 76
      },
      "21": {
        loc: {
          start: {
            line: 93,
            column: 17
          },
          end: {
            line: 97,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 18
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: 97,
            column: 18
          },
          end: {
            line: 97,
            column: 23
          }
        }],
        line: 93
      },
      "22": {
        loc: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 115,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 114,
            column: 55
          }
        }, {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 103
          }
        }],
        line: 114
      },
      "23": {
        loc: {
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 68
          }
        }, {
          start: {
            line: 118,
            column: 72
          },
          end: {
            line: 118,
            column: 87
          }
        }],
        line: 118
      },
      "24": {
        loc: {
          start: {
            line: 119,
            column: 31
          },
          end: {
            line: 119,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 31
          },
          end: {
            line: 119,
            column: 82
          }
        }, {
          start: {
            line: 119,
            column: 86
          },
          end: {
            line: 119,
            column: 108
          }
        }],
        line: 119
      },
      "25": {
        loc: {
          start: {
            line: 158,
            column: 15
          },
          end: {
            line: 158,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 15
          },
          end: {
            line: 158,
            column: 40
          }
        }, {
          start: {
            line: 158,
            column: 44
          },
          end: {
            line: 158,
            column: 71
          }
        }],
        line: 158
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 36
          }
        }, {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 184,
            column: 40
          }
        }, {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 40
          }
        }],
        line: 183
      },
      "28": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "29": {
        loc: {
          start: {
            line: 199,
            column: 23
          },
          end: {
            line: 199,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 48
          },
          end: {
            line: 199,
            column: 61
          }
        }, {
          start: {
            line: 199,
            column: 64
          },
          end: {
            line: 199,
            column: 77
          }
        }],
        line: 199
      },
      "30": {
        loc: {
          start: {
            line: 208,
            column: 37
          },
          end: {
            line: 208,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 140
          },
          end: {
            line: 208,
            column: 142
          }
        }, {
          start: {
            line: 208,
            column: 145
          },
          end: {
            line: 208,
            column: 151
          }
        }],
        line: 208
      },
      "31": {
        loc: {
          start: {
            line: 208,
            column: 50
          },
          end: {
            line: 208,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 50
          },
          end: {
            line: 208,
            column: 95
          }
        }, {
          start: {
            line: 208,
            column: 99
          },
          end: {
            line: 208,
            column: 121
          }
        }],
        line: 208
      },
      "32": {
        loc: {
          start: {
            line: 208,
            column: 153
          },
          end: {
            line: 208,
            column: 277
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 266
          },
          end: {
            line: 208,
            column: 268
          }
        }, {
          start: {
            line: 208,
            column: 271
          },
          end: {
            line: 208,
            column: 277
          }
        }],
        line: 208
      },
      "33": {
        loc: {
          start: {
            line: 208,
            column: 166
          },
          end: {
            line: 208,
            column: 247
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 166
          },
          end: {
            line: 208,
            column: 216
          }
        }, {
          start: {
            line: 208,
            column: 220
          },
          end: {
            line: 208,
            column: 247
          }
        }],
        line: 208
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/database.config.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/database/src/config/database.config.ts"],
      sourcesContent: ["import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@aiofix/config';\nimport { PinoLoggerService } from '@aiofix/logging';\n\n/**\n * @class DatabaseConfig\n * @description\n * \u6570\u636E\u5E93\u914D\u7F6E\u7C7B\uFF0C\u8D1F\u8D23\u7BA1\u7406PostgreSQL\u548CMongoDB\u7684\u914D\u7F6E\u4FE1\u606F\u3002\n *\n * \u914D\u7F6E\u7BA1\u7406\u804C\u8D23\uFF1A\n * 1. \u63D0\u4F9BPostgreSQL\u6570\u636E\u5E93\u8FDE\u63A5\u914D\u7F6E\n * 2. \u63D0\u4F9BMongoDB\u6570\u636E\u5E93\u8FDE\u63A5\u914D\u7F6E\n * 3. \u7BA1\u7406\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u914D\u7F6E\n * 4. \u652F\u6301\u591A\u79DF\u6237\u6570\u636E\u5E93\u914D\u7F6E\n *\n * \u591A\u79DF\u6237\u652F\u6301\uFF1A\n * 1. \u652F\u6301\u79DF\u6237\u7EA7\u6570\u636E\u5E93\u9694\u79BB\n * 2. \u52A8\u6001\u6570\u636E\u5E93\u8FDE\u63A5\u7BA1\u7406\n * 3. \u79DF\u6237\u6570\u636E\u5E93\u8DEF\u7531\n * 4. \u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u4F18\u5316\n *\n * @param {ConfigService} configService \u914D\u7F6E\u670D\u52A1\n * @param {PinoLoggerService} logger \u65E5\u5FD7\u670D\u52A1\n *\n * @example\n * ```typescript\n * const dbConfig = new DatabaseConfig(configService, logger);\n * const postgresConfig = dbConfig.getPostgresConfig();\n * const mongodbConfig = dbConfig.getMongoDBConfig();\n * ```\n * @since 1.0.0\n */\n@Injectable()\nexport class DatabaseConfig {\n  constructor(\n    private readonly _configService: ConfigService,\n    private readonly logger: PinoLoggerService,\n  ) {}\n\n  /**\n   * @method getPostgresConfig\n   * @description \u83B7\u53D6PostgreSQL\u6570\u636E\u5E93\u914D\u7F6E\n   * @returns {object} PostgreSQL\u914D\u7F6E\u5BF9\u8C61\n   *\n   * \u914D\u7F6E\u5305\u542B\uFF1A\n   * 1. \u6570\u636E\u5E93\u8FDE\u63A5\u4FE1\u606F\n   * 2. \u8FDE\u63A5\u6C60\u914D\u7F6E\n   * 3. \u591A\u79DF\u6237\u6570\u636E\u5E93\u652F\u6301\n   * 4. \u6027\u80FD\u4F18\u5316\u914D\u7F6E\n   */\n  getPostgresConfig() {\n    return {\n      // \u4E3B\u6570\u636E\u5E93\u914D\u7F6E\n      host: this._configService.get('POSTGRES_HOST') ?? 'localhost',\n      port: parseInt(this._configService.get('POSTGRES_PORT') ?? '5432'),\n      database: this._configService.get('POSTGRES_DB') ?? 'aiofix_platform',\n      username: this._configService.get('POSTGRES_USER') ?? 'aiofix_user',\n      password: this._configService.get('POSTGRES_PASSWORD') ?? 'aiofix_password',\n\n      // \u8FDE\u63A5\u6C60\u914D\u7F6E\n      pool: {\n        min: parseInt(this._configService.get('POSTGRES_POOL_MIN') ?? '2'),\n        max: parseInt(this._configService.get('POSTGRES_POOL_MAX') ?? '10'),\n        acquireTimeoutMillis: 30000,\n        createTimeoutMillis: 30000,\n        destroyTimeoutMillis: 5000,\n        idleTimeoutMillis: parseInt(\n          this._configService.get('POSTGRES_POOL_IDLE_TIMEOUT') ?? '30000',\n        ),\n        reapIntervalMillis: 1000,\n        createRetryIntervalMillis: 200,\n      },\n\n      // \u591A\u79DF\u6237\u6570\u636E\u5E93\u914D\u7F6E\n      tenantDatabases: {\n        'tenant-1': 'aiofix_tenant_1',\n        'tenant-2': 'aiofix_tenant_2',\n        'tenant-3': 'aiofix_tenant_3',\n      },\n\n      // \u6027\u80FD\u914D\u7F6E\n      synchronize: this._configService.get('NODE_ENV') === 'development',\n      logging: this._configService.get('NODE_ENV') === 'development',\n      cache: {\n        duration: 30000, // 30\u79D2\u7F13\u5B58\n      },\n\n      // SSL\u914D\u7F6E\n      ssl:\n        this._configService.get('NODE_ENV') === 'production'\n          ? {\n              rejectUnauthorized: false,\n            }\n          : false,\n    };\n  }\n\n  /**\n   * @method getMongoDBConfig\n   * @description \u83B7\u53D6MongoDB\u6570\u636E\u5E93\u914D\u7F6E\n   * @returns {object} MongoDB\u914D\u7F6E\u5BF9\u8C61\n   *\n   * \u914D\u7F6E\u5305\u542B\uFF1A\n   * 1. \u4E8B\u4EF6\u5B58\u50A8\u6570\u636E\u5E93\u914D\u7F6E\n   * 2. \u901A\u77E5\u6A21\u5757\u6570\u636E\u5E93\u914D\u7F6E\n   * 3. \u8FDE\u63A5\u6C60\u548C\u6027\u80FD\u914D\u7F6E\n   * 4. \u7D22\u5F15\u548C\u9A8C\u8BC1\u914D\u7F6E\n   */\n  getMongoDBConfig() {\n    return {\n      // \u4E3B\u8FDE\u63A5URI\n      uri:\n        this._configService.get('MONGODB_URI') ??\n        'mongodb://aiofix_admin:aiofix_password@localhost:27017/aiofix_events?authSource=admin',\n\n      // \u6570\u636E\u5E93\u914D\u7F6E\n      databases: {\n        events: this._configService.get('MONGODB_EVENTS_DB') ?? 'aiofix_events',\n        notifications:\n          this._configService.get('MONGODB_NOTIFICATIONS_DB') ?? 'aiofix_notifications',\n      },\n\n      // \u8FDE\u63A5\u914D\u7F6E\n      options: {\n        maxPoolSize: 10,\n        minPoolSize: 2,\n        maxIdleTimeMS: 30000,\n        serverSelectionTimeoutMS: 5000,\n        socketTimeoutMS: 45000,\n        bufferMaxEntries: 0,\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      },\n\n      // \u4E8B\u4EF6\u5B58\u50A8\u914D\u7F6E\n      eventStore: {\n        collection: 'domain_events',\n        snapshotCollection: 'aggregate_snapshots',\n        maxEventsPerSnapshot: 100,\n      },\n\n      // \u901A\u77E5\u5B58\u50A8\u914D\u7F6E\n      notifications: {\n        collection: 'notifications',\n        indexes: [\n          { keys: { id: 1 }, options: { unique: true } },\n          { keys: { type: 1, status: 1 } },\n          { keys: { tenantId: 1, userId: 1 } },\n          { keys: { createdAt: 1 } },\n        ],\n      },\n    };\n  }\n\n  /**\n   * @method getTenantDatabaseName\n   * @description \u83B7\u53D6\u79DF\u6237\u6570\u636E\u5E93\u540D\u79F0\n   * @param {string} tenantId \u79DF\u6237ID\n   * @returns {string} \u79DF\u6237\u6570\u636E\u5E93\u540D\u79F0\n   */\n  getTenantDatabaseName(tenantId: string): string {\n    const tenantDatabases = this.getPostgresConfig().tenantDatabases as Record<\n      string,\n      string\n    >;\n    return tenantDatabases[tenantId] || `aiofix_tenant_${tenantId}`;\n  }\n\n  /**\n   * @method getTenantPostgresConfig\n   * @description \u83B7\u53D6\u79DF\u6237PostgreSQL\u914D\u7F6E\n   * @param {string} tenantId \u79DF\u6237ID\n   * @returns {object} \u79DF\u6237PostgreSQL\u914D\u7F6E\n   */\n  getTenantPostgresConfig(tenantId: string) {\n    const baseConfig = this.getPostgresConfig();\n    return {\n      ...baseConfig,\n      database: this.getTenantDatabaseName(tenantId),\n    };\n  }\n\n  /**\n   * @method validateConfig\n   * @description \u9A8C\u8BC1\u6570\u636E\u5E93\u914D\u7F6E\n   * @returns {boolean} \u914D\u7F6E\u662F\u5426\u6709\u6548\n   */\n  validateConfig(): boolean {\n    try {\n      const postgresConfig = this.getPostgresConfig();\n      const mongodbConfig = this.getMongoDBConfig();\n\n      // \u9A8C\u8BC1PostgreSQL\u914D\u7F6E\n      if (\n        !postgresConfig.host ||\n        !postgresConfig.database ||\n        !postgresConfig.username\n      ) {\n        this.logger.error('PostgreSQL\u914D\u7F6E\u4E0D\u5B8C\u6574');\n        return false;\n      }\n\n      // \u9A8C\u8BC1MongoDB\u914D\u7F6E\n      if (!mongodbConfig.uri) {\n        this.logger.error('MongoDB\u914D\u7F6E\u4E0D\u5B8C\u6574');\n        return false;\n      }\n\n      this.logger.info('\u6570\u636E\u5E93\u914D\u7F6E\u9A8C\u8BC1\u901A\u8FC7');\n      return true;\n    } catch (error) {\n      this.logger.error('\u6570\u636E\u5E93\u914D\u7F6E\u9A8C\u8BC1\u5931\u8D25', undefined, {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return false;\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a226bc6ddece950eeffa0cd901aedf989c3da4e1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23v5ly6mx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23v5ly6mx();
var __decorate =
/* istanbul ignore next */
(cov_23v5ly6mx().s[0]++,
/* istanbul ignore next */
(cov_23v5ly6mx().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_23v5ly6mx().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_23v5ly6mx().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_23v5ly6mx().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_23v5ly6mx().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_23v5ly6mx().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_23v5ly6mx().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_23v5ly6mx().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_23v5ly6mx().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_23v5ly6mx().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_23v5ly6mx().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_23v5ly6mx().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_23v5ly6mx().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_23v5ly6mx().b[3][0]++;
    cov_23v5ly6mx().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_23v5ly6mx().b[3][1]++;
    cov_23v5ly6mx().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_23v5ly6mx().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_23v5ly6mx().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_23v5ly6mx().b[5][0]++;
        cov_23v5ly6mx().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_23v5ly6mx().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_23v5ly6mx().s[9]++;
  return /* istanbul ignore next */(cov_23v5ly6mx().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_23v5ly6mx().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_23v5ly6mx().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_23v5ly6mx().s[10]++,
/* istanbul ignore next */
(cov_23v5ly6mx().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_23v5ly6mx().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_23v5ly6mx().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_23v5ly6mx().f[1]++;
  cov_23v5ly6mx().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_23v5ly6mx().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_23v5ly6mx().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_23v5ly6mx().b[11][0]++;
    cov_23v5ly6mx().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_23v5ly6mx().b[11][1]++;
  }
}));
var _a, _b;
/* istanbul ignore next */
cov_23v5ly6mx().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_23v5ly6mx().s[14]++;
exports.DatabaseConfig = void 0;
const common_1 =
/* istanbul ignore next */
(cov_23v5ly6mx().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_23v5ly6mx().s[16]++, require("@aiofix/config"));
const logging_1 =
/* istanbul ignore next */
(cov_23v5ly6mx().s[17]++, require("@aiofix/logging"));
/**
 * @class DatabaseConfig
 * @description
 * 数据库配置类，负责管理PostgreSQL和MongoDB的配置信息。
 *
 * 配置管理职责：
 * 1. 提供PostgreSQL数据库连接配置
 * 2. 提供MongoDB数据库连接配置
 * 3. 管理数据库连接池配置
 * 4. 支持多租户数据库配置
 *
 * 多租户支持：
 * 1. 支持租户级数据库隔离
 * 2. 动态数据库连接管理
 * 3. 租户数据库路由
 * 4. 数据库连接池优化
 *
 * @param {ConfigService} configService 配置服务
 * @param {PinoLoggerService} logger 日志服务
 *
 * @example
 * ```typescript
 * const dbConfig = new DatabaseConfig(configService, logger);
 * const postgresConfig = dbConfig.getPostgresConfig();
 * const mongodbConfig = dbConfig.getMongoDBConfig();
 * ```
 * @since 1.0.0
 */
/* istanbul ignore next */
cov_23v5ly6mx().s[18]++;
let DatabaseConfig = class DatabaseConfig {
  constructor(_configService, logger) {
    /* istanbul ignore next */
    cov_23v5ly6mx().f[2]++;
    cov_23v5ly6mx().s[19]++;
    this._configService = _configService;
    /* istanbul ignore next */
    cov_23v5ly6mx().s[20]++;
    this.logger = logger;
  }
  /**
   * @method getPostgresConfig
   * @description 获取PostgreSQL数据库配置
   * @returns {object} PostgreSQL配置对象
   *
   * 配置包含：
   * 1. 数据库连接信息
   * 2. 连接池配置
   * 3. 多租户数据库支持
   * 4. 性能优化配置
   */
  getPostgresConfig() {
    /* istanbul ignore next */
    cov_23v5ly6mx().f[3]++;
    cov_23v5ly6mx().s[21]++;
    return {
      // 主数据库配置
      host:
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[13][0]++, this._configService.get('POSTGRES_HOST')) ??
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[13][1]++, 'localhost'),
      port: parseInt(
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[14][0]++, this._configService.get('POSTGRES_PORT')) ??
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[14][1]++, '5432')),
      database:
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[15][0]++, this._configService.get('POSTGRES_DB')) ??
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[15][1]++, 'aiofix_platform'),
      username:
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[16][0]++, this._configService.get('POSTGRES_USER')) ??
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[16][1]++, 'aiofix_user'),
      password:
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[17][0]++, this._configService.get('POSTGRES_PASSWORD')) ??
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[17][1]++, 'aiofix_password'),
      // 连接池配置
      pool: {
        min: parseInt(
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[18][0]++, this._configService.get('POSTGRES_POOL_MIN')) ??
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[18][1]++, '2')),
        max: parseInt(
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[19][0]++, this._configService.get('POSTGRES_POOL_MAX')) ??
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[19][1]++, '10')),
        acquireTimeoutMillis: 30000,
        createTimeoutMillis: 30000,
        destroyTimeoutMillis: 5000,
        idleTimeoutMillis: parseInt(
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[20][0]++, this._configService.get('POSTGRES_POOL_IDLE_TIMEOUT')) ??
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[20][1]++, '30000')),
        reapIntervalMillis: 1000,
        createRetryIntervalMillis: 200
      },
      // 多租户数据库配置
      tenantDatabases: {
        'tenant-1': 'aiofix_tenant_1',
        'tenant-2': 'aiofix_tenant_2',
        'tenant-3': 'aiofix_tenant_3'
      },
      // 性能配置
      synchronize: this._configService.get('NODE_ENV') === 'development',
      logging: this._configService.get('NODE_ENV') === 'development',
      cache: {
        duration: 30000 // 30秒缓存
      },
      // SSL配置
      ssl: this._configService.get('NODE_ENV') === 'production' ?
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[21][0]++, {
        rejectUnauthorized: false
      }) :
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[21][1]++, false)
    };
  }
  /**
   * @method getMongoDBConfig
   * @description 获取MongoDB数据库配置
   * @returns {object} MongoDB配置对象
   *
   * 配置包含：
   * 1. 事件存储数据库配置
   * 2. 通知模块数据库配置
   * 3. 连接池和性能配置
   * 4. 索引和验证配置
   */
  getMongoDBConfig() {
    /* istanbul ignore next */
    cov_23v5ly6mx().f[4]++;
    cov_23v5ly6mx().s[22]++;
    return {
      // 主连接URI
      uri:
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[22][0]++, this._configService.get('MONGODB_URI')) ??
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[22][1]++, 'mongodb://aiofix_admin:aiofix_password@localhost:27017/aiofix_events?authSource=admin'),
      // 数据库配置
      databases: {
        events:
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[23][0]++, this._configService.get('MONGODB_EVENTS_DB')) ??
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[23][1]++, 'aiofix_events'),
        notifications:
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[24][0]++, this._configService.get('MONGODB_NOTIFICATIONS_DB')) ??
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[24][1]++, 'aiofix_notifications')
      },
      // 连接配置
      options: {
        maxPoolSize: 10,
        minPoolSize: 2,
        maxIdleTimeMS: 30000,
        serverSelectionTimeoutMS: 5000,
        socketTimeoutMS: 45000,
        bufferMaxEntries: 0,
        useNewUrlParser: true,
        useUnifiedTopology: true
      },
      // 事件存储配置
      eventStore: {
        collection: 'domain_events',
        snapshotCollection: 'aggregate_snapshots',
        maxEventsPerSnapshot: 100
      },
      // 通知存储配置
      notifications: {
        collection: 'notifications',
        indexes: [{
          keys: {
            id: 1
          },
          options: {
            unique: true
          }
        }, {
          keys: {
            type: 1,
            status: 1
          }
        }, {
          keys: {
            tenantId: 1,
            userId: 1
          }
        }, {
          keys: {
            createdAt: 1
          }
        }]
      }
    };
  }
  /**
   * @method getTenantDatabaseName
   * @description 获取租户数据库名称
   * @param {string} tenantId 租户ID
   * @returns {string} 租户数据库名称
   */
  getTenantDatabaseName(tenantId) {
    /* istanbul ignore next */
    cov_23v5ly6mx().f[5]++;
    const tenantDatabases =
    /* istanbul ignore next */
    (cov_23v5ly6mx().s[23]++, this.getPostgresConfig().tenantDatabases);
    /* istanbul ignore next */
    cov_23v5ly6mx().s[24]++;
    return /* istanbul ignore next */(cov_23v5ly6mx().b[25][0]++, tenantDatabases[tenantId]) ||
    /* istanbul ignore next */
    (cov_23v5ly6mx().b[25][1]++, `aiofix_tenant_${tenantId}`);
  }
  /**
   * @method getTenantPostgresConfig
   * @description 获取租户PostgreSQL配置
   * @param {string} tenantId 租户ID
   * @returns {object} 租户PostgreSQL配置
   */
  getTenantPostgresConfig(tenantId) {
    /* istanbul ignore next */
    cov_23v5ly6mx().f[6]++;
    const baseConfig =
    /* istanbul ignore next */
    (cov_23v5ly6mx().s[25]++, this.getPostgresConfig());
    /* istanbul ignore next */
    cov_23v5ly6mx().s[26]++;
    return {
      ...baseConfig,
      database: this.getTenantDatabaseName(tenantId)
    };
  }
  /**
   * @method validateConfig
   * @description 验证数据库配置
   * @returns {boolean} 配置是否有效
   */
  validateConfig() {
    /* istanbul ignore next */
    cov_23v5ly6mx().f[7]++;
    cov_23v5ly6mx().s[27]++;
    try {
      const postgresConfig =
      /* istanbul ignore next */
      (cov_23v5ly6mx().s[28]++, this.getPostgresConfig());
      const mongodbConfig =
      /* istanbul ignore next */
      (cov_23v5ly6mx().s[29]++, this.getMongoDBConfig());
      // 验证PostgreSQL配置
      /* istanbul ignore next */
      cov_23v5ly6mx().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[27][0]++, !postgresConfig.host) ||
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[27][1]++, !postgresConfig.database) ||
      /* istanbul ignore next */
      (cov_23v5ly6mx().b[27][2]++, !postgresConfig.username)) {
        /* istanbul ignore next */
        cov_23v5ly6mx().b[26][0]++;
        cov_23v5ly6mx().s[31]++;
        this.logger.error('PostgreSQL配置不完整');
        /* istanbul ignore next */
        cov_23v5ly6mx().s[32]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_23v5ly6mx().b[26][1]++;
      }
      // 验证MongoDB配置
      cov_23v5ly6mx().s[33]++;
      if (!mongodbConfig.uri) {
        /* istanbul ignore next */
        cov_23v5ly6mx().b[28][0]++;
        cov_23v5ly6mx().s[34]++;
        this.logger.error('MongoDB配置不完整');
        /* istanbul ignore next */
        cov_23v5ly6mx().s[35]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_23v5ly6mx().b[28][1]++;
      }
      cov_23v5ly6mx().s[36]++;
      this.logger.info('数据库配置验证通过');
      /* istanbul ignore next */
      cov_23v5ly6mx().s[37]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_23v5ly6mx().s[38]++;
      this.logger.error('数据库配置验证失败', undefined, {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[29][0]++, error.message) :
        /* istanbul ignore next */
        (cov_23v5ly6mx().b[29][1]++, String(error))
      });
      /* istanbul ignore next */
      cov_23v5ly6mx().s[39]++;
      return false;
    }
  }
};
/* istanbul ignore next */
cov_23v5ly6mx().s[40]++;
exports.DatabaseConfig = DatabaseConfig;
/* istanbul ignore next */
cov_23v5ly6mx().s[41]++;
exports.DatabaseConfig = DatabaseConfig = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_23v5ly6mx().b[31][0]++, typeof config_1.ConfigService !== "undefined") &&
/* istanbul ignore next */
(cov_23v5ly6mx().b[31][1]++, config_1.ConfigService)) === "function" ?
/* istanbul ignore next */
(cov_23v5ly6mx().b[30][0]++, _a) :
/* istanbul ignore next */
(cov_23v5ly6mx().b[30][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_23v5ly6mx().b[33][0]++, typeof logging_1.PinoLoggerService !== "undefined") &&
/* istanbul ignore next */
(cov_23v5ly6mx().b[33][1]++, logging_1.PinoLoggerService)) === "function" ?
/* istanbul ignore next */
(cov_23v5ly6mx().b[32][0]++, _b) :
/* istanbul ignore next */
(cov_23v5ly6mx().b[32][1]++, Object)])], DatabaseConfig);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjN2NWx5Nm14IiwiYWN0dWFsQ292ZXJhZ2UiLCJjb21tb25fMSIsInMiLCJyZXF1aXJlIiwiY29uZmlnXzEiLCJsb2dnaW5nXzEiLCJEYXRhYmFzZUNvbmZpZyIsImNvbnN0cnVjdG9yIiwiX2NvbmZpZ1NlcnZpY2UiLCJsb2dnZXIiLCJmIiwiZ2V0UG9zdGdyZXNDb25maWciLCJob3N0IiwiYiIsImdldCIsInBvcnQiLCJwYXJzZUludCIsImRhdGFiYXNlIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInBvb2wiLCJtaW4iLCJtYXgiLCJhY3F1aXJlVGltZW91dE1pbGxpcyIsImNyZWF0ZVRpbWVvdXRNaWxsaXMiLCJkZXN0cm95VGltZW91dE1pbGxpcyIsImlkbGVUaW1lb3V0TWlsbGlzIiwicmVhcEludGVydmFsTWlsbGlzIiwiY3JlYXRlUmV0cnlJbnRlcnZhbE1pbGxpcyIsInRlbmFudERhdGFiYXNlcyIsInN5bmNocm9uaXplIiwibG9nZ2luZyIsImNhY2hlIiwiZHVyYXRpb24iLCJzc2wiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJnZXRNb25nb0RCQ29uZmlnIiwidXJpIiwiZGF0YWJhc2VzIiwiZXZlbnRzIiwibm90aWZpY2F0aW9ucyIsIm9wdGlvbnMiLCJtYXhQb29sU2l6ZSIsIm1pblBvb2xTaXplIiwibWF4SWRsZVRpbWVNUyIsInNlcnZlclNlbGVjdGlvblRpbWVvdXRNUyIsInNvY2tldFRpbWVvdXRNUyIsImJ1ZmZlck1heEVudHJpZXMiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJldmVudFN0b3JlIiwiY29sbGVjdGlvbiIsInNuYXBzaG90Q29sbGVjdGlvbiIsIm1heEV2ZW50c1BlclNuYXBzaG90IiwiaW5kZXhlcyIsImtleXMiLCJpZCIsInVuaXF1ZSIsInR5cGUiLCJzdGF0dXMiLCJ0ZW5hbnRJZCIsInVzZXJJZCIsImNyZWF0ZWRBdCIsImdldFRlbmFudERhdGFiYXNlTmFtZSIsImdldFRlbmFudFBvc3RncmVzQ29uZmlnIiwiYmFzZUNvbmZpZyIsInZhbGlkYXRlQ29uZmlnIiwicG9zdGdyZXNDb25maWciLCJtb25nb2RiQ29uZmlnIiwiZXJyb3IiLCJpbmZvIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJtZXNzYWdlIiwiU3RyaW5nIiwiZXhwb3J0cyIsIl9fZGVjb3JhdGUiLCJJbmplY3RhYmxlIiwiQ29uZmlnU2VydmljZSIsIl9hIiwiT2JqZWN0IiwiX2IiLCJQaW5vTG9nZ2VyU2VydmljZSJdLCJzb3VyY2VzIjpbIi9ob21lL2FybGlnbGUvVjEvQWlvZml4L2Fpb2ZpeC1haS1zYWFzLXBsYXRmb3JtL3BhY2thZ2VzL2RhdGFiYXNlL3NyYy9jb25maWcvZGF0YWJhc2UuY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBDb25maWdTZXJ2aWNlIH0gZnJvbSAnQGFpb2ZpeC9jb25maWcnO1xuaW1wb3J0IHsgUGlub0xvZ2dlclNlcnZpY2UgfSBmcm9tICdAYWlvZml4L2xvZ2dpbmcnO1xuXG4vKipcbiAqIEBjbGFzcyBEYXRhYmFzZUNvbmZpZ1xuICogQGRlc2NyaXB0aW9uXG4gKiDmlbDmja7lupPphY3nva7nsbvvvIzotJ/otKPnrqHnkIZQb3N0Z3JlU1FM5ZKMTW9uZ29EQueahOmFjee9ruS/oeaBr+OAglxuICpcbiAqIOmFjee9rueuoeeQhuiBjOi0o++8mlxuICogMS4g5o+Q5L6bUG9zdGdyZVNRTOaVsOaNruW6k+i/nuaOpemFjee9rlxuICogMi4g5o+Q5L6bTW9uZ29EQuaVsOaNruW6k+i/nuaOpemFjee9rlxuICogMy4g566h55CG5pWw5o2u5bqT6L+e5o6l5rGg6YWN572uXG4gKiA0LiDmlK/mjIHlpJrnp5/miLfmlbDmja7lupPphY3nva5cbiAqXG4gKiDlpJrnp5/miLfmlK/mjIHvvJpcbiAqIDEuIOaUr+aMgeenn+aIt+e6p+aVsOaNruW6k+malOemu1xuICogMi4g5Yqo5oCB5pWw5o2u5bqT6L+e5o6l566h55CGXG4gKiAzLiDnp5/miLfmlbDmja7lupPot6/nlLFcbiAqIDQuIOaVsOaNruW6k+i/nuaOpeaxoOS8mOWMllxuICpcbiAqIEBwYXJhbSB7Q29uZmlnU2VydmljZX0gY29uZmlnU2VydmljZSDphY3nva7mnI3liqFcbiAqIEBwYXJhbSB7UGlub0xvZ2dlclNlcnZpY2V9IGxvZ2dlciDml6Xlv5fmnI3liqFcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgZGJDb25maWcgPSBuZXcgRGF0YWJhc2VDb25maWcoY29uZmlnU2VydmljZSwgbG9nZ2VyKTtcbiAqIGNvbnN0IHBvc3RncmVzQ29uZmlnID0gZGJDb25maWcuZ2V0UG9zdGdyZXNDb25maWcoKTtcbiAqIGNvbnN0IG1vbmdvZGJDb25maWcgPSBkYkNvbmZpZy5nZXRNb25nb0RCQ29uZmlnKCk7XG4gKiBgYGBcbiAqIEBzaW5jZSAxLjAuMFxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGF0YWJhc2VDb25maWcge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9jb25maWdTZXJ2aWNlOiBDb25maWdTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyOiBQaW5vTG9nZ2VyU2VydmljZSxcbiAgKSB7fVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGdldFBvc3RncmVzQ29uZmlnXG4gICAqIEBkZXNjcmlwdGlvbiDojrflj5ZQb3N0Z3JlU1FM5pWw5o2u5bqT6YWN572uXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IFBvc3RncmVTUUzphY3nva7lr7nosaFcbiAgICpcbiAgICog6YWN572u5YyF5ZCr77yaXG4gICAqIDEuIOaVsOaNruW6k+i/nuaOpeS/oeaBr1xuICAgKiAyLiDov57mjqXmsaDphY3nva5cbiAgICogMy4g5aSa56ef5oi35pWw5o2u5bqT5pSv5oyBXG4gICAqIDQuIOaAp+iDveS8mOWMlumFjee9rlxuICAgKi9cbiAgZ2V0UG9zdGdyZXNDb25maWcoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIOS4u+aVsOaNruW6k+mFjee9rlxuICAgICAgaG9zdDogdGhpcy5fY29uZmlnU2VydmljZS5nZXQoJ1BPU1RHUkVTX0hPU1QnKSA/PyAnbG9jYWxob3N0JyxcbiAgICAgIHBvcnQ6IHBhcnNlSW50KHRoaXMuX2NvbmZpZ1NlcnZpY2UuZ2V0KCdQT1NUR1JFU19QT1JUJykgPz8gJzU0MzInKSxcbiAgICAgIGRhdGFiYXNlOiB0aGlzLl9jb25maWdTZXJ2aWNlLmdldCgnUE9TVEdSRVNfREInKSA/PyAnYWlvZml4X3BsYXRmb3JtJyxcbiAgICAgIHVzZXJuYW1lOiB0aGlzLl9jb25maWdTZXJ2aWNlLmdldCgnUE9TVEdSRVNfVVNFUicpID8/ICdhaW9maXhfdXNlcicsXG4gICAgICBwYXNzd29yZDogdGhpcy5fY29uZmlnU2VydmljZS5nZXQoJ1BPU1RHUkVTX1BBU1NXT1JEJykgPz8gJ2Fpb2ZpeF9wYXNzd29yZCcsXG5cbiAgICAgIC8vIOi/nuaOpeaxoOmFjee9rlxuICAgICAgcG9vbDoge1xuICAgICAgICBtaW46IHBhcnNlSW50KHRoaXMuX2NvbmZpZ1NlcnZpY2UuZ2V0KCdQT1NUR1JFU19QT09MX01JTicpID8/ICcyJyksXG4gICAgICAgIG1heDogcGFyc2VJbnQodGhpcy5fY29uZmlnU2VydmljZS5nZXQoJ1BPU1RHUkVTX1BPT0xfTUFYJykgPz8gJzEwJyksXG4gICAgICAgIGFjcXVpcmVUaW1lb3V0TWlsbGlzOiAzMDAwMCxcbiAgICAgICAgY3JlYXRlVGltZW91dE1pbGxpczogMzAwMDAsXG4gICAgICAgIGRlc3Ryb3lUaW1lb3V0TWlsbGlzOiA1MDAwLFxuICAgICAgICBpZGxlVGltZW91dE1pbGxpczogcGFyc2VJbnQoXG4gICAgICAgICAgdGhpcy5fY29uZmlnU2VydmljZS5nZXQoJ1BPU1RHUkVTX1BPT0xfSURMRV9USU1FT1VUJykgPz8gJzMwMDAwJyxcbiAgICAgICAgKSxcbiAgICAgICAgcmVhcEludGVydmFsTWlsbGlzOiAxMDAwLFxuICAgICAgICBjcmVhdGVSZXRyeUludGVydmFsTWlsbGlzOiAyMDAsXG4gICAgICB9LFxuXG4gICAgICAvLyDlpJrnp5/miLfmlbDmja7lupPphY3nva5cbiAgICAgIHRlbmFudERhdGFiYXNlczoge1xuICAgICAgICAndGVuYW50LTEnOiAnYWlvZml4X3RlbmFudF8xJyxcbiAgICAgICAgJ3RlbmFudC0yJzogJ2Fpb2ZpeF90ZW5hbnRfMicsXG4gICAgICAgICd0ZW5hbnQtMyc6ICdhaW9maXhfdGVuYW50XzMnLFxuICAgICAgfSxcblxuICAgICAgLy8g5oCn6IO96YWN572uXG4gICAgICBzeW5jaHJvbml6ZTogdGhpcy5fY29uZmlnU2VydmljZS5nZXQoJ05PREVfRU5WJykgPT09ICdkZXZlbG9wbWVudCcsXG4gICAgICBsb2dnaW5nOiB0aGlzLl9jb25maWdTZXJ2aWNlLmdldCgnTk9ERV9FTlYnKSA9PT0gJ2RldmVsb3BtZW50JyxcbiAgICAgIGNhY2hlOiB7XG4gICAgICAgIGR1cmF0aW9uOiAzMDAwMCwgLy8gMzDnp5LnvJPlrZhcbiAgICAgIH0sXG5cbiAgICAgIC8vIFNTTOmFjee9rlxuICAgICAgc3NsOlxuICAgICAgICB0aGlzLl9jb25maWdTZXJ2aWNlLmdldCgnTk9ERV9FTlYnKSA9PT0gJ3Byb2R1Y3Rpb24nXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2UsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgOiBmYWxzZSxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZ2V0TW9uZ29EQkNvbmZpZ1xuICAgKiBAZGVzY3JpcHRpb24g6I635Y+WTW9uZ29EQuaVsOaNruW6k+mFjee9rlxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBNb25nb0RC6YWN572u5a+56LGhXG4gICAqXG4gICAqIOmFjee9ruWMheWQq++8mlxuICAgKiAxLiDkuovku7blrZjlgqjmlbDmja7lupPphY3nva5cbiAgICogMi4g6YCa55+l5qih5Z2X5pWw5o2u5bqT6YWN572uXG4gICAqIDMuIOi/nuaOpeaxoOWSjOaAp+iDvemFjee9rlxuICAgKiA0LiDntKLlvJXlkozpqozor4HphY3nva5cbiAgICovXG4gIGdldE1vbmdvREJDb25maWcoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIOS4u+i/nuaOpVVSSVxuICAgICAgdXJpOlxuICAgICAgICB0aGlzLl9jb25maWdTZXJ2aWNlLmdldCgnTU9OR09EQl9VUkknKSA/P1xuICAgICAgICAnbW9uZ29kYjovL2Fpb2ZpeF9hZG1pbjphaW9maXhfcGFzc3dvcmRAbG9jYWxob3N0OjI3MDE3L2Fpb2ZpeF9ldmVudHM/YXV0aFNvdXJjZT1hZG1pbicsXG5cbiAgICAgIC8vIOaVsOaNruW6k+mFjee9rlxuICAgICAgZGF0YWJhc2VzOiB7XG4gICAgICAgIGV2ZW50czogdGhpcy5fY29uZmlnU2VydmljZS5nZXQoJ01PTkdPREJfRVZFTlRTX0RCJykgPz8gJ2Fpb2ZpeF9ldmVudHMnLFxuICAgICAgICBub3RpZmljYXRpb25zOlxuICAgICAgICAgIHRoaXMuX2NvbmZpZ1NlcnZpY2UuZ2V0KCdNT05HT0RCX05PVElGSUNBVElPTlNfREInKSA/PyAnYWlvZml4X25vdGlmaWNhdGlvbnMnLFxuICAgICAgfSxcblxuICAgICAgLy8g6L+e5o6l6YWN572uXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIG1heFBvb2xTaXplOiAxMCxcbiAgICAgICAgbWluUG9vbFNpemU6IDIsXG4gICAgICAgIG1heElkbGVUaW1lTVM6IDMwMDAwLFxuICAgICAgICBzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVM6IDUwMDAsXG4gICAgICAgIHNvY2tldFRpbWVvdXRNUzogNDUwMDAsXG4gICAgICAgIGJ1ZmZlck1heEVudHJpZXM6IDAsXG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxuICAgICAgfSxcblxuICAgICAgLy8g5LqL5Lu25a2Y5YKo6YWN572uXG4gICAgICBldmVudFN0b3JlOiB7XG4gICAgICAgIGNvbGxlY3Rpb246ICdkb21haW5fZXZlbnRzJyxcbiAgICAgICAgc25hcHNob3RDb2xsZWN0aW9uOiAnYWdncmVnYXRlX3NuYXBzaG90cycsXG4gICAgICAgIG1heEV2ZW50c1BlclNuYXBzaG90OiAxMDAsXG4gICAgICB9LFxuXG4gICAgICAvLyDpgJrnn6XlrZjlgqjphY3nva5cbiAgICAgIG5vdGlmaWNhdGlvbnM6IHtcbiAgICAgICAgY29sbGVjdGlvbjogJ25vdGlmaWNhdGlvbnMnLFxuICAgICAgICBpbmRleGVzOiBbXG4gICAgICAgICAgeyBrZXlzOiB7IGlkOiAxIH0sIG9wdGlvbnM6IHsgdW5pcXVlOiB0cnVlIH0gfSxcbiAgICAgICAgICB7IGtleXM6IHsgdHlwZTogMSwgc3RhdHVzOiAxIH0gfSxcbiAgICAgICAgICB7IGtleXM6IHsgdGVuYW50SWQ6IDEsIHVzZXJJZDogMSB9IH0sXG4gICAgICAgICAgeyBrZXlzOiB7IGNyZWF0ZWRBdDogMSB9IH0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBnZXRUZW5hbnREYXRhYmFzZU5hbWVcbiAgICogQGRlc2NyaXB0aW9uIOiOt+WPluenn+aIt+aVsOaNruW6k+WQjeensFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGVuYW50SWQg56ef5oi3SURcbiAgICogQHJldHVybnMge3N0cmluZ30g56ef5oi35pWw5o2u5bqT5ZCN56ewXG4gICAqL1xuICBnZXRUZW5hbnREYXRhYmFzZU5hbWUodGVuYW50SWQ6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgdGVuYW50RGF0YWJhc2VzID0gdGhpcy5nZXRQb3N0Z3Jlc0NvbmZpZygpLnRlbmFudERhdGFiYXNlcyBhcyBSZWNvcmQ8XG4gICAgICBzdHJpbmcsXG4gICAgICBzdHJpbmdcbiAgICA+O1xuICAgIHJldHVybiB0ZW5hbnREYXRhYmFzZXNbdGVuYW50SWRdIHx8IGBhaW9maXhfdGVuYW50XyR7dGVuYW50SWR9YDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGdldFRlbmFudFBvc3RncmVzQ29uZmlnXG4gICAqIEBkZXNjcmlwdGlvbiDojrflj5bnp5/miLdQb3N0Z3JlU1FM6YWN572uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0ZW5hbnRJZCDnp5/miLdJRFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSDnp5/miLdQb3N0Z3JlU1FM6YWN572uXG4gICAqL1xuICBnZXRUZW5hbnRQb3N0Z3Jlc0NvbmZpZyh0ZW5hbnRJZDogc3RyaW5nKSB7XG4gICAgY29uc3QgYmFzZUNvbmZpZyA9IHRoaXMuZ2V0UG9zdGdyZXNDb25maWcoKTtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uYmFzZUNvbmZpZyxcbiAgICAgIGRhdGFiYXNlOiB0aGlzLmdldFRlbmFudERhdGFiYXNlTmFtZSh0ZW5hbnRJZCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHZhbGlkYXRlQ29uZmlnXG4gICAqIEBkZXNjcmlwdGlvbiDpqozor4HmlbDmja7lupPphY3nva5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IOmFjee9ruaYr+WQpuacieaViFxuICAgKi9cbiAgdmFsaWRhdGVDb25maWcoKTogYm9vbGVhbiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBvc3RncmVzQ29uZmlnID0gdGhpcy5nZXRQb3N0Z3Jlc0NvbmZpZygpO1xuICAgICAgY29uc3QgbW9uZ29kYkNvbmZpZyA9IHRoaXMuZ2V0TW9uZ29EQkNvbmZpZygpO1xuXG4gICAgICAvLyDpqozor4FQb3N0Z3JlU1FM6YWN572uXG4gICAgICBpZiAoXG4gICAgICAgICFwb3N0Z3Jlc0NvbmZpZy5ob3N0IHx8XG4gICAgICAgICFwb3N0Z3Jlc0NvbmZpZy5kYXRhYmFzZSB8fFxuICAgICAgICAhcG9zdGdyZXNDb25maWcudXNlcm5hbWVcbiAgICAgICkge1xuICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcignUG9zdGdyZVNRTOmFjee9ruS4jeWujOaVtCcpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIOmqjOivgU1vbmdvRELphY3nva5cbiAgICAgIGlmICghbW9uZ29kYkNvbmZpZy51cmkpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoJ01vbmdvRELphY3nva7kuI3lrozmlbQnKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKCfmlbDmja7lupPphY3nva7pqozor4HpgJrov4cnKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcign5pWw5o2u5bqT6YWN572u6aqM6K+B5aSx6LSlJywgdW5kZWZpbmVkLCB7XG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvciksXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRUE7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUZBLE1BQUFFLFFBQUE7QUFBQTtBQUFBLENBQUFGLGFBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBQ0EsTUFBQUMsUUFBQTtBQUFBO0FB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