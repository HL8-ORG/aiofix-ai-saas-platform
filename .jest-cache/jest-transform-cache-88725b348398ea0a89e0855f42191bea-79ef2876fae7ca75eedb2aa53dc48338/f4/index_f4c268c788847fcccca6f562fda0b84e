97d4cd73d5919db0b224df1952d684e7
"use strict";

/**
 * 测试数据工厂
 *
 * 提供统一的测试数据创建方法，确保测试数据的一致性和可维护性。
 * 使用工厂模式创建测试对象，支持自定义覆盖和批量创建。
 *
 * @fileoverview 测试数据工厂
 * @author AI开发团队
 * @since 1.0.0
 */
/* istanbul ignore next */
function cov_zdiklbkat() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/test-factories/index.ts";
  var hash = "ba765d327cb372145fa2a4bd1e820dce33788c60";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/test-factories/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 203
        }
      },
      "2": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "3": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "4": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "5": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 52,
          column: 12
        }
      },
      "6": {
        start: {
          line: 48,
          column: 59
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "7": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "8": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "9": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "10": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "11": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "12": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "13": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 135,
          column: 12
        }
      },
      "14": {
        start: {
          line: 132,
          column: 59
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "15": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "16": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "17": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 172,
          column: 46
        }
      },
      "18": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "19": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "20": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 208,
          column: 12
        }
      },
      "21": {
        start: {
          line: 205,
          column: 59
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "22": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 211,
          column: 58
        }
      },
      "23": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 30
        }
      },
      "24": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "25": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 246,
          column: 12
        }
      },
      "26": {
        start: {
          line: 243,
          column: 59
        },
        end: {
          line: 246,
          column: 10
        }
      },
      "27": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 249,
          column: 54
        }
      },
      "28": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 30
        }
      },
      "29": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 272,
          column: 10
        }
      },
      "30": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 285,
          column: 12
        }
      },
      "31": {
        start: {
          line: 282,
          column: 59
        },
        end: {
          line: 285,
          column: 10
        }
      },
      "32": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "33": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 313,
          column: 11
        }
      },
      "34": {
        start: {
          line: 316,
          column: 0
        },
        end: {
          line: 316,
          column: 42
        }
      },
      "35": {
        start: {
          line: 320,
          column: 0
        },
        end: {
          line: 326,
          column: 2
        }
      },
      "36": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 344,
          column: 11
        }
      },
      "37": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 343,
          column: 13
        }
      },
      "38": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 342,
          column: 19
        }
      },
      "39": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 37
        }
      },
      "40": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "41": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 33
        }
      },
      "42": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 35
        }
      },
      "43": {
        start: {
          line: 357,
          column: 0
        },
        end: {
          line: 357,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 46
          }
        },
        loc: {
          start: {
            line: 48,
            column: 59
          },
          end: {
            line: 52,
            column: 10
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 60
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 42
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 72
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 40
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 102
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 45
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 131
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 132,
            column: 45
          },
          end: {
            line: 132,
            column: 46
          }
        },
        loc: {
          start: {
            line: 132,
            column: 59
          },
          end: {
            line: 135,
            column: 10
          }
        },
        line: 132
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 44
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 143
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 42
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 160
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 34
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 183
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 45
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 204
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 205,
            column: 45
          },
          end: {
            line: 205,
            column: 46
          }
        },
        loc: {
          start: {
            line: 205,
            column: 59
          },
          end: {
            line: 208,
            column: 10
          }
        },
        line: 205
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 34
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 222
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 45
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 242
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 243,
            column: 45
          },
          end: {
            line: 243,
            column: 46
          }
        },
        loc: {
          start: {
            line: 243,
            column: 59
          },
          end: {
            line: 246,
            column: 10
          }
        },
        line: 243
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 34
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 260
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 281
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 46
          }
        },
        loc: {
          start: {
            line: 282,
            column: 59
          },
          end: {
            line: 285,
            column: 10
          }
        },
        line: 282
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 47
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 293
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 45
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 307
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 25
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 336
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 338,
            column: 21
          },
          end: {
            line: 338,
            column: 22
          }
        },
        loc: {
          start: {
            line: 338,
            column: 29
          },
          end: {
            line: 344,
            column: 9
          }
        },
        line: 338
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 340,
            column: 42
          },
          end: {
            line: 340,
            column: 43
          }
        },
        loc: {
          start: {
            line: 340,
            column: 49
          },
          end: {
            line: 342,
            column: 17
          }
        },
        line: 340
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        loc: {
          start: {
            line: 349,
            column: 19
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 349
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 32
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 47,
            column: 43
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 36
          },
          end: {
            line: 60,
            column: 38
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 72,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 72,
            column: 40
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 84,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 38
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 18
          },
          end: {
            line: 102,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 102,
            column: 32
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 131,
            column: 41
          },
          end: {
            line: 131,
            column: 43
          }
        }],
        line: 131
      },
      "7": {
        loc: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 143,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 40
          },
          end: {
            line: 143,
            column: 42
          }
        }],
        line: 143
      },
      "8": {
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 38
          },
          end: {
            line: 160,
            column: 40
          }
        }],
        line: 160
      },
      "9": {
        loc: {
          start: {
            line: 183,
            column: 18
          },
          end: {
            line: 183,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 183,
            column: 30
          },
          end: {
            line: 183,
            column: 32
          }
        }],
        line: 183
      },
      "10": {
        loc: {
          start: {
            line: 204,
            column: 29
          },
          end: {
            line: 204,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 204,
            column: 41
          },
          end: {
            line: 204,
            column: 43
          }
        }],
        line: 204
      },
      "11": {
        loc: {
          start: {
            line: 222,
            column: 18
          },
          end: {
            line: 222,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 222,
            column: 30
          },
          end: {
            line: 222,
            column: 32
          }
        }],
        line: 222
      },
      "12": {
        loc: {
          start: {
            line: 242,
            column: 29
          },
          end: {
            line: 242,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 242,
            column: 41
          },
          end: {
            line: 242,
            column: 43
          }
        }],
        line: 242
      },
      "13": {
        loc: {
          start: {
            line: 260,
            column: 18
          },
          end: {
            line: 260,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 260,
            column: 32
          }
        }],
        line: 260
      },
      "14": {
        loc: {
          start: {
            line: 281,
            column: 29
          },
          end: {
            line: 281,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 281,
            column: 41
          },
          end: {
            line: 281,
            column: 43
          }
        }],
        line: 281
      },
      "15": {
        loc: {
          start: {
            line: 293,
            column: 31
          },
          end: {
            line: 293,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 293,
            column: 43
          },
          end: {
            line: 293,
            column: 45
          }
        }],
        line: 293
      },
      "16": {
        loc: {
          start: {
            line: 307,
            column: 29
          },
          end: {
            line: 307,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 307,
            column: 41
          },
          end: {
            line: 307,
            column: 43
          }
        }],
        line: 307
      },
      "17": {
        loc: {
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "18": {
        loc: {
          start: {
            line: 339,
            column: 16
          },
          end: {
            line: 339,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 16
          },
          end: {
            line: 339,
            column: 20
          }
        }, {
          start: {
            line: 339,
            column: 24
          },
          end: {
            line: 339,
            column: 48
          }
        }],
        line: 339
      },
      "19": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/test-factories/index.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/test-factories/index.ts"],
      sourcesContent: ["/**\n * \u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n *\n * \u63D0\u4F9B\u7EDF\u4E00\u7684\u6D4B\u8BD5\u6570\u636E\u521B\u5EFA\u65B9\u6CD5\uFF0C\u786E\u4FDD\u6D4B\u8BD5\u6570\u636E\u7684\u4E00\u81F4\u6027\u548C\u53EF\u7EF4\u62A4\u6027\u3002\n * \u4F7F\u7528\u5DE5\u5382\u6A21\u5F0F\u521B\u5EFA\u6D4B\u8BD5\u5BF9\u8C61\uFF0C\u652F\u6301\u81EA\u5B9A\u4E49\u8986\u76D6\u548C\u6279\u91CF\u521B\u5EFA\u3002\n *\n * @fileoverview \u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n * @author AI\u5F00\u53D1\u56E2\u961F\n * @since 1.0.0\n */\n\nimport { v4 as uuidv4 } from 'uuid';\n\n// Jest\u7C7B\u578B\u58F0\u660E\ndeclare const jest:\n  | {\n      clearAllMocks: () => void;\n      restoreAllMocks: () => void;\n    }\n  | undefined;\n\n/**\n * \u7528\u6237\u6D4B\u8BD5\u6570\u636E\u63A5\u53E3\n */\nexport interface UserTestData {\n  id?: string;\n  email: string;\n  password: string;\n  name: string;\n  phone?: string;\n  avatar?: string;\n  status?: 'active' | 'inactive' | 'locked';\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n/**\n * \u79DF\u6237\u6D4B\u8BD5\u6570\u636E\u63A5\u53E3\n */\nexport interface TenantTestData {\n  id?: string;\n  name: string;\n  type: 'enterprise' | 'community' | 'team' | 'personal';\n  status: 'active' | 'inactive' | 'suspended';\n  settings?: Record<string, any>;\n  quota?: {\n    users: number;\n    storage: number;\n    apiCalls: number;\n  };\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n/**\n * \u7EC4\u7EC7\u6D4B\u8BD5\u6570\u636E\u63A5\u53E3\n */\nexport interface OrganizationTestData {\n  id?: string;\n  name: string;\n  type:\n    | 'committee'\n    | 'project_team'\n    | 'quality_control'\n    | 'performance_management'\n    | 'other';\n  description?: string;\n  tenantId: string;\n  status: 'active' | 'inactive';\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n/**\n * \u90E8\u95E8\u6D4B\u8BD5\u6570\u636E\u63A5\u53E3\n */\nexport interface DepartmentTestData {\n  id?: string;\n  name: string;\n  description?: string;\n  organizationId: string;\n  parentId?: string;\n  status: 'active' | 'inactive';\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n/**\n * \u89D2\u8272\u6D4B\u8BD5\u6570\u636E\u63A5\u53E3\n */\nexport interface RoleTestData {\n  id?: string;\n  name: string;\n  description?: string;\n  permissions: string[];\n  level: 'platform' | 'tenant' | 'organization' | 'department' | 'user';\n  status: 'active' | 'inactive';\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n/**\n * \u7528\u6237\u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n */\nexport class UserTestFactory {\n  /**\n   * \u521B\u5EFA\u5355\u4E2A\u7528\u6237\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {Partial<UserTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {UserTestData} \u7528\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static create(overrides: Partial<UserTestData> = {}): UserTestData {\n    const now = new Date();\n    return {\n      id: uuidv4(),\n      email: 'test@example.com',\n      password: 'Password123!',\n      name: 'Test User',\n      phone: '+1234567890',\n      avatar: 'https://example.com/avatar.jpg',\n      status: 'active',\n      createdAt: now,\n      updatedAt: now,\n      ...overrides,\n    };\n  }\n\n  /**\n   * \u521B\u5EFA\u591A\u4E2A\u7528\u6237\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {number} count - \u521B\u5EFA\u6570\u91CF\n   * @param {Partial<UserTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {UserTestData[]} \u7528\u6237\u6D4B\u8BD5\u6570\u636E\u6570\u7EC4\n   */\n  static createMany(\n    count: number,\n    overrides: Partial<UserTestData> = {},\n  ): UserTestData[] {\n    return Array.from({ length: count }, (_, index) =>\n      this.create({\n        email: `test${index}@example.com`,\n        name: `Test User ${index}`,\n        ...overrides,\n      }),\n    );\n  }\n\n  /**\n   * \u521B\u5EFA\u6D3B\u8DC3\u7528\u6237\n   *\n   * @param {Partial<UserTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {UserTestData} \u6D3B\u8DC3\u7528\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static createActive(overrides: Partial<UserTestData> = {}): UserTestData {\n    return this.create({\n      status: 'active',\n      ...overrides,\n    });\n  }\n\n  /**\n   * \u521B\u5EFA\u975E\u6D3B\u8DC3\u7528\u6237\n   *\n   * @param {Partial<UserTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {UserTestData} \u975E\u6D3B\u8DC3\u7528\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static createInactive(overrides: Partial<UserTestData> = {}): UserTestData {\n    return this.create({\n      status: 'inactive',\n      ...overrides,\n    });\n  }\n\n  /**\n   * \u521B\u5EFA\u9501\u5B9A\u7528\u6237\n   *\n   * @param {Partial<UserTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {UserTestData} \u9501\u5B9A\u7528\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static createLocked(overrides: Partial<UserTestData> = {}): UserTestData {\n    return this.create({\n      status: 'locked',\n      ...overrides,\n    });\n  }\n}\n\n/**\n * \u79DF\u6237\u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n */\nexport class TenantTestFactory {\n  /**\n   * \u521B\u5EFA\u5355\u4E2A\u79DF\u6237\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {Partial<TenantTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {TenantTestData} \u79DF\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static create(overrides: Partial<TenantTestData> = {}): TenantTestData {\n    const now = new Date();\n    return {\n      id: uuidv4(),\n      name: 'Test Tenant',\n      type: 'enterprise',\n      status: 'active',\n      settings: {\n        theme: 'light',\n        language: 'zh-CN',\n        timezone: 'Asia/Shanghai',\n      },\n      quota: {\n        users: 100,\n        storage: 1024 * 1024 * 1024, // 1GB\n        apiCalls: 10000,\n      },\n      createdAt: now,\n      updatedAt: now,\n      ...overrides,\n    };\n  }\n\n  /**\n   * \u521B\u5EFA\u591A\u4E2A\u79DF\u6237\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {number} count - \u521B\u5EFA\u6570\u91CF\n   * @param {Partial<TenantTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {TenantTestData[]} \u79DF\u6237\u6D4B\u8BD5\u6570\u636E\u6570\u7EC4\n   */\n  static createMany(\n    count: number,\n    overrides: Partial<TenantTestData> = {},\n  ): TenantTestData[] {\n    return Array.from({ length: count }, (_, index) =>\n      this.create({\n        name: `Test Tenant ${index}`,\n        ...overrides,\n      }),\n    );\n  }\n\n  /**\n   * \u521B\u5EFA\u4F01\u4E1A\u79DF\u6237\n   *\n   * @param {Partial<TenantTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {TenantTestData} \u4F01\u4E1A\u79DF\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static createEnterprise(\n    overrides: Partial<TenantTestData> = {},\n  ): TenantTestData {\n    return this.create({\n      type: 'enterprise',\n      quota: {\n        users: 1000,\n        storage: 10 * 1024 * 1024 * 1024, // 10GB\n        apiCalls: 100000,\n      },\n      ...overrides,\n    });\n  }\n\n  /**\n   * \u521B\u5EFA\u4E2A\u4EBA\u79DF\u6237\n   *\n   * @param {Partial<TenantTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {TenantTestData} \u4E2A\u4EBA\u79DF\u6237\u6D4B\u8BD5\u6570\u636E\n   */\n  static createPersonal(\n    overrides: Partial<TenantTestData> = {},\n  ): TenantTestData {\n    return this.create({\n      type: 'personal',\n      quota: {\n        users: 1,\n        storage: 1024 * 1024 * 100, // 100MB\n        apiCalls: 1000,\n      },\n      ...overrides,\n    });\n  }\n}\n\n/**\n * \u7EC4\u7EC7\u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n */\nexport class OrganizationTestFactory {\n  /**\n   * \u521B\u5EFA\u5355\u4E2A\u7EC4\u7EC7\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {Partial<OrganizationTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {OrganizationTestData} \u7EC4\u7EC7\u6D4B\u8BD5\u6570\u636E\n   */\n  static create(\n    overrides: Partial<OrganizationTestData> = {},\n  ): OrganizationTestData {\n    const now = new Date();\n    return {\n      id: uuidv4(),\n      name: 'Test Organization',\n      type: 'project_team',\n      description: 'Test organization description',\n      tenantId: uuidv4(),\n      status: 'active',\n      createdAt: now,\n      updatedAt: now,\n      ...overrides,\n    };\n  }\n\n  /**\n   * \u521B\u5EFA\u591A\u4E2A\u7EC4\u7EC7\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {number} count - \u521B\u5EFA\u6570\u91CF\n   * @param {Partial<OrganizationTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {OrganizationTestData[]} \u7EC4\u7EC7\u6D4B\u8BD5\u6570\u636E\u6570\u7EC4\n   */\n  static createMany(\n    count: number,\n    overrides: Partial<OrganizationTestData> = {},\n  ): OrganizationTestData[] {\n    return Array.from({ length: count }, (_, index) =>\n      this.create({\n        name: `Test Organization ${index}`,\n        ...overrides,\n      }),\n    );\n  }\n}\n\n/**\n * \u90E8\u95E8\u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n */\nexport class DepartmentTestFactory {\n  /**\n   * \u521B\u5EFA\u5355\u4E2A\u90E8\u95E8\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {Partial<DepartmentTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {DepartmentTestData} \u90E8\u95E8\u6D4B\u8BD5\u6570\u636E\n   */\n  static create(\n    overrides: Partial<DepartmentTestData> = {},\n  ): DepartmentTestData {\n    const now = new Date();\n    return {\n      id: uuidv4(),\n      name: 'Test Department',\n      description: 'Test department description',\n      organizationId: uuidv4(),\n      status: 'active',\n      createdAt: now,\n      updatedAt: now,\n      ...overrides,\n    };\n  }\n\n  /**\n   * \u521B\u5EFA\u591A\u4E2A\u90E8\u95E8\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {number} count - \u521B\u5EFA\u6570\u91CF\n   * @param {Partial<DepartmentTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {DepartmentTestData[]} \u90E8\u95E8\u6D4B\u8BD5\u6570\u636E\u6570\u7EC4\n   */\n  static createMany(\n    count: number,\n    overrides: Partial<DepartmentTestData> = {},\n  ): DepartmentTestData[] {\n    return Array.from({ length: count }, (_, index) =>\n      this.create({\n        name: `Test Department ${index}`,\n        ...overrides,\n      }),\n    );\n  }\n}\n\n/**\n * \u89D2\u8272\u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\n */\nexport class RoleTestFactory {\n  /**\n   * \u521B\u5EFA\u5355\u4E2A\u89D2\u8272\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {Partial<RoleTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {RoleTestData} \u89D2\u8272\u6D4B\u8BD5\u6570\u636E\n   */\n  static create(overrides: Partial<RoleTestData> = {}): RoleTestData {\n    const now = new Date();\n    return {\n      id: uuidv4(),\n      name: 'Test Role',\n      description: 'Test role description',\n      permissions: ['read', 'write'],\n      level: 'user',\n      status: 'active',\n      createdAt: now,\n      updatedAt: now,\n      ...overrides,\n    };\n  }\n\n  /**\n   * \u521B\u5EFA\u591A\u4E2A\u89D2\u8272\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {number} count - \u521B\u5EFA\u6570\u91CF\n   * @param {Partial<RoleTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {RoleTestData[]} \u89D2\u8272\u6D4B\u8BD5\u6570\u636E\u6570\u7EC4\n   */\n  static createMany(\n    count: number,\n    overrides: Partial<RoleTestData> = {},\n  ): RoleTestData[] {\n    return Array.from({ length: count }, (_, index) =>\n      this.create({\n        name: `Test Role ${index}`,\n        ...overrides,\n      }),\n    );\n  }\n\n  /**\n   * \u521B\u5EFA\u5E73\u53F0\u7BA1\u7406\u5458\u89D2\u8272\n   *\n   * @param {Partial<RoleTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {RoleTestData} \u5E73\u53F0\u7BA1\u7406\u5458\u89D2\u8272\u6D4B\u8BD5\u6570\u636E\n   */\n  static createPlatformAdmin(\n    overrides: Partial<RoleTestData> = {},\n  ): RoleTestData {\n    return this.create({\n      name: 'Platform Admin',\n      permissions: ['*'], // \u6240\u6709\u6743\u9650\n      level: 'platform',\n      ...overrides,\n    });\n  }\n\n  /**\n   * \u521B\u5EFA\u79DF\u6237\u7BA1\u7406\u5458\u89D2\u8272\n   *\n   * @param {Partial<RoleTestData>} overrides - \u8986\u76D6\u9ED8\u8BA4\u503C\u7684\u5C5E\u6027\n   * @returns {RoleTestData} \u79DF\u6237\u7BA1\u7406\u5458\u89D2\u8272\u6D4B\u8BD5\u6570\u636E\n   */\n  static createTenantAdmin(\n    overrides: Partial<RoleTestData> = {},\n  ): RoleTestData {\n    return this.create({\n      name: 'Tenant Admin',\n      permissions: ['tenant:read', 'tenant:write', 'user:read', 'user:write'],\n      level: 'tenant',\n      ...overrides,\n    });\n  }\n}\n\n/**\n * \u6D4B\u8BD5\u6570\u636E\u5DE5\u5382\u96C6\u5408\n */\nexport const TestFactories = {\n  User: UserTestFactory,\n  Tenant: TenantTestFactory,\n  Organization: OrganizationTestFactory,\n  Department: DepartmentTestFactory,\n  Role: RoleTestFactory,\n};\n\n/**\n * \u6D4B\u8BD5\u6570\u636E\u6E05\u7406\u5DE5\u5177\n */\nexport class TestDataCleaner {\n  /**\n   * \u6E05\u7406\u6D4B\u8BD5\u6570\u636E\n   *\n   * @param {any[]} data - \u8981\u6E05\u7406\u7684\u6D4B\u8BD5\u6570\u636E\u6570\u7EC4\n   */\n  static cleanup(data: any[]): void {\n    // \u6E05\u7406\u6D4B\u8BD5\u6570\u636E\uFF0C\u907F\u514D\u5185\u5B58\u6CC4\u6F0F\n    data.forEach(item => {\n      if (item && typeof item === 'object') {\n        Object.keys(item).forEach(key => {\n          delete item[key];\n        });\n      }\n    });\n  }\n\n  /**\n   * \u91CD\u7F6E\u6D4B\u8BD5\u73AF\u5883\n   */\n  static reset(): void {\n    // \u91CD\u7F6E\u5168\u5C40\u6D4B\u8BD5\u72B6\u6001\n    if (typeof jest !== 'undefined') {\n      jest.clearAllMocks();\n      jest.restoreAllMocks();\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba765d327cb372145fa2a4bd1e820dce33788c60"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zdiklbkat = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zdiklbkat();
cov_zdiklbkat().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zdiklbkat().s[1]++;
exports.TestDataCleaner = exports.TestFactories = exports.RoleTestFactory = exports.DepartmentTestFactory = exports.OrganizationTestFactory = exports.TenantTestFactory = exports.UserTestFactory = void 0;
const uuid_1 =
/* istanbul ignore next */
(cov_zdiklbkat().s[2]++, require("uuid"));
/**
 * 用户测试数据工厂
 */
class UserTestFactory {
  /**
   * 创建单个用户测试数据
   *
   * @param {Partial<UserTestData>} overrides - 覆盖默认值的属性
   * @returns {UserTestData} 用户测试数据
   */
  static create(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[0]++;
    const now =
    /* istanbul ignore next */
    (cov_zdiklbkat().s[3]++, new Date());
    /* istanbul ignore next */
    cov_zdiklbkat().s[4]++;
    return {
      id: (0, uuid_1.v4)(),
      email: 'test@example.com',
      password: 'Password123!',
      name: 'Test User',
      phone: '+1234567890',
      avatar: 'https://example.com/avatar.jpg',
      status: 'active',
      createdAt: now,
      updatedAt: now,
      ...overrides
    };
  }
  /**
   * 创建多个用户测试数据
   *
   * @param {number} count - 创建数量
   * @param {Partial<UserTestData>} overrides - 覆盖默认值的属性
   * @returns {UserTestData[]} 用户测试数据数组
   */
  static createMany(count, overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[1]++;
    cov_zdiklbkat().s[5]++;
    return Array.from({
      length: count
    }, (_, index) => {
      /* istanbul ignore next */
      cov_zdiklbkat().f[2]++;
      cov_zdiklbkat().s[6]++;
      return this.create({
        email: `test${index}@example.com`,
        name: `Test User ${index}`,
        ...overrides
      });
    });
  }
  /**
   * 创建活跃用户
   *
   * @param {Partial<UserTestData>} overrides - 覆盖默认值的属性
   * @returns {UserTestData} 活跃用户测试数据
   */
  static createActive(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[2][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[3]++;
    cov_zdiklbkat().s[7]++;
    return this.create({
      status: 'active',
      ...overrides
    });
  }
  /**
   * 创建非活跃用户
   *
   * @param {Partial<UserTestData>} overrides - 覆盖默认值的属性
   * @returns {UserTestData} 非活跃用户测试数据
   */
  static createInactive(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[3][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[4]++;
    cov_zdiklbkat().s[8]++;
    return this.create({
      status: 'inactive',
      ...overrides
    });
  }
  /**
   * 创建锁定用户
   *
   * @param {Partial<UserTestData>} overrides - 覆盖默认值的属性
   * @returns {UserTestData} 锁定用户测试数据
   */
  static createLocked(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[5]++;
    cov_zdiklbkat().s[9]++;
    return this.create({
      status: 'locked',
      ...overrides
    });
  }
}
/* istanbul ignore next */
cov_zdiklbkat().s[10]++;
exports.UserTestFactory = UserTestFactory;
/**
 * 租户测试数据工厂
 */
class TenantTestFactory {
  /**
   * 创建单个租户测试数据
   *
   * @param {Partial<TenantTestData>} overrides - 覆盖默认值的属性
   * @returns {TenantTestData} 租户测试数据
   */
  static create(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[6]++;
    const now =
    /* istanbul ignore next */
    (cov_zdiklbkat().s[11]++, new Date());
    /* istanbul ignore next */
    cov_zdiklbkat().s[12]++;
    return {
      id: (0, uuid_1.v4)(),
      name: 'Test Tenant',
      type: 'enterprise',
      status: 'active',
      settings: {
        theme: 'light',
        language: 'zh-CN',
        timezone: 'Asia/Shanghai'
      },
      quota: {
        users: 100,
        storage: 1024 * 1024 * 1024,
        // 1GB
        apiCalls: 10000
      },
      createdAt: now,
      updatedAt: now,
      ...overrides
    };
  }
  /**
   * 创建多个租户测试数据
   *
   * @param {number} count - 创建数量
   * @param {Partial<TenantTestData>} overrides - 覆盖默认值的属性
   * @returns {TenantTestData[]} 租户测试数据数组
   */
  static createMany(count, overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[7]++;
    cov_zdiklbkat().s[13]++;
    return Array.from({
      length: count
    }, (_, index) => {
      /* istanbul ignore next */
      cov_zdiklbkat().f[8]++;
      cov_zdiklbkat().s[14]++;
      return this.create({
        name: `Test Tenant ${index}`,
        ...overrides
      });
    });
  }
  /**
   * 创建企业租户
   *
   * @param {Partial<TenantTestData>} overrides - 覆盖默认值的属性
   * @returns {TenantTestData} 企业租户测试数据
   */
  static createEnterprise(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[7][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[9]++;
    cov_zdiklbkat().s[15]++;
    return this.create({
      type: 'enterprise',
      quota: {
        users: 1000,
        storage: 10 * 1024 * 1024 * 1024,
        // 10GB
        apiCalls: 100000
      },
      ...overrides
    });
  }
  /**
   * 创建个人租户
   *
   * @param {Partial<TenantTestData>} overrides - 覆盖默认值的属性
   * @returns {TenantTestData} 个人租户测试数据
   */
  static createPersonal(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[8][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[10]++;
    cov_zdiklbkat().s[16]++;
    return this.create({
      type: 'personal',
      quota: {
        users: 1,
        storage: 1024 * 1024 * 100,
        // 100MB
        apiCalls: 1000
      },
      ...overrides
    });
  }
}
/* istanbul ignore next */
cov_zdiklbkat().s[17]++;
exports.TenantTestFactory = TenantTestFactory;
/**
 * 组织测试数据工厂
 */
class OrganizationTestFactory {
  /**
   * 创建单个组织测试数据
   *
   * @param {Partial<OrganizationTestData>} overrides - 覆盖默认值的属性
   * @returns {OrganizationTestData} 组织测试数据
   */
  static create(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[11]++;
    const now =
    /* istanbul ignore next */
    (cov_zdiklbkat().s[18]++, new Date());
    /* istanbul ignore next */
    cov_zdiklbkat().s[19]++;
    return {
      id: (0, uuid_1.v4)(),
      name: 'Test Organization',
      type: 'project_team',
      description: 'Test organization description',
      tenantId: (0, uuid_1.v4)(),
      status: 'active',
      createdAt: now,
      updatedAt: now,
      ...overrides
    };
  }
  /**
   * 创建多个组织测试数据
   *
   * @param {number} count - 创建数量
   * @param {Partial<OrganizationTestData>} overrides - 覆盖默认值的属性
   * @returns {OrganizationTestData[]} 组织测试数据数组
   */
  static createMany(count, overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[10][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[12]++;
    cov_zdiklbkat().s[20]++;
    return Array.from({
      length: count
    }, (_, index) => {
      /* istanbul ignore next */
      cov_zdiklbkat().f[13]++;
      cov_zdiklbkat().s[21]++;
      return this.create({
        name: `Test Organization ${index}`,
        ...overrides
      });
    });
  }
}
/* istanbul ignore next */
cov_zdiklbkat().s[22]++;
exports.OrganizationTestFactory = OrganizationTestFactory;
/**
 * 部门测试数据工厂
 */
class DepartmentTestFactory {
  /**
   * 创建单个部门测试数据
   *
   * @param {Partial<DepartmentTestData>} overrides - 覆盖默认值的属性
   * @returns {DepartmentTestData} 部门测试数据
   */
  static create(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[11][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[14]++;
    const now =
    /* istanbul ignore next */
    (cov_zdiklbkat().s[23]++, new Date());
    /* istanbul ignore next */
    cov_zdiklbkat().s[24]++;
    return {
      id: (0, uuid_1.v4)(),
      name: 'Test Department',
      description: 'Test department description',
      organizationId: (0, uuid_1.v4)(),
      status: 'active',
      createdAt: now,
      updatedAt: now,
      ...overrides
    };
  }
  /**
   * 创建多个部门测试数据
   *
   * @param {number} count - 创建数量
   * @param {Partial<DepartmentTestData>} overrides - 覆盖默认值的属性
   * @returns {DepartmentTestData[]} 部门测试数据数组
   */
  static createMany(count, overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[12][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[15]++;
    cov_zdiklbkat().s[25]++;
    return Array.from({
      length: count
    }, (_, index) => {
      /* istanbul ignore next */
      cov_zdiklbkat().f[16]++;
      cov_zdiklbkat().s[26]++;
      return this.create({
        name: `Test Department ${index}`,
        ...overrides
      });
    });
  }
}
/* istanbul ignore next */
cov_zdiklbkat().s[27]++;
exports.DepartmentTestFactory = DepartmentTestFactory;
/**
 * 角色测试数据工厂
 */
class RoleTestFactory {
  /**
   * 创建单个角色测试数据
   *
   * @param {Partial<RoleTestData>} overrides - 覆盖默认值的属性
   * @returns {RoleTestData} 角色测试数据
   */
  static create(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[13][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[17]++;
    const now =
    /* istanbul ignore next */
    (cov_zdiklbkat().s[28]++, new Date());
    /* istanbul ignore next */
    cov_zdiklbkat().s[29]++;
    return {
      id: (0, uuid_1.v4)(),
      name: 'Test Role',
      description: 'Test role description',
      permissions: ['read', 'write'],
      level: 'user',
      status: 'active',
      createdAt: now,
      updatedAt: now,
      ...overrides
    };
  }
  /**
   * 创建多个角色测试数据
   *
   * @param {number} count - 创建数量
   * @param {Partial<RoleTestData>} overrides - 覆盖默认值的属性
   * @returns {RoleTestData[]} 角色测试数据数组
   */
  static createMany(count, overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[14][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[18]++;
    cov_zdiklbkat().s[30]++;
    return Array.from({
      length: count
    }, (_, index) => {
      /* istanbul ignore next */
      cov_zdiklbkat().f[19]++;
      cov_zdiklbkat().s[31]++;
      return this.create({
        name: `Test Role ${index}`,
        ...overrides
      });
    });
  }
  /**
   * 创建平台管理员角色
   *
   * @param {Partial<RoleTestData>} overrides - 覆盖默认值的属性
   * @returns {RoleTestData} 平台管理员角色测试数据
   */
  static createPlatformAdmin(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[15][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[20]++;
    cov_zdiklbkat().s[32]++;
    return this.create({
      name: 'Platform Admin',
      permissions: ['*'],
      // 所有权限
      level: 'platform',
      ...overrides
    });
  }
  /**
   * 创建租户管理员角色
   *
   * @param {Partial<RoleTestData>} overrides - 覆盖默认值的属性
   * @returns {RoleTestData} 租户管理员角色测试数据
   */
  static createTenantAdmin(overrides =
  /* istanbul ignore next */
  (cov_zdiklbkat().b[16][0]++, {})) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[21]++;
    cov_zdiklbkat().s[33]++;
    return this.create({
      name: 'Tenant Admin',
      permissions: ['tenant:read', 'tenant:write', 'user:read', 'user:write'],
      level: 'tenant',
      ...overrides
    });
  }
}
/* istanbul ignore next */
cov_zdiklbkat().s[34]++;
exports.RoleTestFactory = RoleTestFactory;
/**
 * 测试数据工厂集合
 */
/* istanbul ignore next */
cov_zdiklbkat().s[35]++;
exports.TestFactories = {
  User: UserTestFactory,
  Tenant: TenantTestFactory,
  Organization: OrganizationTestFactory,
  Department: DepartmentTestFactory,
  Role: RoleTestFactory
};
/**
 * 测试数据清理工具
 */
class TestDataCleaner {
  /**
   * 清理测试数据
   *
   * @param {any[]} data - 要清理的测试数据数组
   */
  static cleanup(data) {
    /* istanbul ignore next */
    cov_zdiklbkat().f[22]++;
    cov_zdiklbkat().s[36]++;
    // 清理测试数据，避免内存泄漏
    data.forEach(item => {
      /* istanbul ignore next */
      cov_zdiklbkat().f[23]++;
      cov_zdiklbkat().s[37]++;
      if (
      /* istanbul ignore next */
      (cov_zdiklbkat().b[18][0]++, item) &&
      /* istanbul ignore next */
      (cov_zdiklbkat().b[18][1]++, typeof item === 'object')) {
        /* istanbul ignore next */
        cov_zdiklbkat().b[17][0]++;
        cov_zdiklbkat().s[38]++;
        Object.keys(item).forEach(key => {
          /* istanbul ignore next */
          cov_zdiklbkat().f[24]++;
          cov_zdiklbkat().s[39]++;
          delete item[key];
        });
      } else
      /* istanbul ignore next */
      {
        cov_zdiklbkat().b[17][1]++;
      }
    });
  }
  /**
   * 重置测试环境
   */
  static reset() {
    /* istanbul ignore next */
    cov_zdiklbkat().f[25]++;
    cov_zdiklbkat().s[40]++;
    // 重置全局测试状态
    if (typeof jest !== 'undefined') {
      /* istanbul ignore next */
      cov_zdiklbkat().b[19][0]++;
      cov_zdiklbkat().s[41]++;
      jest.clearAllMocks();
      /* istanbul ignore next */
      cov_zdiklbkat().s[42]++;
      jest.restoreAllMocks();
    } else
    /* istanbul ignore next */
    {
      cov_zdiklbkat().b[19][1]++;
    }
  }
}
/* istanbul ignore next */
cov_zdiklbkat().s[43]++;
exports.TestDataCleaner = TestDataCleaner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,