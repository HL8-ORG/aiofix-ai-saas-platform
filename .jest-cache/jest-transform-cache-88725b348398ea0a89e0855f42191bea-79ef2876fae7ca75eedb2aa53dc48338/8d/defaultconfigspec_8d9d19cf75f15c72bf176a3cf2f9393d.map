{"file":"/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/default-config.spec.ts","mappings":"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","names":[],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/config/src/default-config.spec.ts"],"sourcesContent":["/**\n * @fileoverview 默认配置测试\n * @description 测试默认配置的正确性和完整性\n * @author AI开发团队\n * @since 1.0.0\n */\n\n/// <reference types=\"jest\" />\n\nimport { defaultConfiguration } from './default-config';\n\ndescribe('DefaultConfiguration', () => {\n  describe('应用基础配置', () => {\n    it('应该包含所有必需的应用配置项', () => {\n      expect(defaultConfiguration.app).toBeDefined();\n      expect(defaultConfiguration.app?.app_name).toBe('Aiofix IAM');\n      expect(defaultConfiguration.app?.app_version).toBe('1.0.0');\n      expect(defaultConfiguration.app?.app_description).toContain(\n        '多租户SaaS平台',\n      );\n      expect(defaultConfiguration.app?.environment).toBe(\n        process.env.NODE_ENV || 'development',\n      );\n      expect(defaultConfiguration.app?.debug).toBe(false);\n      expect(defaultConfiguration.app?.demo).toBe(false);\n      expect(defaultConfiguration.app?.client_base_url).toBe(\n        'http://localhost:3000',\n      );\n      expect(defaultConfiguration.app?.api_base_url).toBe(\n        'http://localhost:3000/api/v1',\n      );\n      expect(defaultConfiguration.app?.docs_url).toBe(\n        'http://localhost:3000/api/v1/docs',\n      );\n    });\n\n    it('应该支持环境变量覆盖', () => {\n      const originalEnv = process.env.APP_NAME;\n      process.env.APP_NAME = 'Test App';\n\n      // 重新导入以获取更新后的配置\n      jest.resetModules();\n\n      const {\n        defaultConfiguration: updatedConfig,\n      } = require('./default-config');\n\n      expect(updatedConfig.app?.app_name).toBe('Test App');\n\n      // 恢复环境变量\n      process.env.APP_NAME = originalEnv;\n    });\n  });\n\n  describe('数据库配置', () => {\n    it('应该包含PostgreSQL配置', () => {\n      const postgresql = defaultConfiguration.database?.postgresql;\n      expect(postgresql).toBeDefined();\n      expect((postgresql as any)?.host).toBe('localhost');\n      expect((postgresql as any)?.port).toBe(5432);\n      expect((postgresql as any)?.username).toBe('postgres');\n      expect((postgresql as any)?.password).toBe('password');\n      expect((postgresql as any)?.database).toBe('aiofix_iam');\n      expect((postgresql as any)?.schema).toBe('public');\n      expect((postgresql as any)?.ssl).toBe(false);\n      expect((postgresql as any)?.sslMode).toBe('prefer');\n    });\n\n    it('应该包含MongoDB配置', () => {\n      const mongodb = defaultConfiguration.database?.mongodb;\n      expect(mongodb).toBeDefined();\n      expect((mongodb as any)?.uri).toBe(\n        'mongodb://localhost:27017/aiofix_iam_events',\n      );\n      expect((mongodb as any)?.database).toBe('aiofix_iam_events');\n      expect((mongodb as any)?.options).toBeDefined();\n      expect((mongodb as any)?.options?.useNewUrlParser).toBe(true);\n      expect((mongodb as any)?.options?.useUnifiedTopology).toBe(true);\n    });\n\n    it('应该包含连接池配置', () => {\n      const pool = defaultConfiguration.database?.pool;\n      expect(pool).toBeDefined();\n      expect((pool as any)?.min).toBe(2);\n      expect((pool as any)?.max).toBe(20);\n      expect((pool as any)?.acquireTimeoutMillis).toBe(60000);\n      expect((pool as any)?.createTimeoutMillis).toBe(30000);\n      expect((pool as any)?.destroyTimeoutMillis).toBe(5000);\n      expect((pool as any)?.idleTimeoutMillis).toBe(30000);\n      expect((pool as any)?.reapIntervalMillis).toBe(1000);\n      expect((pool as any)?.createRetryIntervalMillis).toBe(200);\n    });\n\n    it('应该包含MikroORM配置', () => {\n      const mikroOrm = defaultConfiguration.database?.mikroOrm;\n      expect(mikroOrm).toBeDefined();\n      expect((mikroOrm as any)?.debug).toBe(false);\n      expect((mikroOrm as any)?.logger).toBeUndefined();\n      expect((mikroOrm as any)?.migrations).toBeDefined();\n      expect((mikroOrm as any)?.migrations?.path).toBe(\n        'src/migrations/*.migration{.ts,.js}',\n      );\n      expect((mikroOrm as any)?.migrations?.tableName).toBe(\n        'mikro_orm_migrations',\n      );\n      expect((mikroOrm as any)?.entities).toEqual(['src/**/*.entity{.ts,.js}']);\n    });\n\n    it('应该包含日志配置', () => {\n      const logging = defaultConfiguration.database?.logging;\n      expect(logging).toBeDefined();\n      expect((logging as any)?.enabled).toBe(false);\n      expect((logging as any)?.level).toBe('error');\n      expect((logging as any)?.slowQueryThreshold).toBe(1000);\n    });\n  });\n\n  describe('Redis配置', () => {\n    it('应该包含连接配置', () => {\n      const connection = defaultConfiguration.redis?.connection;\n      expect(connection).toBeDefined();\n      expect((connection as any)?.host).toBe('localhost');\n      expect((connection as any)?.port).toBe(6379);\n      expect((connection as any)?.password).toBeUndefined();\n      expect((connection as any)?.db).toBe(0);\n      expect((connection as any)?.keyPrefix).toBe('aiofix:iam:');\n    });\n\n    it('应该包含连接池配置', () => {\n      const pool = defaultConfiguration.redis?.pool;\n      expect(pool).toBeDefined();\n      expect((pool as any)?.min).toBe(2);\n      expect((pool as any)?.max).toBe(10);\n      expect((pool as any)?.acquireTimeoutMillis).toBe(30000);\n      expect((pool as any)?.createTimeoutMillis).toBe(30000);\n      expect((pool as any)?.destroyTimeoutMillis).toBe(5000);\n      expect((pool as any)?.idleTimeoutMillis).toBe(30000);\n      expect((pool as any)?.reapIntervalMillis).toBe(1000);\n      expect((pool as any)?.createRetryIntervalMillis).toBe(200);\n    });\n\n    it('应该包含缓存配置', () => {\n      const cache = defaultConfiguration.redis?.cache;\n      expect(cache).toBeDefined();\n      expect((cache as any)?.defaultTtl).toBe(3600);\n      expect((cache as any)?.sessionTtl).toBe(86400);\n      expect((cache as any)?.permissionTtl).toBe(1800);\n      expect((cache as any)?.tenantConfigTtl).toBe(3600);\n      expect((cache as any)?.maxMemory).toBe('2gb');\n      expect((cache as any)?.maxMemoryPolicy).toBe('allkeys-lru');\n    });\n\n    it('应该包含分布式锁配置', () => {\n      const lock = defaultConfiguration.redis?.lock;\n      expect(lock).toBeDefined();\n      expect((lock as any)?.defaultTimeout).toBe(30000);\n      expect((lock as any)?.retryDelay).toBe(100);\n      expect((lock as any)?.retryCount).toBe(10);\n    });\n\n    it('应该包含集群配置', () => {\n      const cluster = defaultConfiguration.redis?.cluster;\n      expect(cluster).toBeDefined();\n      expect((cluster as any)?.enabled).toBe(false);\n      expect((cluster as any)?.nodes).toEqual([]);\n      expect((cluster as any)?.maxRedirections).toBe(16);\n    });\n\n    it('应该包含哨兵配置', () => {\n      const sentinel = defaultConfiguration.redis?.sentinel;\n      expect(sentinel).toBeDefined();\n      expect((sentinel as any)?.enabled).toBe(false);\n      expect((sentinel as any)?.masterName).toBe('mymaster');\n      expect((sentinel as any)?.sentinels).toEqual([]);\n      expect((sentinel as any)?.password).toBeUndefined();\n    });\n\n    it('应该包含健康检查配置', () => {\n      const health = defaultConfiguration.redis?.health;\n      expect(health).toBeDefined();\n      expect((health as any)?.enabled).toBe(true);\n      expect((health as any)?.interval).toBe(30000);\n      expect((health as any)?.timeout).toBe(5000);\n    });\n  });\n\n  describe('JWT配置', () => {\n    it('应该包含密钥配置', () => {\n      const secret = defaultConfiguration.jwt?.secret;\n      expect(secret).toBeDefined();\n      expect((secret as any)?.accessToken).toContain('access-token-key');\n      expect((secret as any)?.refreshToken).toContain('refresh-token-key');\n      expect((secret as any)?.resetPassword).toContain('reset-password-key');\n      expect((secret as any)?.emailVerification).toContain(\n        'email-verification-key',\n      );\n    });\n\n    it('应该包含访问令牌配置', () => {\n      const accessToken = defaultConfiguration.jwt?.accessToken;\n      expect(accessToken).toBeDefined();\n      expect((accessToken as any)?.expiresIn).toBe(3600);\n      expect((accessToken as any)?.algorithm).toBe('HS256');\n      expect((accessToken as any)?.issuer).toBe('aiofix-iam');\n      expect((accessToken as any)?.audience).toBe('aiofix-users');\n    });\n\n    it('应该包含刷新令牌配置', () => {\n      const refreshToken = defaultConfiguration.jwt?.refreshToken;\n      expect(refreshToken).toBeDefined();\n      expect((refreshToken as any)?.expiresIn).toBe(2592000);\n      expect((refreshToken as any)?.algorithm).toBe('HS256');\n      expect((refreshToken as any)?.issuer).toBe('aiofix-iam');\n      expect((refreshToken as any)?.audience).toBe('aiofix-users');\n    });\n\n    it('应该包含多租户配置', () => {\n      const multiTenant = defaultConfiguration.jwt?.multiTenant;\n      expect(multiTenant).toBeDefined();\n      expect((multiTenant as any)?.enabled).toBe(true);\n      expect((multiTenant as any)?.tenantIdField).toBe('tenantId');\n      expect((multiTenant as any)?.organizationIdField).toBe('organizationId');\n      expect((multiTenant as any)?.departmentIdField).toBe('departmentId');\n    });\n\n    it('应该包含安全配置', () => {\n      const security = defaultConfiguration.jwt?.security;\n      expect(security).toBeDefined();\n      expect((security as any)?.blacklistEnabled).toBe(true);\n      expect((security as any)?.blacklistTtl).toBe(86400);\n      expect((security as any)?.rotationEnabled).toBe(true);\n      expect((security as any)?.rotationThreshold).toBe(300);\n    });\n\n    it('应该包含缓存配置', () => {\n      const cache = defaultConfiguration.jwt?.cache;\n      expect(cache).toBeDefined();\n      expect((cache as any)?.enabled).toBe(true);\n      expect((cache as any)?.ttl).toBe(300);\n      expect((cache as any)?.prefix).toBe('jwt:');\n    });\n  });\n\n  describe('邮件配置', () => {\n    it('应该包含SMTP配置', () => {\n      const smtp = defaultConfiguration.email?.smtp;\n      expect(smtp).toBeDefined();\n      expect((smtp as any)?.host).toBe('localhost');\n      expect((smtp as any)?.port).toBe(587);\n      expect((smtp as any)?.secure).toBe(false);\n      expect((smtp as any)?.auth).toBeDefined();\n      expect((smtp as any)?.auth?.user).toBe('');\n      expect((smtp as any)?.auth?.pass).toBe('');\n      expect((smtp as any)?.tls).toBeDefined();\n      expect((smtp as any)?.tls?.rejectUnauthorized).toBe(true);\n    });\n\n    it('应该包含发送配置', () => {\n      const sending = defaultConfiguration.email?.sending;\n      expect(sending).toBeDefined();\n      expect((sending as any)?.fromEmail).toBe('noreply@aiofix.com');\n      expect((sending as any)?.fromName).toBe('Aiofix IAM');\n      expect((sending as any)?.replyTo).toBe('support@aiofix.com');\n      expect((sending as any)?.batchInterval).toBe(1000);\n      expect((sending as any)?.batchSize).toBe(10);\n      expect((sending as any)?.retryCount).toBe(3);\n      expect((sending as any)?.retryDelay).toBe(5000);\n    });\n\n    it('应该包含模板配置', () => {\n      const templates = defaultConfiguration.email?.templates;\n      expect(templates).toBeDefined();\n      expect((templates as any)?.directory).toBe('src/templates/email');\n      expect((templates as any)?.defaultLanguage).toBe('zh-CN');\n      expect((templates as any)?.supportedLanguages).toEqual([\n        'zh-CN',\n        'en-US',\n      ]);\n    });\n\n    it('应该包含邮件类型配置', () => {\n      const types = defaultConfiguration.email?.types;\n      expect(types).toBeDefined();\n      expect((types as any)?.emailVerification).toBeDefined();\n      expect((types as any)?.passwordReset).toBeDefined();\n      expect((types as any)?.welcome).toBeDefined();\n      expect((types as any)?.invitation).toBeDefined();\n      expect((types as any)?.notification).toBeDefined();\n    });\n\n    it('应该包含验证配置', () => {\n      const verification = defaultConfiguration.email?.verification;\n      expect(verification).toBeDefined();\n      expect((verification as any)?.enabled).toBe(true);\n      expect((verification as any)?.linkExpiresIn).toBe(86400);\n      expect((verification as any)?.codeExpiresIn).toBe(1800);\n      expect((verification as any)?.codeLength).toBe(6);\n    });\n\n    it('应该包含队列配置', () => {\n      const queue = defaultConfiguration.email?.queue;\n      expect(queue).toBeDefined();\n      expect((queue as any)?.enabled).toBe(true);\n      expect((queue as any)?.name).toBe('email');\n      expect((queue as any)?.priority).toBe(10);\n      expect((queue as any)?.delay).toBe(0);\n    });\n  });\n\n  describe('日志配置', () => {\n    it('应该包含日志级别配置', () => {\n      const level = defaultConfiguration.logging?.level;\n      expect(level).toBeDefined();\n      expect((level as any)?.default).toBe(process.env.LOG_LEVEL || 'info');\n      expect((level as any)?.app).toBe('info');\n      expect((level as any)?.database).toBe('warn');\n      expect((level as any)?.http).toBe('info');\n      expect((level as any)?.security).toBe('warn');\n      expect((level as any)?.performance).toBe('info');\n    });\n\n    it('应该包含格式配置', () => {\n      const format = defaultConfiguration.logging?.format;\n      expect(format).toBeDefined();\n      expect((format as any)?.type).toBe('json');\n      expect((format as any)?.timestamp).toBe(true);\n      expect((format as any)?.colorize).toBe(false);\n      expect((format as any)?.requestId).toBe(true);\n      expect((format as any)?.tenantId).toBe(true);\n      expect((format as any)?.userId).toBe(true);\n      expect((format as any)?.performance).toBe(true);\n      expect((format as any)?.stackTrace).toBe(true);\n    });\n\n    it('应该包含输出配置', () => {\n      const output = defaultConfiguration.logging?.output;\n      expect(output).toBeDefined();\n      expect((output as any)?.console).toBeDefined();\n      expect((output as any)?.console?.enabled).toBe(true);\n      expect((output as any)?.console?.level).toBe('info');\n      expect((output as any)?.file).toBeDefined();\n      expect((output as any)?.file?.enabled).toBe(false);\n      expect((output as any)?.file?.level).toBe('info');\n      expect((output as any)?.file?.path).toBe('logs/app.log');\n      expect((output as any)?.file?.maxSize).toBe('10m');\n      expect((output as any)?.file?.maxFiles).toBe(5);\n      expect((output as any)?.file?.interval).toBe('1d');\n    });\n\n    it('应该包含过滤配置', () => {\n      const filter = defaultConfiguration.logging?.filter;\n      expect(filter).toBeDefined();\n      expect((filter as any)?.sensitiveFields).toContain('password');\n      expect((filter as any)?.sensitiveFields).toContain('token');\n      expect((filter as any)?.sensitiveFields).toContain('secret');\n      expect((filter as any)?.sensitiveFields).toContain('apiKey');\n      expect((filter as any)?.sensitiveFields).toContain('authorization');\n      expect((filter as any)?.ignorePaths).toContain('/health');\n      expect((filter as any)?.ignorePaths).toContain('/metrics');\n      expect((filter as any)?.ignorePaths).toContain('/favicon.ico');\n    });\n\n    it('应该包含监控配置', () => {\n      const monitoring = defaultConfiguration.logging?.monitoring;\n      expect(monitoring).toBeDefined();\n      expect((monitoring as any)?.enabled).toBe(true);\n      expect((monitoring as any)?.interval).toBe(30000);\n      expect((monitoring as any)?.errorRateThreshold).toBe(0.1);\n      expect((monitoring as any)?.responseTimeThreshold).toBe(1000);\n    });\n\n    it('应该包含保留配置', () => {\n      const retention = defaultConfiguration.logging?.retention;\n      expect(retention).toBeDefined();\n      expect((retention as any)?.days).toBe(30);\n      expect((retention as any)?.autoCleanup).toBe(true);\n      expect((retention as any)?.cleanupInterval).toBe(24);\n    });\n  });\n\n  describe('配置完整性', () => {\n    it('应该包含所有必需的配置模块', () => {\n      expect(defaultConfiguration.app).toBeDefined();\n      expect(defaultConfiguration.database).toBeDefined();\n      expect(defaultConfiguration.redis).toBeDefined();\n      expect(defaultConfiguration.jwt).toBeDefined();\n      expect(defaultConfiguration.email).toBeDefined();\n      expect(defaultConfiguration.logging).toBeDefined();\n      expect(defaultConfiguration.setting).toBeDefined();\n      expect(defaultConfiguration.keycloak).toBeDefined();\n    });\n\n    it('应该包含有效的默认值', () => {\n      // 检查关键配置项不为空\n      expect(defaultConfiguration.app?.app_name).toBeTruthy();\n      expect(defaultConfiguration.database?.type).toBeTruthy();\n      expect(\n        (defaultConfiguration.redis?.connection as any)?.host,\n      ).toBeTruthy();\n      expect(\n        (defaultConfiguration.jwt?.secret as any)?.accessToken,\n      ).toBeTruthy();\n      expect(\n        (defaultConfiguration.email?.sending as any)?.fromEmail,\n      ).toBeTruthy();\n      expect(\n        (defaultConfiguration.logging?.level as any)?.default,\n      ).toBeTruthy();\n    });\n\n    it('应该符合安全最佳实践', () => {\n      // 检查默认密钥不是生产环境密钥\n      expect((defaultConfiguration.jwt?.secret as any)?.accessToken).toContain(\n        'your-super-secret',\n      );\n      expect((defaultConfiguration.jwt?.secret as any)?.refreshToken).toContain(\n        'your-super-secret',\n      );\n\n      // 检查SSL配置\n      expect((defaultConfiguration.database?.postgresql as any)?.ssl).toBe(\n        false,\n      );\n      expect((defaultConfiguration.email?.smtp as any)?.secure).toBe(false);\n    });\n  });\n});\n"],"version":3}