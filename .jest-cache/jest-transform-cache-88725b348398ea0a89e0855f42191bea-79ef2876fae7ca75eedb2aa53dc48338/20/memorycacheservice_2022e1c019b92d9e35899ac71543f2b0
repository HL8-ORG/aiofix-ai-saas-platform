a1a713f7f7fc02a274d9c747b8070c19
"use strict";

/* istanbul ignore next */
function cov_gc6bto892() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts";
  var hash = "cf15c665d756a3d326b76358507e0bd31f574453";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "17": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "18": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "19": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "20": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "21": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 607,
          column: 1
        }
      },
      "22": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "26": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "27": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "28": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "29": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 33
        }
      },
      "31": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 131
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 32
        }
      },
      "33": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "34": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 45
        }
      },
      "35": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 42
        }
      },
      "36": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "37": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 36
        }
      },
      "38": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "39": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 85
        }
      },
      "40": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "41": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 97,
          column: 59
        }
      },
      "42": {
        start: {
          line: 98,
          column: 26
        },
        end: {
          line: 98,
          column: 51
        }
      },
      "43": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "44": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "45": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 28
        }
      },
      "46": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "47": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "48": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 54
        }
      },
      "49": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 55
        }
      },
      "50": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 44
        }
      },
      "51": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 40
        }
      },
      "52": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 28
        }
      },
      "53": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "54": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 35
        }
      },
      "55": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 37
        }
      },
      "56": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 123
        }
      },
      "57": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 36
        }
      },
      "58": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 24
        }
      },
      "59": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "60": {
        start: {
          line: 134,
          column: 30
        },
        end: {
          line: 134,
          column: 59
        }
      },
      "61": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 77
        }
      },
      "62": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 136,
          column: 62
        }
      },
      "63": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "64": {
        start: {
          line: 140,
          column: 31
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "65": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "66": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 42
        }
      },
      "67": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "68": {
        start: {
          line: 168,
          column: 34
        },
        end: {
          line: 168,
          column: 59
        }
      },
      "69": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "70": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 59
        }
      },
      "71": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 42
        }
      },
      "72": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 45
        }
      },
      "73": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 45
        }
      },
      "74": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 51
        }
      },
      "75": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 46
        }
      },
      "76": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 24
        }
      },
      "77": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "78": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 123
        }
      },
      "79": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 25
        }
      },
      "80": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "81": {
        start: {
          line: 201,
          column: 30
        },
        end: {
          line: 201,
          column: 59
        }
      },
      "82": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 51
        }
      },
      "83": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "84": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 29
        }
      },
      "85": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 41
        }
      },
      "86": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 50
        }
      },
      "87": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 51
        }
      },
      "88": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 54
        }
      },
      "89": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 47
        }
      },
      "90": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 24
        }
      },
      "91": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "92": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 124
        }
      },
      "93": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 25
        }
      },
      "94": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "95": {
        start: {
          line: 232,
          column: 30
        },
        end: {
          line: 232,
          column: 59
        }
      },
      "96": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 233,
          column: 51
        }
      },
      "97": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "98": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 29
        }
      },
      "99": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "100": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 45
        }
      },
      "101": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 54
        }
      },
      "102": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 55
        }
      },
      "103": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 44
        }
      },
      "104": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 29
        }
      },
      "105": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 24
        }
      },
      "106": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 132
        }
      },
      "107": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 25
        }
      },
      "108": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "109": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "110": {
        start: {
          line: 262,
          column: 37
        },
        end: {
          line: 262,
          column: 39
        }
      },
      "111": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 274,
          column: 17
        }
      },
      "112": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 273,
          column: 21
        }
      },
      "113": {
        start: {
          line: 265,
          column: 42
        },
        end: {
          line: 265,
          column: 74
        }
      },
      "114": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "115": {
        start: {
          line: 267,
          column: 28
        },
        end: {
          line: 267,
          column: 57
        }
      },
      "116": {
        start: {
          line: 272,
          column: 24
        },
        end: {
          line: 272,
          column: 33
        }
      },
      "117": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 283,
          column: 17
        }
      },
      "118": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 282,
          column: 21
        }
      },
      "119": {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 281,
          column: 25
        }
      },
      "120": {
        start: {
          line: 280,
          column: 28
        },
        end: {
          line: 280,
          column: 57
        }
      },
      "121": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 291,
          column: 17
        }
      },
      "122": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "123": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "124": {
        start: {
          line: 288,
          column: 28
        },
        end: {
          line: 288,
          column: 57
        }
      },
      "125": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "126": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "127": {
        start: {
          line: 295,
          column: 38
        },
        end: {
          line: 295,
          column: 58
        }
      },
      "128": {
        start: {
          line: 296,
          column: 24
        },
        end: {
          line: 298,
          column: 25
        }
      },
      "129": {
        start: {
          line: 297,
          column: 28
        },
        end: {
          line: 297,
          column: 57
        }
      },
      "130": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 309,
          column: 17
        }
      },
      "131": {
        start: {
          line: 302,
          column: 34
        },
        end: {
          line: 302,
          column: 59
        }
      },
      "132": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 308,
          column: 21
        }
      },
      "133": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 304,
          column: 53
        }
      },
      "134": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 62
        }
      },
      "135": {
        start: {
          line: 306,
          column: 24
        },
        end: {
          line: 306,
          column: 63
        }
      },
      "136": {
        start: {
          line: 307,
          column: 24
        },
        end: {
          line: 307,
          column: 59
        }
      },
      "137": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 58
        }
      },
      "138": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 314,
          column: 28
        }
      },
      "139": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 35
        }
      },
      "140": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 44
        }
      },
      "141": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 45
        }
      },
      "142": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 44
        }
      },
      "143": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 41
        }
      },
      "144": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 43
        }
      },
      "145": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 24
        }
      },
      "146": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 118
        }
      },
      "147": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 25
        }
      },
      "148": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 33
        }
      },
      "149": {
        start: {
          line: 346,
          column: 26
        },
        end: {
          line: 346,
          column: 36
        }
      },
      "150": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "151": {
        start: {
          line: 349,
          column: 28
        },
        end: {
          line: 349,
          column: 66
        }
      },
      "152": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 350,
          column: 55
        }
      },
      "153": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 62
        }
      },
      "154": {
        start: {
          line: 352,
          column: 30
        },
        end: {
          line: 352,
          column: 53
        }
      },
      "155": {
        start: {
          line: 353,
          column: 33
        },
        end: {
          line: 353,
          column: 55
        }
      },
      "156": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 359,
          column: 14
        }
      },
      "157": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 99
        }
      },
      "158": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 369,
          column: 14
        }
      },
      "159": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "160": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 398,
          column: 40
        }
      },
      "161": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 41
        }
      },
      "162": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 407,
          column: 19
        }
      },
      "163": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 19
        }
      },
      "164": {
        start: {
          line: 408,
          column: 29
        },
        end: {
          line: 408,
          column: 31
        }
      },
      "165": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "166": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 412,
          column: 13
        }
      },
      "167": {
        start: {
          line: 411,
          column: 16
        },
        end: {
          line: 411,
          column: 45
        }
      },
      "168": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "169": {
        start: {
          line: 415,
          column: 26
        },
        end: {
          line: 415,
          column: 51
        }
      },
      "170": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 422,
          column: 13
        }
      },
      "171": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 45
        }
      },
      "172": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 54
        }
      },
      "173": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 55
        }
      },
      "174": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 51
        }
      },
      "175": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 44
        }
      },
      "176": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 50
        }
      },
      "177": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 428,
          column: 20
        }
      },
      "178": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "179": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 111
        }
      },
      "180": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 77
        }
      },
      "181": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "182": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 69
        }
      },
      "183": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 21
        }
      },
      "184": {
        start: {
          line: 466,
          column: 20
        },
        end: {
          line: 466,
          column: 30
        }
      },
      "185": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 34
        }
      },
      "186": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 39
        }
      },
      "187": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 33
        }
      },
      "188": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 28
        }
      },
      "189": {
        start: {
          line: 473,
          column: 28
        },
        end: {
          line: 473,
          column: 68
        }
      },
      "190": {
        start: {
          line: 474,
          column: 24
        },
        end: {
          line: 474,
          column: 39
        }
      },
      "191": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 53
        }
      },
      "192": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 40
        }
      },
      "193": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 46
        }
      },
      "194": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 479,
          column: 41
        }
      },
      "195": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 41
        }
      },
      "196": {
        start: {
          line: 497,
          column: 22
        },
        end: {
          line: 497,
          column: 57
        }
      },
      "197": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "198": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 46
        }
      },
      "199": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 550,
          column: 9
        }
      },
      "200": {
        start: {
          line: 513,
          column: 16
        },
        end: {
          line: 515,
          column: 17
        }
      },
      "201": {
        start: {
          line: 514,
          column: 20
        },
        end: {
          line: 514,
          column: 53
        }
      },
      "202": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 22
        }
      },
      "203": {
        start: {
          line: 519,
          column: 30
        },
        end: {
          line: 519,
          column: 38
        }
      },
      "204": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 525,
          column: 17
        }
      },
      "205": {
        start: {
          line: 521,
          column: 20
        },
        end: {
          line: 524,
          column: 21
        }
      },
      "206": {
        start: {
          line: 522,
          column: 24
        },
        end: {
          line: 522,
          column: 39
        }
      },
      "207": {
        start: {
          line: 523,
          column: 24
        },
        end: {
          line: 523,
          column: 41
        }
      },
      "208": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 526,
          column: 22
        }
      },
      "209": {
        start: {
          line: 530,
          column: 33
        },
        end: {
          line: 530,
          column: 41
        }
      },
      "210": {
        start: {
          line: 531,
          column: 16
        },
        end: {
          line: 536,
          column: 17
        }
      },
      "211": {
        start: {
          line: 532,
          column: 20
        },
        end: {
          line: 535,
          column: 21
        }
      },
      "212": {
        start: {
          line: 533,
          column: 24
        },
        end: {
          line: 533,
          column: 53
        }
      },
      "213": {
        start: {
          line: 534,
          column: 24
        },
        end: {
          line: 534,
          column: 41
        }
      },
      "214": {
        start: {
          line: 537,
          column: 16
        },
        end: {
          line: 537,
          column: 22
        }
      },
      "215": {
        start: {
          line: 541,
          column: 37
        },
        end: {
          line: 541,
          column: 45
        }
      },
      "216": {
        start: {
          line: 542,
          column: 16
        },
        end: {
          line: 547,
          column: 17
        }
      },
      "217": {
        start: {
          line: 543,
          column: 20
        },
        end: {
          line: 546,
          column: 21
        }
      },
      "218": {
        start: {
          line: 544,
          column: 24
        },
        end: {
          line: 544,
          column: 63
        }
      },
      "219": {
        start: {
          line: 545,
          column: 24
        },
        end: {
          line: 545,
          column: 41
        }
      },
      "220": {
        start: {
          line: 548,
          column: 16
        },
        end: {
          line: 548,
          column: 22
        }
      },
      "221": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 584,
          column: 9
        }
      },
      "222": {
        start: {
          line: 552,
          column: 26
        },
        end: {
          line: 552,
          column: 52
        }
      },
      "223": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 564,
          column: 13
        }
      },
      "224": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 554,
          column: 46
        }
      },
      "225": {
        start: {
          line: 555,
          column: 16
        },
        end: {
          line: 555,
          column: 55
        }
      },
      "226": {
        start: {
          line: 556,
          column: 16
        },
        end: {
          line: 556,
          column: 56
        }
      },
      "227": {
        start: {
          line: 557,
          column: 16
        },
        end: {
          line: 557,
          column: 51
        }
      },
      "228": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 44
        }
      },
      "229": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 58
        }
      },
      "230": {
        start: {
          line: 560,
          column: 16
        },
        end: {
          line: 563,
          column: 28
        }
      },
      "231": {
        start: {
          line: 568,
          column: 12
        },
        end: {
          line: 583,
          column: 13
        }
      },
      "232": {
        start: {
          line: 569,
          column: 16
        },
        end: {
          line: 569,
          column: 49
        }
      },
      "233": {
        start: {
          line: 570,
          column: 30
        },
        end: {
          line: 570,
          column: 56
        }
      },
      "234": {
        start: {
          line: 571,
          column: 16
        },
        end: {
          line: 582,
          column: 17
        }
      },
      "235": {
        start: {
          line: 572,
          column: 20
        },
        end: {
          line: 572,
          column: 50
        }
      },
      "236": {
        start: {
          line: 573,
          column: 20
        },
        end: {
          line: 573,
          column: 59
        }
      },
      "237": {
        start: {
          line: 574,
          column: 20
        },
        end: {
          line: 574,
          column: 60
        }
      },
      "238": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 575,
          column: 55
        }
      },
      "239": {
        start: {
          line: 576,
          column: 20
        },
        end: {
          line: 576,
          column: 48
        }
      },
      "240": {
        start: {
          line: 577,
          column: 20
        },
        end: {
          line: 577,
          column: 62
        }
      },
      "241": {
        start: {
          line: 578,
          column: 20
        },
        end: {
          line: 581,
          column: 32
        }
      },
      "242": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 589,
          column: 9
        }
      },
      "243": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 587,
          column: 51
        }
      },
      "244": {
        start: {
          line: 588,
          column: 12
        },
        end: {
          line: 588,
          column: 52
        }
      },
      "245": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 603,
          column: 9
        }
      },
      "246": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 30
        }
      },
      "247": {
        start: {
          line: 602,
          column: 12
        },
        end: {
          line: 602,
          column: 32
        }
      },
      "248": {
        start: {
          line: 604,
          column: 22
        },
        end: {
          line: 604,
          column: 57
        }
      },
      "249": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 605,
          column: 69
        }
      },
      "250": {
        start: {
          line: 608,
          column: 0
        },
        end: {
          line: 608,
          column: 48
        }
      },
      "251": {
        start: {
          line: 609,
          column: 0
        },
        end: {
          line: 615,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 36
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 19
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 35
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 132
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 22
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 199
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 22
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 230
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 27
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 258
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 21
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 337
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 22
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 345
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 23
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 377
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 395,
            column: 5
          }
        },
        loc: {
          start: {
            line: 395,
            column: 24
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 395
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 396,
            column: 40
          },
          end: {
            line: 396,
            column: 41
          }
        },
        loc: {
          start: {
            line: 396,
            column: 46
          },
          end: {
            line: 398,
            column: 9
          }
        },
        line: 396
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 28
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 405
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 21
          },
          end: {
            line: 442,
            column: 5
          }
        },
        line: 440
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 26
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 450
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 465,
            column: 4
          },
          end: {
            line: 465,
            column: 5
          }
        },
        loc: {
          start: {
            line: 465,
            column: 39
          },
          end: {
            line: 480,
            column: 5
          }
        },
        line: 465
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        loc: {
          start: {
            line: 487,
            column: 32
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 487
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 496,
            column: 5
          }
        },
        loc: {
          start: {
            line: 496,
            column: 37
          },
          end: {
            line: 501,
            column: 5
          }
        },
        line: 496
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 25
          },
          end: {
            line: 590,
            column: 5
          }
        },
        line: 508
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 597,
            column: 4
          },
          end: {
            line: 597,
            column: 5
          }
        },
        loc: {
          start: {
            line: 597,
            column: 23
          },
          end: {
            line: 606,
            column: 5
          }
        },
        line: 597
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "15": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "16": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 135,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 135,
            column: 46
          }
        }, {
          start: {
            line: 135,
            column: 50
          },
          end: {
            line: 135,
            column: 77
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 136,
            column: 24
          },
          end: {
            line: 136,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 24
          },
          end: {
            line: 136,
            column: 36
          }
        }, {
          start: {
            line: 136,
            column: 40
          },
          end: {
            line: 136,
            column: 62
          }
        }],
        line: 136
      },
      "19": {
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 37
          },
          end: {
            line: 143,
            column: 53
          }
        }, {
          start: {
            line: 143,
            column: 56
          },
          end: {
            line: 143,
            column: 65
          }
        }],
        line: 143
      },
      "20": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "21": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: 173,
            column: 17
          },
          end: {
            line: 176,
            column: 13
          }
        }],
        line: 169
      },
      "22": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 22
          },
          end: {
            line: 184,
            column: 68
          }
        }, {
          start: {
            line: 185,
            column: 22
          },
          end: {
            line: 185,
            column: 23
          }
        }],
        line: 183
      },
      "23": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "24": {
        loc: {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 216,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 22
          },
          end: {
            line: 215,
            column: 68
          }
        }, {
          start: {
            line: 216,
            column: 22
          },
          end: {
            line: 216,
            column: 23
          }
        }],
        line: 214
      },
      "25": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "26": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "27": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        }, {
          start: {
            line: 316,
            column: 17
          },
          end: {
            line: 324,
            column: 13
          }
        }],
        line: 260
      },
      "28": {
        loc: {
          start: {
            line: 266,
            column: 24
          },
          end: {
            line: 268,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 24
          },
          end: {
            line: 268,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "29": {
        loc: {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 283,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 283,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "30": {
        loc: {
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 281,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 281,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "31": {
        loc: {
          start: {
            line: 278,
            column: 28
          },
          end: {
            line: 279,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 28
          },
          end: {
            line: 278,
            column: 64
          }
        }, {
          start: {
            line: 279,
            column: 28
          },
          end: {
            line: 279,
            column: 65
          }
        }],
        line: 278
      },
      "32": {
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 291,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 291,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "33": {
        loc: {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 289,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 289,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "34": {
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "35": {
        loc: {
          start: {
            line: 296,
            column: 24
          },
          end: {
            line: 298,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 24
          },
          end: {
            line: 298,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "36": {
        loc: {
          start: {
            line: 303,
            column: 20
          },
          end: {
            line: 308,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 20
          },
          end: {
            line: 308,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "37": {
        loc: {
          start: {
            line: 312,
            column: 20
          },
          end: {
            line: 314,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 26
          },
          end: {
            line: 313,
            column: 72
          }
        }, {
          start: {
            line: 314,
            column: 26
          },
          end: {
            line: 314,
            column: 27
          }
        }],
        line: 312
      },
      "38": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 407,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 407,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "39": {
        loc: {
          start: {
            line: 410,
            column: 12
          },
          end: {
            line: 412,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 12
          },
          end: {
            line: 412,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "40": {
        loc: {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "41": {
        loc: {
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 428,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 427,
            column: 18
          },
          end: {
            line: 427,
            column: 64
          }
        }, {
          start: {
            line: 428,
            column: 18
          },
          end: {
            line: 428,
            column: 19
          }
        }],
        line: 426
      },
      "42": {
        loc: {
          start: {
            line: 429,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 429
      },
      "43": {
        loc: {
          start: {
            line: 441,
            column: 15
          },
          end: {
            line: 441,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 15
          },
          end: {
            line: 441,
            column: 44
          }
        }, {
          start: {
            line: 441,
            column: 48
          },
          end: {
            line: 441,
            column: 76
          }
        }],
        line: 441
      },
      "44": {
        loc: {
          start: {
            line: 473,
            column: 28
          },
          end: {
            line: 473,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 473,
            column: 28
          },
          end: {
            line: 473,
            column: 63
          }
        }, {
          start: {
            line: 473,
            column: 67
          },
          end: {
            line: 473,
            column: 68
          }
        }],
        line: 473
      },
      "45": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "46": {
        loc: {
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 550,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 516,
            column: 22
          }
        }, {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 527,
            column: 13
          }
        }, {
          start: {
            line: 528,
            column: 12
          },
          end: {
            line: 538,
            column: 13
          }
        }, {
          start: {
            line: 539,
            column: 12
          },
          end: {
            line: 549,
            column: 13
          }
        }],
        line: 510
      },
      "47": {
        loc: {
          start: {
            line: 513,
            column: 16
          },
          end: {
            line: 515,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 16
          },
          end: {
            line: 515,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "48": {
        loc: {
          start: {
            line: 521,
            column: 20
          },
          end: {
            line: 524,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 20
          },
          end: {
            line: 524,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "49": {
        loc: {
          start: {
            line: 532,
            column: 20
          },
          end: {
            line: 535,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 20
          },
          end: {
            line: 535,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "50": {
        loc: {
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 546,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 546,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "51": {
        loc: {
          start: {
            line: 543,
            column: 24
          },
          end: {
            line: 543,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 543,
            column: 24
          },
          end: {
            line: 543,
            column: 45
          }
        }, {
          start: {
            line: 543,
            column: 49
          },
          end: {
            line: 543,
            column: 87
          }
        }],
        line: 543
      },
      "52": {
        loc: {
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        }, {
          start: {
            line: 566,
            column: 13
          },
          end: {
            line: 584,
            column: 9
          }
        }],
        line: 551
      },
      "53": {
        loc: {
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 564,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 564,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 553
      },
      "54": {
        loc: {
          start: {
            line: 561,
            column: 20
          },
          end: {
            line: 563,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 562,
            column: 26
          },
          end: {
            line: 562,
            column: 72
          }
        }, {
          start: {
            line: 563,
            column: 26
          },
          end: {
            line: 563,
            column: 27
          }
        }],
        line: 561
      },
      "55": {
        loc: {
          start: {
            line: 568,
            column: 12
          },
          end: {
            line: 583,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 568,
            column: 12
          },
          end: {
            line: 583,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 568
      },
      "56": {
        loc: {
          start: {
            line: 571,
            column: 16
          },
          end: {
            line: 582,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 16
          },
          end: {
            line: 582,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 571
      },
      "57": {
        loc: {
          start: {
            line: 579,
            column: 24
          },
          end: {
            line: 581,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 580,
            column: 30
          },
          end: {
            line: 580,
            column: 76
          }
        }, {
          start: {
            line: 581,
            column: 30
          },
          end: {
            line: 581,
            column: 31
          }
        }],
        line: 579
      },
      "58": {
        loc: {
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 589,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 589,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 586
      },
      "59": {
        loc: {
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 603,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 603,
            column: 9
          }
        }, {
          start: {
            line: 601,
            column: 13
          },
          end: {
            line: 603,
            column: 9
          }
        }],
        line: 598
      },
      "60": {
        loc: {
          start: {
            line: 605,
            column: 29
          },
          end: {
            line: 605,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 605,
            column: 41
          },
          end: {
            line: 605,
            column: 64
          }
        }, {
          start: {
            line: 605,
            column: 67
          },
          end: {
            line: 605,
            column: 68
          }
        }],
        line: 605
      },
      "61": {
        loc: {
          start: {
            line: 614,
            column: 45
          },
          end: {
            line: 614,
            column: 169
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 614,
            column: 158
          },
          end: {
            line: 614,
            column: 160
          }
        }, {
          start: {
            line: 614,
            column: 163
          },
          end: {
            line: 614,
            column: 169
          }
        }],
        line: 614
      },
      "62": {
        loc: {
          start: {
            line: 614,
            column: 58
          },
          end: {
            line: 614,
            column: 139
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 614,
            column: 58
          },
          end: {
            line: 614,
            column: 108
          }
        }, {
          start: {
            line: 614,
            column: 112
          },
          end: {
            line: 614,
            column: 139
          }
        }],
        line: 614
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/cache/src/services/memory-cache.service.ts"],
      sourcesContent: ["import { Injectable, OnModuleDestroy, Inject } from '@nestjs/common';\nimport {\n  ICacheService,\n  CacheKey,\n  CacheValue,\n  CacheOptions,\n  CacheStats,\n  CacheHealth,\n  CacheStrategy,\n} from '../interfaces/cache.interface';\nimport type { ICacheKeyFactory } from '../interfaces/cache.interface';\nimport { PinoLoggerService, LogContext } from '@aiofix/logging';\n\n/**\n * @interface MemoryCacheConfig\n * @description \u5185\u5B58\u7F13\u5B58\u914D\u7F6E\u63A5\u53E3\n */\nexport interface MemoryCacheConfig {\n  /** \u9ED8\u8BA4\u8FC7\u671F\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09 */\n  defaultTtl?: number;\n  /** \u6700\u5927\u7F13\u5B58\u9879\u6570\u91CF */\n  maxSize?: number;\n  /** \u9ED8\u8BA4\u7F13\u5B58\u7B56\u7565 */\n  defaultStrategy?: CacheStrategy;\n  /** \u6E05\u7406\u95F4\u9694\uFF08\u6BEB\u79D2\uFF09 */\n  cleanupInterval?: number;\n  /** \u662F\u5426\u542F\u7528\u538B\u7F29 */\n  enableCompression?: boolean;\n  /** \u662F\u5426\u542F\u7528\u52A0\u5BC6 */\n  enableEncryption?: boolean;\n}\n\n/**\n * @interface MemoryCacheEntry<T>\n * @description \u5185\u5B58\u7F13\u5B58\u6761\u76EE\u63A5\u53E3\n */\ninterface MemoryCacheEntry<T = unknown> {\n  /** \u7F13\u5B58\u503C */\n  value: CacheValue<T>;\n  /** \u5927\u5C0F\uFF08\u5B57\u8282\uFF09 */\n  size: number;\n  /** \u521B\u5EFA\u65F6\u95F4 */\n  createdAt: number;\n  /** \u6700\u540E\u8BBF\u95EE\u65F6\u95F4 */\n  lastAccessed: number;\n  /** \u8BBF\u95EE\u6B21\u6570 */\n  accessCount: number;\n  /** \u8BBF\u95EE\u9891\u7387\uFF08\u7528\u4E8ELFU\u7B56\u7565\uFF09 */\n  accessFrequency: number;\n}\n\n/**\n * @class MemoryCacheService\n * @description \u5185\u5B58\u7F13\u5B58\u670D\u52A1\u5B9E\u73B0\n *\n * \u8BE5\u670D\u52A1\u63D0\u4F9B\u9AD8\u6027\u80FD\u7684\u5185\u5B58\u7F13\u5B58\u529F\u80FD\uFF0C\u652F\u6301\u591A\u79CD\u7F13\u5B58\u7B56\u7565\uFF1A\n * - LRU (Least Recently Used): \u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7B56\u7565\n * - LFU (Least Frequently Used): \u6700\u5C11\u4F7F\u7528\u9891\u7387\u7B56\u7565\n * - FIFO (First In First Out): \u5148\u8FDB\u5148\u51FA\u7B56\u7565\n * - TTL (Time To Live): \u57FA\u4E8E\u65F6\u95F4\u8FC7\u671F\u7B56\u7565\n *\n * \u4E3B\u8981\u7279\u6027\uFF1A\n * 1. \u652F\u6301\u591A\u79CD\u7F13\u5B58\u7B56\u7565\uFF0C\u53EF\u6839\u636E\u4E1A\u52A1\u9700\u6C42\u9009\u62E9\n * 2. \u81EA\u52A8\u8FC7\u671F\u6E05\u7406\u548C\u5185\u5B58\u7BA1\u7406\n * 3. \u5B8C\u6574\u7684\u7EDF\u8BA1\u4FE1\u606F\u548C\u5065\u5EB7\u68C0\u67E5\n * 4. \u7EBF\u7A0B\u5B89\u5168\u7684\u5E76\u53D1\u8BBF\u95EE\n * 5. \u53EF\u914D\u7F6E\u7684\u538B\u7F29\u548C\u52A0\u5BC6\u529F\u80FD\n */\n@Injectable()\nexport class MemoryCacheService implements ICacheService, OnModuleDestroy {\n  /** \u5185\u5B58\u5B58\u50A8 */\n  private readonly cache = new Map<string, MemoryCacheEntry>();\n\n  /** \u8BBF\u95EE\u987A\u5E8F\u961F\u5217\uFF08\u7528\u4E8ELRU\u7B56\u7565\uFF09 */\n  private readonly accessOrder: string[] = [];\n\n  /** \u8BBF\u95EE\u9891\u7387\u6620\u5C04\uFF08\u7528\u4E8ELFU\u7B56\u7565\uFF09 */\n  private readonly accessFrequency = new Map<string, number>();\n\n  /** \u914D\u7F6E\u9009\u9879 */\n  private readonly config: Required<MemoryCacheConfig>;\n\n  /** \u7EDF\u8BA1\u4FE1\u606F */\n  private stats: CacheStats = {\n    totalEntries: 0,\n    hits: 0,\n    misses: 0,\n    hitRate: 0,\n    totalSize: 0,\n    averageSize: 0,\n    expiredEntries: 0,\n    evictedEntries: 0,\n    lastReset: Date.now(),\n  };\n\n  /** \u6E05\u7406\u5B9A\u65F6\u5668 */\n  private cleanupTimer?: NodeJS.Timeout;\n\n  /** \u662F\u5426\u5DF2\u9500\u6BC1 */\n  private isDestroyed = false;\n\n  constructor(\n    @Inject('MEMORY_CACHE_CONFIG')\n    @Inject('ICacheKeyFactory')\n    private readonly keyFactory: ICacheKeyFactory,\n    @Inject(PinoLoggerService) private readonly logger: PinoLoggerService,\n  ) {\n    // \u8BBE\u7F6E\u9ED8\u8BA4\u914D\u7F6E\n    this.config = {\n      defaultTtl: 300000, // 5\u5206\u949F\n      maxSize: 1000,\n      defaultStrategy: CacheStrategy.LRU,\n      cleanupInterval: 60000, // 1\u5206\u949F\n      enableCompression: false,\n      enableEncryption: false,\n    };\n\n    // \u542F\u52A8\u6E05\u7406\u5B9A\u65F6\u5668\n    this.startCleanupTimer();\n\n    this.logger.info(\n      `MemoryCacheService initialized with config: ${JSON.stringify(\n        this.config,\n      )}`,\n      LogContext.CACHE,\n    );\n  }\n\n  /**\n   * @method onModuleDestroy\n   * @description \u6A21\u5757\u9500\u6BC1\u65F6\u7684\u6E05\u7406\u5DE5\u4F5C\n   */\n  async onModuleDestroy(): Promise<void> {\n    this.isDestroyed = true;\n\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = undefined;\n    }\n\n    this.cache.clear();\n    this.accessOrder.length = 0;\n    this.accessFrequency.clear();\n\n    this.logger.info('MemoryCacheService destroyed', LogContext.CACHE);\n  }\n\n  /**\n   * @method get\n   * @description \u83B7\u53D6\u7F13\u5B58\u503C\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @returns {Promise<T | null>} \u7F13\u5B58\u503C\u6216null\n   */\n  async get<T = unknown>(key: CacheKey): Promise<T | null> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const entry = this.cache.get(keyString);\n\n      if (!entry) {\n        this.updateStats(false);\n        return null;\n      }\n\n      // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\n      if (this.isExpired(entry.value)) {\n        this.cache.delete(keyString);\n        this.removeFromAccessOrder(keyString);\n        this.accessFrequency.delete(keyString);\n        this.stats.expiredEntries++;\n        this.updateStats(false);\n        return null;\n      }\n\n      // \u66F4\u65B0\u8BBF\u95EE\u4FE1\u606F\n      this.updateAccessInfo(keyString, entry);\n\n      // \u66F4\u65B0\u7EDF\u8BA1\n      this.updateStats(true);\n\n      return entry.value.value as T;\n    } catch (error) {\n      this.logger.error(\n        `Error getting cache value: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      this.updateStats(false);\n      return null;\n    }\n  }\n\n  /**\n   * @method set\n   * @description \u8BBE\u7F6E\u7F13\u5B58\u503C\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @param {T} value \u7F13\u5B58\u503C\n   * @param {Partial<CacheOptions>} options \u7F13\u5B58\u9009\u9879\n   * @returns {Promise<boolean>} \u662F\u5426\u6210\u529F\n   */\n  async set<T = unknown>(\n    key: CacheKey,\n    value: T,\n    options?: Partial<CacheOptions>,\n  ): Promise<boolean> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const strategy = options?.strategy ?? this.config.defaultStrategy;\n      const ttl = options?.ttl ?? this.config.defaultTtl;\n\n      // \u8BA1\u7B97\u503C\u5927\u5C0F\n      const valueSize = this.calculateSize(value);\n\n      // \u521B\u5EFA\u7F13\u5B58\u503C\n      const cacheValue: CacheValue<T> = {\n        value,\n        createdAt: Date.now(),\n        expiresAt: ttl > 0 ? Date.now() + ttl : undefined,\n        accessCount: 0,\n        lastAccessed: Date.now(),\n        version: key.version,\n        tags: key.tags,\n        metadata: {\n          strategy,\n          compressed: this.config.enableCompression,\n          encrypted: this.config.enableEncryption,\n        },\n      };\n\n      // \u68C0\u67E5\u662F\u5426\u9700\u8981\u9A71\u9010\u65E7\u6761\u76EE\n      if (this.cache.size >= this.config.maxSize) {\n        this.evictEntry(strategy);\n      }\n\n      // \u5B58\u50A8\u65B0\u6761\u76EE\n      const entry: MemoryCacheEntry<T> = {\n        value: cacheValue,\n        size: valueSize,\n        createdAt: Date.now(),\n        lastAccessed: Date.now(),\n        accessCount: 0,\n        accessFrequency: 0,\n      };\n\n      // \u5982\u679C\u952E\u5DF2\u5B58\u5728\uFF0C\u5148\u66F4\u65B0\u7EDF\u8BA1\n      const existingEntry = this.cache.get(keyString);\n      if (existingEntry) {\n        this.stats.totalSize -= existingEntry.size;\n        // \u4E0D\u51CF\u5C11 totalEntries\uFF0C\u56E0\u4E3A\u6211\u4EEC\u8981\u66FF\u6362\u5B83\n      } else {\n        // \u53EA\u6709\u65B0\u952E\u624D\u589E\u52A0 totalEntries\n        this.stats.totalEntries++;\n      }\n\n      this.cache.set(keyString, entry);\n      this.addToAccessOrder(keyString);\n      this.accessFrequency.set(keyString, 0);\n\n      // \u66F4\u65B0\u7EDF\u8BA1\n      this.stats.totalSize += valueSize;\n      this.stats.averageSize =\n        this.stats.totalEntries > 0\n          ? this.stats.totalSize / this.stats.totalEntries\n          : 0;\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error setting cache value: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method delete\n   * @description \u5220\u9664\u7F13\u5B58\u503C\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @returns {Promise<boolean>} \u662F\u5426\u6210\u529F\n   */\n  async delete(key: CacheKey): Promise<boolean> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const entry = this.cache.get(keyString);\n\n      if (!entry) {\n        return false;\n      }\n\n      // \u4ECE\u7F13\u5B58\u4E2D\u5220\u9664\n      this.cache.delete(keyString);\n      this.removeFromAccessOrder(keyString);\n      this.accessFrequency.delete(keyString);\n\n      // \u66F4\u65B0\u7EDF\u8BA1\n      this.stats.totalEntries = this.cache.size;\n      this.stats.totalSize -= entry.size;\n      this.stats.averageSize =\n        this.stats.totalEntries > 0\n          ? this.stats.totalSize / this.stats.totalEntries\n          : 0;\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error deleting cache value: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method exists\n   * @description \u68C0\u67E5\u7F13\u5B58\u952E\u662F\u5426\u5B58\u5728\n   * @param {CacheKey} key \u7F13\u5B58\u952E\n   * @returns {Promise<boolean>} \u662F\u5426\u5B58\u5728\n   */\n  async exists(key: CacheKey): Promise<boolean> {\n    try {\n      const keyString = this.keyFactory.toString(key);\n      const entry = this.cache.get(keyString);\n\n      if (!entry) {\n        return false;\n      }\n\n      // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\n      if (this.isExpired(entry.value)) {\n        this.cache.delete(keyString);\n        this.removeFromAccessOrder(keyString);\n        this.accessFrequency.delete(keyString);\n        this.stats.expiredEntries++;\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error checking cache key existence: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method clear\n   * @description \u6E05\u7A7A\u7F13\u5B58\n   * @param {string} namespace \u547D\u540D\u7A7A\u95F4\uFF08\u53EF\u9009\uFF09\n   * @returns {Promise<boolean>} \u662F\u5426\u6210\u529F\n   */\n  async clear(namespace?: string): Promise<boolean> {\n    try {\n      if (namespace) {\n        // \u6E05\u7A7A\u6307\u5B9A\u547D\u540D\u7A7A\u95F4\n        const keysToDelete: string[] = [];\n\n        for (const [keyString] of this.cache.entries()) {\n          try {\n            const parsedKey = this.keyFactory.parse(keyString);\n            if (parsedKey.namespace === namespace) {\n              keysToDelete.push(keyString);\n            }\n          } catch {\n            // \u5982\u679C\u89E3\u6790\u5931\u8D25\uFF0C\u8DF3\u8FC7\u8FD9\u4E2A\u952E\n            continue;\n          }\n        }\n\n        // \u5982\u679C\u901A\u8FC7\u89E3\u6790\u6CA1\u6709\u627E\u5230\u952E\uFF0C\u5C1D\u8BD5\u76F4\u63A5\u5339\u914D\uFF08\u56E0\u4E3A\u952E\u683C\u5F0F\u53EF\u80FD\u5305\u542B\u7248\u672C\u53F7\uFF09\n        if (keysToDelete.length === 0) {\n          for (const [keyString] of this.cache.entries()) {\n            if (\n              keyString.includes(`:${namespace}:`) ||\n              keyString.startsWith(`${namespace}:`)\n            ) {\n              keysToDelete.push(keyString);\n            }\n          }\n        }\n\n        // \u5982\u679C\u8FD8\u662F\u6CA1\u6709\u627E\u5230\uFF0C\u5C1D\u8BD5\u66F4\u5BBD\u677E\u7684\u5339\u914D\n        if (keysToDelete.length === 0) {\n          for (const [keyString] of this.cache.entries()) {\n            if (keyString.includes(namespace)) {\n              keysToDelete.push(keyString);\n            }\n          }\n        }\n\n        // \u5982\u679C\u8FD8\u662F\u6CA1\u6709\u627E\u5230\uFF0C\u5C1D\u8BD5\u6700\u5BBD\u677E\u7684\u5339\u914D\uFF08\u5305\u542B\u547D\u540D\u7A7A\u95F4\u7684\u4EFB\u4F55\u952E\uFF09\n        if (keysToDelete.length === 0) {\n          for (const [keyString] of this.cache.entries()) {\n            const parts = keyString.split(':');\n            if (parts.includes(namespace)) {\n              keysToDelete.push(keyString);\n            }\n          }\n        }\n\n        for (const keyString of keysToDelete) {\n          const entry = this.cache.get(keyString);\n          if (entry) {\n            this.cache.delete(keyString);\n            this.removeFromAccessOrder(keyString);\n            this.accessFrequency.delete(keyString);\n            this.stats.totalSize -= entry.size;\n          }\n        }\n\n        this.stats.totalEntries = this.cache.size;\n        this.stats.averageSize =\n          this.stats.totalEntries > 0\n            ? this.stats.totalSize / this.stats.totalEntries\n            : 0;\n      } else {\n        // \u6E05\u7A7A\u6240\u6709\u7F13\u5B58\n        this.cache.clear();\n        this.accessOrder.length = 0;\n        this.accessFrequency.clear();\n        this.stats.totalEntries = 0;\n        this.stats.totalSize = 0;\n        this.stats.averageSize = 0;\n      }\n\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error clearing cache: ${(error as Error).message}`,\n        LogContext.CACHE,\n        undefined,\n        error as Error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * @method getStats\n   * @description \u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\n   * @returns {Promise<CacheStats>} \u7F13\u5B58\u7EDF\u8BA1\n   */\n  async getStats(): Promise<CacheStats> {\n    return { ...this.stats };\n  }\n\n  /**\n   * @method getHealth\n   * @description \u83B7\u53D6\u7F13\u5B58\u5065\u5EB7\u72B6\u6001\n   * @returns {Promise<CacheHealth>} \u7F13\u5B58\u5065\u5EB7\u72B6\u6001\n   */\n  async getHealth(): Promise<CacheHealth> {\n    const startTime = Date.now();\n\n    try {\n      // \u7B80\u5355\u7684\u5065\u5EB7\u68C0\u67E5\uFF1A\u5C1D\u8BD5\u8BBE\u7F6E\u548C\u83B7\u53D6\u4E00\u4E2A\u6D4B\u8BD5\u503C\n      const testKey = this.keyFactory.create('health-check');\n      const testValue = { timestamp: Date.now() };\n\n      await this.set(testKey, testValue, { ttl: 1000 });\n      const retrieved = await this.get(testKey);\n\n      const responseTime = Date.now() - startTime;\n\n      return {\n        healthy: retrieved !== null,\n        connected: true,\n        responseTime,\n        lastCheck: Date.now(),\n      };\n    } catch (error) {\n      this.logger.error(\n        `Health check failed: ${(error as Error).message}`,\n        LogContext.CACHE,\n      );\n      return {\n        healthy: false,\n        connected: false,\n        responseTime: Date.now() - startTime,\n        error: (error as Error).message,\n        lastCheck: Date.now(),\n      };\n    }\n  }\n\n  /**\n   * @method resetStats\n   * @description \u91CD\u7F6E\u7F13\u5B58\u7EDF\u8BA1\n   * @returns {Promise<void>}\n   */\n  async resetStats(): Promise<void> {\n    this.stats = {\n      totalEntries: this.cache.size,\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      totalSize: this.stats.totalSize,\n      averageSize: this.stats.averageSize,\n      expiredEntries: 0,\n      evictedEntries: 0,\n      lastReset: Date.now(),\n    };\n  }\n\n  /**\n   * @private\n   * @method startCleanupTimer\n   * @description \u542F\u52A8\u6E05\u7406\u5B9A\u65F6\u5668\n   */\n  private startCleanupTimer(): void {\n    this.cleanupTimer = setInterval(() => {\n      this.cleanupExpiredEntries();\n    }, this.config.cleanupInterval);\n  }\n\n  /**\n   * @private\n   * @method cleanupExpiredEntries\n   * @description \u6E05\u7406\u8FC7\u671F\u6761\u76EE\n   */\n  private cleanupExpiredEntries(): void {\n    if (this.isDestroyed) return;\n\n    const keysToDelete: string[] = [];\n\n    for (const [keyString, entry] of this.cache.entries()) {\n      if (this.isExpired(entry.value)) {\n        keysToDelete.push(keyString);\n      }\n    }\n\n    for (const keyString of keysToDelete) {\n      const entry = this.cache.get(keyString);\n      if (entry) {\n        this.cache.delete(keyString);\n        this.removeFromAccessOrder(keyString);\n        this.accessFrequency.delete(keyString);\n        this.stats.totalSize -= entry.size;\n        this.stats.expiredEntries++;\n      }\n    }\n\n    this.stats.totalEntries = this.cache.size;\n    this.stats.averageSize =\n      this.stats.totalEntries > 0\n        ? this.stats.totalSize / this.stats.totalEntries\n        : 0;\n\n    if (keysToDelete.length > 0) {\n      this.logger.debug(\n        `Cleaned up ${keysToDelete.length} expired entries`,\n        LogContext.CACHE,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @method isExpired\n   * @description \u68C0\u67E5\u7F13\u5B58\u503C\u662F\u5426\u8FC7\u671F\n   * @param {CacheValue} value \u7F13\u5B58\u503C\n   * @returns {boolean} \u662F\u5426\u8FC7\u671F\n   */\n  private isExpired(value: CacheValue): boolean {\n    return value.expiresAt !== undefined && Date.now() > value.expiresAt;\n  }\n\n  /**\n   * @private\n   * @method calculateSize\n   * @description \u8BA1\u7B97\u503C\u5927\u5C0F\n   * @param {any} value \u503C\n   * @returns {number} \u5927\u5C0F\uFF08\u5B57\u8282\uFF09\n   */\n  private calculateSize(_value: unknown): number {\n    try {\n      return Buffer.byteLength(JSON.stringify(_value), 'utf8');\n    } catch {\n      return 0;\n    }\n  }\n\n  /**\n   * @private\n   * @method updateAccessInfo\n   * @description \u66F4\u65B0\u8BBF\u95EE\u4FE1\u606F\n   * @param {string} keyString \u952E\u5B57\u7B26\u4E32\n   * @param {MemoryCacheEntry} entry \u7F13\u5B58\u6761\u76EE\n   */\n  private updateAccessInfo(keyString: string, entry: MemoryCacheEntry): void {\n    const now = Date.now();\n\n    // \u66F4\u65B0\u8BBF\u95EE\u6B21\u6570\u548C\u65F6\u95F4\n    entry.value.accessCount++;\n    entry.value.lastAccessed = now;\n    entry.lastAccessed = now;\n    entry.accessCount++;\n\n    // \u66F4\u65B0\u8BBF\u95EE\u9891\u7387\uFF08\u7528\u4E8ELFU\u7B56\u7565\uFF09\n    const currentFreq = this.accessFrequency.get(keyString) ?? 0;\n    const newFreq = currentFreq + 1;\n    this.accessFrequency.set(keyString, newFreq);\n    entry.accessFrequency = newFreq;\n\n    // \u66F4\u65B0\u8BBF\u95EE\u987A\u5E8F\uFF08\u7528\u4E8ELRU\u7B56\u7565\uFF09\n    this.removeFromAccessOrder(keyString);\n    this.accessOrder.push(keyString);\n  }\n\n  /**\n   * @private\n   * @method addToAccessOrder\n   * @description \u6DFB\u52A0\u5230\u8BBF\u95EE\u987A\u5E8F\n   * @param {string} keyString \u952E\u5B57\u7B26\u4E32\n   */\n  private addToAccessOrder(keyString: string): void {\n    this.accessOrder.push(keyString);\n  }\n\n  /**\n   * @private\n   * @method removeFromAccessOrder\n   * @description \u4ECE\u8BBF\u95EE\u987A\u5E8F\u4E2D\u79FB\u9664\n   * @param {string} keyString \u952E\u5B57\u7B26\u4E32\n   */\n  private removeFromAccessOrder(keyString: string): void {\n    const index = this.accessOrder.indexOf(keyString);\n    if (index > -1) {\n      this.accessOrder.splice(index, 1);\n    }\n  }\n\n  /**\n   * @private\n   * @method evictEntry\n   * @description \u9A71\u9010\u7F13\u5B58\u6761\u76EE\n   * @param {CacheStrategy} strategy \u7F13\u5B58\u7B56\u7565\n   */\n  private evictEntry(strategy: CacheStrategy): void {\n    let keyToEvict: string | undefined;\n\n    switch (strategy) {\n      case CacheStrategy.LRU:\n        // \u9A71\u9010\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u6761\u76EE\uFF08\u8BBF\u95EE\u987A\u5E8F\u4E2D\u7684\u7B2C\u4E00\u4E2A\uFF09\n        if (this.accessOrder.length > 0) {\n          keyToEvict = this.accessOrder[0];\n        }\n        break;\n\n      case CacheStrategy.LFU: {\n        // \u9A71\u9010\u6700\u5C11\u4F7F\u7528\u9891\u7387\u7684\u6761\u76EE\n        let minFreq = Infinity;\n        for (const [key, freq] of this.accessFrequency.entries()) {\n          if (freq < minFreq) {\n            minFreq = freq;\n            keyToEvict = key;\n          }\n        }\n        break;\n      }\n\n      case CacheStrategy.FIFO: {\n        // \u9A71\u9010\u6700\u65E9\u521B\u5EFA\u7684\u6761\u76EE\n        let oldestTime = Infinity;\n        for (const [key, entry] of this.cache.entries()) {\n          if (entry.createdAt < oldestTime) {\n            oldestTime = entry.createdAt;\n            keyToEvict = key;\n          }\n        }\n        break;\n      }\n\n      case CacheStrategy.TTL: {\n        // \u9A71\u9010\u6700\u65E9\u8FC7\u671F\u7684\u6761\u76EE\n        let earliestExpiry = Infinity;\n        for (const [key, entry] of this.cache.entries()) {\n          if (entry.value.expiresAt && entry.value.expiresAt < earliestExpiry) {\n            earliestExpiry = entry.value.expiresAt;\n            keyToEvict = key;\n          }\n        }\n        break;\n      }\n    }\n\n    if (keyToEvict) {\n      const entry = this.cache.get(keyToEvict);\n      if (entry) {\n        this.cache.delete(keyToEvict);\n        this.removeFromAccessOrder(keyToEvict);\n        this.accessFrequency.delete(keyToEvict);\n        this.stats.totalSize -= entry.size;\n        this.stats.evictedEntries++;\n        this.stats.totalEntries = this.cache.size;\n        this.stats.averageSize =\n          this.stats.totalEntries > 0\n            ? this.stats.totalSize / this.stats.totalEntries\n            : 0;\n      }\n    } else {\n      // \u5982\u679C\u6CA1\u6709\u627E\u5230\u8981\u9A71\u9010\u7684\u952E\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u7B56\u7565\uFF08LRU\uFF09\n      if (this.accessOrder.length > 0) {\n        keyToEvict = this.accessOrder[0];\n        const entry = this.cache.get(keyToEvict);\n        if (entry) {\n          this.cache.delete(keyToEvict);\n          this.removeFromAccessOrder(keyToEvict);\n          this.accessFrequency.delete(keyToEvict);\n          this.stats.totalSize -= entry.size;\n          this.stats.evictedEntries++;\n          this.stats.totalEntries = this.cache.size;\n          this.stats.averageSize =\n            this.stats.totalEntries > 0\n              ? this.stats.totalSize / this.stats.totalEntries\n              : 0;\n        }\n      }\n    }\n\n    // \u786E\u4FDD\u9A71\u9010\u540E\u8BBF\u95EE\u987A\u5E8F\u548C\u9891\u7387\u6620\u5C04\u7684\u4E00\u81F4\u6027\n    if (keyToEvict) {\n      this.removeFromAccessOrder(keyToEvict);\n      this.accessFrequency.delete(keyToEvict);\n    }\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description \u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\n   * @param {boolean} isHit \u662F\u5426\u547D\u4E2D\n   */\n  private updateStats(isHit: boolean): void {\n    if (isHit) {\n      this.stats.hits++;\n    } else {\n      this.stats.misses++;\n    }\n\n    const total = this.stats.hits + this.stats.misses;\n    this.stats.hitRate = total > 0 ? this.stats.hits / total : 0;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf15c665d756a3d326b76358507e0bd31f574453"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gc6bto892 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gc6bto892();
var __decorate =
/* istanbul ignore next */
(cov_gc6bto892().s[0]++,
/* istanbul ignore next */
(cov_gc6bto892().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_gc6bto892().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_gc6bto892().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_gc6bto892().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_gc6bto892().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_gc6bto892().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_gc6bto892().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_gc6bto892().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_gc6bto892().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_gc6bto892().b[3][0]++;
    cov_gc6bto892().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_gc6bto892().b[3][1]++;
    cov_gc6bto892().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_gc6bto892().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_gc6bto892().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_gc6bto892().b[5][0]++;
        cov_gc6bto892().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_gc6bto892().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_gc6bto892().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_gc6bto892().s[9]++;
  return /* istanbul ignore next */(cov_gc6bto892().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_gc6bto892().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_gc6bto892().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_gc6bto892().s[10]++,
/* istanbul ignore next */
(cov_gc6bto892().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_gc6bto892().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_gc6bto892().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_gc6bto892().f[1]++;
  cov_gc6bto892().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_gc6bto892().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_gc6bto892().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_gc6bto892().b[11][0]++;
    cov_gc6bto892().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_gc6bto892().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_gc6bto892().s[13]++,
/* istanbul ignore next */
(cov_gc6bto892().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_gc6bto892().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_gc6bto892().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_gc6bto892().f[2]++;
  cov_gc6bto892().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_gc6bto892().f[3]++;
    cov_gc6bto892().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
var _a;
/* istanbul ignore next */
cov_gc6bto892().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gc6bto892().s[17]++;
exports.MemoryCacheService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_gc6bto892().s[18]++, require("@nestjs/common"));
const cache_interface_1 =
/* istanbul ignore next */
(cov_gc6bto892().s[19]++, require("../interfaces/cache.interface"));
const logging_1 =
/* istanbul ignore next */
(cov_gc6bto892().s[20]++, require("@aiofix/logging"));
/**
 * @class MemoryCacheService
 * @description 内存缓存服务实现
 *
 * 该服务提供高性能的内存缓存功能，支持多种缓存策略：
 * - LRU (Least Recently Used): 最近最少使用策略
 * - LFU (Least Frequently Used): 最少使用频率策略
 * - FIFO (First In First Out): 先进先出策略
 * - TTL (Time To Live): 基于时间过期策略
 *
 * 主要特性：
 * 1. 支持多种缓存策略，可根据业务需求选择
 * 2. 自动过期清理和内存管理
 * 3. 完整的统计信息和健康检查
 * 4. 线程安全的并发访问
 * 5. 可配置的压缩和加密功能
 */
/* istanbul ignore next */
cov_gc6bto892().s[21]++;
let MemoryCacheService = class MemoryCacheService {
  constructor(keyFactory, logger) {
    /* istanbul ignore next */
    cov_gc6bto892().f[4]++;
    cov_gc6bto892().s[22]++;
    this.keyFactory = keyFactory;
    /* istanbul ignore next */
    cov_gc6bto892().s[23]++;
    this.logger = logger;
    /** 内存存储 */
    /* istanbul ignore next */
    cov_gc6bto892().s[24]++;
    this.cache = new Map();
    /** 访问顺序队列（用于LRU策略） */
    /* istanbul ignore next */
    cov_gc6bto892().s[25]++;
    this.accessOrder = [];
    /** 访问频率映射（用于LFU策略） */
    /* istanbul ignore next */
    cov_gc6bto892().s[26]++;
    this.accessFrequency = new Map();
    /** 统计信息 */
    /* istanbul ignore next */
    cov_gc6bto892().s[27]++;
    this.stats = {
      totalEntries: 0,
      hits: 0,
      misses: 0,
      hitRate: 0,
      totalSize: 0,
      averageSize: 0,
      expiredEntries: 0,
      evictedEntries: 0,
      lastReset: Date.now()
    };
    /** 是否已销毁 */
    /* istanbul ignore next */
    cov_gc6bto892().s[28]++;
    this.isDestroyed = false;
    // 设置默认配置
    /* istanbul ignore next */
    cov_gc6bto892().s[29]++;
    this.config = {
      defaultTtl: 300000,
      // 5分钟
      maxSize: 1000,
      defaultStrategy: cache_interface_1.CacheStrategy.LRU,
      cleanupInterval: 60000,
      // 1分钟
      enableCompression: false,
      enableEncryption: false
    };
    // 启动清理定时器
    /* istanbul ignore next */
    cov_gc6bto892().s[30]++;
    this.startCleanupTimer();
    /* istanbul ignore next */
    cov_gc6bto892().s[31]++;
    this.logger.info(`MemoryCacheService initialized with config: ${JSON.stringify(this.config)}`, logging_1.LogContext.CACHE);
  }
  /**
   * @method onModuleDestroy
   * @description 模块销毁时的清理工作
   */
  async onModuleDestroy() {
    /* istanbul ignore next */
    cov_gc6bto892().f[5]++;
    cov_gc6bto892().s[32]++;
    this.isDestroyed = true;
    /* istanbul ignore next */
    cov_gc6bto892().s[33]++;
    if (this.cleanupTimer) {
      /* istanbul ignore next */
      cov_gc6bto892().b[14][0]++;
      cov_gc6bto892().s[34]++;
      clearInterval(this.cleanupTimer);
      /* istanbul ignore next */
      cov_gc6bto892().s[35]++;
      this.cleanupTimer = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[14][1]++;
    }
    cov_gc6bto892().s[36]++;
    this.cache.clear();
    /* istanbul ignore next */
    cov_gc6bto892().s[37]++;
    this.accessOrder.length = 0;
    /* istanbul ignore next */
    cov_gc6bto892().s[38]++;
    this.accessFrequency.clear();
    /* istanbul ignore next */
    cov_gc6bto892().s[39]++;
    this.logger.info('MemoryCacheService destroyed', logging_1.LogContext.CACHE);
  }
  /**
   * @method get
   * @description 获取缓存值
   * @param {CacheKey} key 缓存键
   * @returns {Promise<T | null>} 缓存值或null
   */
  async get(key) {
    /* istanbul ignore next */
    cov_gc6bto892().f[6]++;
    cov_gc6bto892().s[40]++;
    try {
      const keyString =
      /* istanbul ignore next */
      (cov_gc6bto892().s[41]++, this.keyFactory.toString(key));
      const entry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[42]++, this.cache.get(keyString));
      /* istanbul ignore next */
      cov_gc6bto892().s[43]++;
      if (!entry) {
        /* istanbul ignore next */
        cov_gc6bto892().b[15][0]++;
        cov_gc6bto892().s[44]++;
        this.updateStats(false);
        /* istanbul ignore next */
        cov_gc6bto892().s[45]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[15][1]++;
      }
      // 检查是否过期
      cov_gc6bto892().s[46]++;
      if (this.isExpired(entry.value)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[16][0]++;
        cov_gc6bto892().s[47]++;
        this.cache.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[48]++;
        this.removeFromAccessOrder(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[49]++;
        this.accessFrequency.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[50]++;
        this.stats.expiredEntries++;
        /* istanbul ignore next */
        cov_gc6bto892().s[51]++;
        this.updateStats(false);
        /* istanbul ignore next */
        cov_gc6bto892().s[52]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[16][1]++;
      }
      // 更新访问信息
      cov_gc6bto892().s[53]++;
      this.updateAccessInfo(keyString, entry);
      // 更新统计
      /* istanbul ignore next */
      cov_gc6bto892().s[54]++;
      this.updateStats(true);
      /* istanbul ignore next */
      cov_gc6bto892().s[55]++;
      return entry.value.value;
    } catch (error) {
      /* istanbul ignore next */
      cov_gc6bto892().s[56]++;
      this.logger.error(`Error getting cache value: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
      /* istanbul ignore next */
      cov_gc6bto892().s[57]++;
      this.updateStats(false);
      /* istanbul ignore next */
      cov_gc6bto892().s[58]++;
      return null;
    }
  }
  /**
   * @method set
   * @description 设置缓存值
   * @param {CacheKey} key 缓存键
   * @param {T} value 缓存值
   * @param {Partial<CacheOptions>} options 缓存选项
   * @returns {Promise<boolean>} 是否成功
   */
  async set(key, value, options) {
    /* istanbul ignore next */
    cov_gc6bto892().f[7]++;
    cov_gc6bto892().s[59]++;
    try {
      const keyString =
      /* istanbul ignore next */
      (cov_gc6bto892().s[60]++, this.keyFactory.toString(key));
      const strategy =
      /* istanbul ignore next */
      (cov_gc6bto892().s[61]++,
      /* istanbul ignore next */
      (cov_gc6bto892().b[17][0]++, options?.strategy) ??
      /* istanbul ignore next */
      (cov_gc6bto892().b[17][1]++, this.config.defaultStrategy));
      const ttl =
      /* istanbul ignore next */
      (cov_gc6bto892().s[62]++,
      /* istanbul ignore next */
      (cov_gc6bto892().b[18][0]++, options?.ttl) ??
      /* istanbul ignore next */
      (cov_gc6bto892().b[18][1]++, this.config.defaultTtl));
      // 计算值大小
      const valueSize =
      /* istanbul ignore next */
      (cov_gc6bto892().s[63]++, this.calculateSize(value));
      // 创建缓存值
      const cacheValue =
      /* istanbul ignore next */
      (cov_gc6bto892().s[64]++, {
        value,
        createdAt: Date.now(),
        expiresAt: ttl > 0 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[19][0]++, Date.now() + ttl) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[19][1]++, undefined),
        accessCount: 0,
        lastAccessed: Date.now(),
        version: key.version,
        tags: key.tags,
        metadata: {
          strategy,
          compressed: this.config.enableCompression,
          encrypted: this.config.enableEncryption
        }
      });
      // 检查是否需要驱逐旧条目
      /* istanbul ignore next */
      cov_gc6bto892().s[65]++;
      if (this.cache.size >= this.config.maxSize) {
        /* istanbul ignore next */
        cov_gc6bto892().b[20][0]++;
        cov_gc6bto892().s[66]++;
        this.evictEntry(strategy);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[20][1]++;
      }
      // 存储新条目
      const entry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[67]++, {
        value: cacheValue,
        size: valueSize,
        createdAt: Date.now(),
        lastAccessed: Date.now(),
        accessCount: 0,
        accessFrequency: 0
      });
      // 如果键已存在，先更新统计
      const existingEntry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[68]++, this.cache.get(keyString));
      /* istanbul ignore next */
      cov_gc6bto892().s[69]++;
      if (existingEntry) {
        /* istanbul ignore next */
        cov_gc6bto892().b[21][0]++;
        cov_gc6bto892().s[70]++;
        this.stats.totalSize -= existingEntry.size;
        // 不减少 totalEntries，因为我们要替换它
      } else {
        /* istanbul ignore next */
        cov_gc6bto892().b[21][1]++;
        cov_gc6bto892().s[71]++;
        // 只有新键才增加 totalEntries
        this.stats.totalEntries++;
      }
      /* istanbul ignore next */
      cov_gc6bto892().s[72]++;
      this.cache.set(keyString, entry);
      /* istanbul ignore next */
      cov_gc6bto892().s[73]++;
      this.addToAccessOrder(keyString);
      /* istanbul ignore next */
      cov_gc6bto892().s[74]++;
      this.accessFrequency.set(keyString, 0);
      // 更新统计
      /* istanbul ignore next */
      cov_gc6bto892().s[75]++;
      this.stats.totalSize += valueSize;
      /* istanbul ignore next */
      cov_gc6bto892().s[76]++;
      this.stats.averageSize = this.stats.totalEntries > 0 ?
      /* istanbul ignore next */
      (cov_gc6bto892().b[22][0]++, this.stats.totalSize / this.stats.totalEntries) :
      /* istanbul ignore next */
      (cov_gc6bto892().b[22][1]++, 0);
      /* istanbul ignore next */
      cov_gc6bto892().s[77]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_gc6bto892().s[78]++;
      this.logger.error(`Error setting cache value: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
      /* istanbul ignore next */
      cov_gc6bto892().s[79]++;
      return false;
    }
  }
  /**
   * @method delete
   * @description 删除缓存值
   * @param {CacheKey} key 缓存键
   * @returns {Promise<boolean>} 是否成功
   */
  async delete(key) {
    /* istanbul ignore next */
    cov_gc6bto892().f[8]++;
    cov_gc6bto892().s[80]++;
    try {
      const keyString =
      /* istanbul ignore next */
      (cov_gc6bto892().s[81]++, this.keyFactory.toString(key));
      const entry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[82]++, this.cache.get(keyString));
      /* istanbul ignore next */
      cov_gc6bto892().s[83]++;
      if (!entry) {
        /* istanbul ignore next */
        cov_gc6bto892().b[23][0]++;
        cov_gc6bto892().s[84]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[23][1]++;
      }
      // 从缓存中删除
      cov_gc6bto892().s[85]++;
      this.cache.delete(keyString);
      /* istanbul ignore next */
      cov_gc6bto892().s[86]++;
      this.removeFromAccessOrder(keyString);
      /* istanbul ignore next */
      cov_gc6bto892().s[87]++;
      this.accessFrequency.delete(keyString);
      // 更新统计
      /* istanbul ignore next */
      cov_gc6bto892().s[88]++;
      this.stats.totalEntries = this.cache.size;
      /* istanbul ignore next */
      cov_gc6bto892().s[89]++;
      this.stats.totalSize -= entry.size;
      /* istanbul ignore next */
      cov_gc6bto892().s[90]++;
      this.stats.averageSize = this.stats.totalEntries > 0 ?
      /* istanbul ignore next */
      (cov_gc6bto892().b[24][0]++, this.stats.totalSize / this.stats.totalEntries) :
      /* istanbul ignore next */
      (cov_gc6bto892().b[24][1]++, 0);
      /* istanbul ignore next */
      cov_gc6bto892().s[91]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_gc6bto892().s[92]++;
      this.logger.error(`Error deleting cache value: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
      /* istanbul ignore next */
      cov_gc6bto892().s[93]++;
      return false;
    }
  }
  /**
   * @method exists
   * @description 检查缓存键是否存在
   * @param {CacheKey} key 缓存键
   * @returns {Promise<boolean>} 是否存在
   */
  async exists(key) {
    /* istanbul ignore next */
    cov_gc6bto892().f[9]++;
    cov_gc6bto892().s[94]++;
    try {
      const keyString =
      /* istanbul ignore next */
      (cov_gc6bto892().s[95]++, this.keyFactory.toString(key));
      const entry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[96]++, this.cache.get(keyString));
      /* istanbul ignore next */
      cov_gc6bto892().s[97]++;
      if (!entry) {
        /* istanbul ignore next */
        cov_gc6bto892().b[25][0]++;
        cov_gc6bto892().s[98]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[25][1]++;
      }
      // 检查是否过期
      cov_gc6bto892().s[99]++;
      if (this.isExpired(entry.value)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[26][0]++;
        cov_gc6bto892().s[100]++;
        this.cache.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[101]++;
        this.removeFromAccessOrder(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[102]++;
        this.accessFrequency.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[103]++;
        this.stats.expiredEntries++;
        /* istanbul ignore next */
        cov_gc6bto892().s[104]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[26][1]++;
      }
      cov_gc6bto892().s[105]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_gc6bto892().s[106]++;
      this.logger.error(`Error checking cache key existence: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
      /* istanbul ignore next */
      cov_gc6bto892().s[107]++;
      return false;
    }
  }
  /**
   * @method clear
   * @description 清空缓存
   * @param {string} namespace 命名空间（可选）
   * @returns {Promise<boolean>} 是否成功
   */
  async clear(namespace) {
    /* istanbul ignore next */
    cov_gc6bto892().f[10]++;
    cov_gc6bto892().s[108]++;
    try {
      /* istanbul ignore next */
      cov_gc6bto892().s[109]++;
      if (namespace) {
        /* istanbul ignore next */
        cov_gc6bto892().b[27][0]++;
        // 清空指定命名空间
        const keysToDelete =
        /* istanbul ignore next */
        (cov_gc6bto892().s[110]++, []);
        /* istanbul ignore next */
        cov_gc6bto892().s[111]++;
        for (const [keyString] of this.cache.entries()) {
          /* istanbul ignore next */
          cov_gc6bto892().s[112]++;
          try {
            const parsedKey =
            /* istanbul ignore next */
            (cov_gc6bto892().s[113]++, this.keyFactory.parse(keyString));
            /* istanbul ignore next */
            cov_gc6bto892().s[114]++;
            if (parsedKey.namespace === namespace) {
              /* istanbul ignore next */
              cov_gc6bto892().b[28][0]++;
              cov_gc6bto892().s[115]++;
              keysToDelete.push(keyString);
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[28][1]++;
            }
          } catch {
            /* istanbul ignore next */
            cov_gc6bto892().s[116]++;
            // 如果解析失败，跳过这个键
            continue;
          }
        }
        // 如果通过解析没有找到键，尝试直接匹配（因为键格式可能包含版本号）
        /* istanbul ignore next */
        cov_gc6bto892().s[117]++;
        if (keysToDelete.length === 0) {
          /* istanbul ignore next */
          cov_gc6bto892().b[29][0]++;
          cov_gc6bto892().s[118]++;
          for (const [keyString] of this.cache.entries()) {
            /* istanbul ignore next */
            cov_gc6bto892().s[119]++;
            if (
            /* istanbul ignore next */
            (cov_gc6bto892().b[31][0]++, keyString.includes(`:${namespace}:`)) ||
            /* istanbul ignore next */
            (cov_gc6bto892().b[31][1]++, keyString.startsWith(`${namespace}:`))) {
              /* istanbul ignore next */
              cov_gc6bto892().b[30][0]++;
              cov_gc6bto892().s[120]++;
              keysToDelete.push(keyString);
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[30][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[29][1]++;
        }
        // 如果还是没有找到，尝试更宽松的匹配
        cov_gc6bto892().s[121]++;
        if (keysToDelete.length === 0) {
          /* istanbul ignore next */
          cov_gc6bto892().b[32][0]++;
          cov_gc6bto892().s[122]++;
          for (const [keyString] of this.cache.entries()) {
            /* istanbul ignore next */
            cov_gc6bto892().s[123]++;
            if (keyString.includes(namespace)) {
              /* istanbul ignore next */
              cov_gc6bto892().b[33][0]++;
              cov_gc6bto892().s[124]++;
              keysToDelete.push(keyString);
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[33][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[32][1]++;
        }
        // 如果还是没有找到，尝试最宽松的匹配（包含命名空间的任何键）
        cov_gc6bto892().s[125]++;
        if (keysToDelete.length === 0) {
          /* istanbul ignore next */
          cov_gc6bto892().b[34][0]++;
          cov_gc6bto892().s[126]++;
          for (const [keyString] of this.cache.entries()) {
            const parts =
            /* istanbul ignore next */
            (cov_gc6bto892().s[127]++, keyString.split(':'));
            /* istanbul ignore next */
            cov_gc6bto892().s[128]++;
            if (parts.includes(namespace)) {
              /* istanbul ignore next */
              cov_gc6bto892().b[35][0]++;
              cov_gc6bto892().s[129]++;
              keysToDelete.push(keyString);
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[35][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[34][1]++;
        }
        cov_gc6bto892().s[130]++;
        for (const keyString of keysToDelete) {
          const entry =
          /* istanbul ignore next */
          (cov_gc6bto892().s[131]++, this.cache.get(keyString));
          /* istanbul ignore next */
          cov_gc6bto892().s[132]++;
          if (entry) {
            /* istanbul ignore next */
            cov_gc6bto892().b[36][0]++;
            cov_gc6bto892().s[133]++;
            this.cache.delete(keyString);
            /* istanbul ignore next */
            cov_gc6bto892().s[134]++;
            this.removeFromAccessOrder(keyString);
            /* istanbul ignore next */
            cov_gc6bto892().s[135]++;
            this.accessFrequency.delete(keyString);
            /* istanbul ignore next */
            cov_gc6bto892().s[136]++;
            this.stats.totalSize -= entry.size;
          } else
          /* istanbul ignore next */
          {
            cov_gc6bto892().b[36][1]++;
          }
        }
        /* istanbul ignore next */
        cov_gc6bto892().s[137]++;
        this.stats.totalEntries = this.cache.size;
        /* istanbul ignore next */
        cov_gc6bto892().s[138]++;
        this.stats.averageSize = this.stats.totalEntries > 0 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[37][0]++, this.stats.totalSize / this.stats.totalEntries) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[37][1]++, 0);
      } else {
        /* istanbul ignore next */
        cov_gc6bto892().b[27][1]++;
        cov_gc6bto892().s[139]++;
        // 清空所有缓存
        this.cache.clear();
        /* istanbul ignore next */
        cov_gc6bto892().s[140]++;
        this.accessOrder.length = 0;
        /* istanbul ignore next */
        cov_gc6bto892().s[141]++;
        this.accessFrequency.clear();
        /* istanbul ignore next */
        cov_gc6bto892().s[142]++;
        this.stats.totalEntries = 0;
        /* istanbul ignore next */
        cov_gc6bto892().s[143]++;
        this.stats.totalSize = 0;
        /* istanbul ignore next */
        cov_gc6bto892().s[144]++;
        this.stats.averageSize = 0;
      }
      /* istanbul ignore next */
      cov_gc6bto892().s[145]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_gc6bto892().s[146]++;
      this.logger.error(`Error clearing cache: ${error.message}`, logging_1.LogContext.CACHE, undefined, error);
      /* istanbul ignore next */
      cov_gc6bto892().s[147]++;
      return false;
    }
  }
  /**
   * @method getStats
   * @description 获取缓存统计
   * @returns {Promise<CacheStats>} 缓存统计
   */
  async getStats() {
    /* istanbul ignore next */
    cov_gc6bto892().f[11]++;
    cov_gc6bto892().s[148]++;
    return {
      ...this.stats
    };
  }
  /**
   * @method getHealth
   * @description 获取缓存健康状态
   * @returns {Promise<CacheHealth>} 缓存健康状态
   */
  async getHealth() {
    /* istanbul ignore next */
    cov_gc6bto892().f[12]++;
    const startTime =
    /* istanbul ignore next */
    (cov_gc6bto892().s[149]++, Date.now());
    /* istanbul ignore next */
    cov_gc6bto892().s[150]++;
    try {
      // 简单的健康检查：尝试设置和获取一个测试值
      const testKey =
      /* istanbul ignore next */
      (cov_gc6bto892().s[151]++, this.keyFactory.create('health-check'));
      const testValue =
      /* istanbul ignore next */
      (cov_gc6bto892().s[152]++, {
        timestamp: Date.now()
      });
      /* istanbul ignore next */
      cov_gc6bto892().s[153]++;
      await this.set(testKey, testValue, {
        ttl: 1000
      });
      const retrieved =
      /* istanbul ignore next */
      (cov_gc6bto892().s[154]++, await this.get(testKey));
      const responseTime =
      /* istanbul ignore next */
      (cov_gc6bto892().s[155]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_gc6bto892().s[156]++;
      return {
        healthy: retrieved !== null,
        connected: true,
        responseTime,
        lastCheck: Date.now()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_gc6bto892().s[157]++;
      this.logger.error(`Health check failed: ${error.message}`, logging_1.LogContext.CACHE);
      /* istanbul ignore next */
      cov_gc6bto892().s[158]++;
      return {
        healthy: false,
        connected: false,
        responseTime: Date.now() - startTime,
        error: error.message,
        lastCheck: Date.now()
      };
    }
  }
  /**
   * @method resetStats
   * @description 重置缓存统计
   * @returns {Promise<void>}
   */
  async resetStats() {
    /* istanbul ignore next */
    cov_gc6bto892().f[13]++;
    cov_gc6bto892().s[159]++;
    this.stats = {
      totalEntries: this.cache.size,
      hits: 0,
      misses: 0,
      hitRate: 0,
      totalSize: this.stats.totalSize,
      averageSize: this.stats.averageSize,
      expiredEntries: 0,
      evictedEntries: 0,
      lastReset: Date.now()
    };
  }
  /**
   * @private
   * @method startCleanupTimer
   * @description 启动清理定时器
   */
  startCleanupTimer() {
    /* istanbul ignore next */
    cov_gc6bto892().f[14]++;
    cov_gc6bto892().s[160]++;
    this.cleanupTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_gc6bto892().f[15]++;
      cov_gc6bto892().s[161]++;
      this.cleanupExpiredEntries();
    }, this.config.cleanupInterval);
  }
  /**
   * @private
   * @method cleanupExpiredEntries
   * @description 清理过期条目
   */
  cleanupExpiredEntries() {
    /* istanbul ignore next */
    cov_gc6bto892().f[16]++;
    cov_gc6bto892().s[162]++;
    if (this.isDestroyed) {
      /* istanbul ignore next */
      cov_gc6bto892().b[38][0]++;
      cov_gc6bto892().s[163]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[38][1]++;
    }
    const keysToDelete =
    /* istanbul ignore next */
    (cov_gc6bto892().s[164]++, []);
    /* istanbul ignore next */
    cov_gc6bto892().s[165]++;
    for (const [keyString, entry] of this.cache.entries()) {
      /* istanbul ignore next */
      cov_gc6bto892().s[166]++;
      if (this.isExpired(entry.value)) {
        /* istanbul ignore next */
        cov_gc6bto892().b[39][0]++;
        cov_gc6bto892().s[167]++;
        keysToDelete.push(keyString);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[39][1]++;
      }
    }
    /* istanbul ignore next */
    cov_gc6bto892().s[168]++;
    for (const keyString of keysToDelete) {
      const entry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[169]++, this.cache.get(keyString));
      /* istanbul ignore next */
      cov_gc6bto892().s[170]++;
      if (entry) {
        /* istanbul ignore next */
        cov_gc6bto892().b[40][0]++;
        cov_gc6bto892().s[171]++;
        this.cache.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[172]++;
        this.removeFromAccessOrder(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[173]++;
        this.accessFrequency.delete(keyString);
        /* istanbul ignore next */
        cov_gc6bto892().s[174]++;
        this.stats.totalSize -= entry.size;
        /* istanbul ignore next */
        cov_gc6bto892().s[175]++;
        this.stats.expiredEntries++;
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[40][1]++;
      }
    }
    /* istanbul ignore next */
    cov_gc6bto892().s[176]++;
    this.stats.totalEntries = this.cache.size;
    /* istanbul ignore next */
    cov_gc6bto892().s[177]++;
    this.stats.averageSize = this.stats.totalEntries > 0 ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[41][0]++, this.stats.totalSize / this.stats.totalEntries) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[41][1]++, 0);
    /* istanbul ignore next */
    cov_gc6bto892().s[178]++;
    if (keysToDelete.length > 0) {
      /* istanbul ignore next */
      cov_gc6bto892().b[42][0]++;
      cov_gc6bto892().s[179]++;
      this.logger.debug(`Cleaned up ${keysToDelete.length} expired entries`, logging_1.LogContext.CACHE);
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[42][1]++;
    }
  }
  /**
   * @private
   * @method isExpired
   * @description 检查缓存值是否过期
   * @param {CacheValue} value 缓存值
   * @returns {boolean} 是否过期
   */
  isExpired(value) {
    /* istanbul ignore next */
    cov_gc6bto892().f[17]++;
    cov_gc6bto892().s[180]++;
    return /* istanbul ignore next */(cov_gc6bto892().b[43][0]++, value.expiresAt !== undefined) &&
    /* istanbul ignore next */
    (cov_gc6bto892().b[43][1]++, Date.now() > value.expiresAt);
  }
  /**
   * @private
   * @method calculateSize
   * @description 计算值大小
   * @param {any} value 值
   * @returns {number} 大小（字节）
   */
  calculateSize(_value) {
    /* istanbul ignore next */
    cov_gc6bto892().f[18]++;
    cov_gc6bto892().s[181]++;
    try {
      /* istanbul ignore next */
      cov_gc6bto892().s[182]++;
      return Buffer.byteLength(JSON.stringify(_value), 'utf8');
    } catch {
      /* istanbul ignore next */
      cov_gc6bto892().s[183]++;
      return 0;
    }
  }
  /**
   * @private
   * @method updateAccessInfo
   * @description 更新访问信息
   * @param {string} keyString 键字符串
   * @param {MemoryCacheEntry} entry 缓存条目
   */
  updateAccessInfo(keyString, entry) {
    /* istanbul ignore next */
    cov_gc6bto892().f[19]++;
    const now =
    /* istanbul ignore next */
    (cov_gc6bto892().s[184]++, Date.now());
    // 更新访问次数和时间
    /* istanbul ignore next */
    cov_gc6bto892().s[185]++;
    entry.value.accessCount++;
    /* istanbul ignore next */
    cov_gc6bto892().s[186]++;
    entry.value.lastAccessed = now;
    /* istanbul ignore next */
    cov_gc6bto892().s[187]++;
    entry.lastAccessed = now;
    /* istanbul ignore next */
    cov_gc6bto892().s[188]++;
    entry.accessCount++;
    // 更新访问频率（用于LFU策略）
    const currentFreq =
    /* istanbul ignore next */
    (cov_gc6bto892().s[189]++,
    /* istanbul ignore next */
    (cov_gc6bto892().b[44][0]++, this.accessFrequency.get(keyString)) ??
    /* istanbul ignore next */
    (cov_gc6bto892().b[44][1]++, 0));
    const newFreq =
    /* istanbul ignore next */
    (cov_gc6bto892().s[190]++, currentFreq + 1);
    /* istanbul ignore next */
    cov_gc6bto892().s[191]++;
    this.accessFrequency.set(keyString, newFreq);
    /* istanbul ignore next */
    cov_gc6bto892().s[192]++;
    entry.accessFrequency = newFreq;
    // 更新访问顺序（用于LRU策略）
    /* istanbul ignore next */
    cov_gc6bto892().s[193]++;
    this.removeFromAccessOrder(keyString);
    /* istanbul ignore next */
    cov_gc6bto892().s[194]++;
    this.accessOrder.push(keyString);
  }
  /**
   * @private
   * @method addToAccessOrder
   * @description 添加到访问顺序
   * @param {string} keyString 键字符串
   */
  addToAccessOrder(keyString) {
    /* istanbul ignore next */
    cov_gc6bto892().f[20]++;
    cov_gc6bto892().s[195]++;
    this.accessOrder.push(keyString);
  }
  /**
   * @private
   * @method removeFromAccessOrder
   * @description 从访问顺序中移除
   * @param {string} keyString 键字符串
   */
  removeFromAccessOrder(keyString) {
    /* istanbul ignore next */
    cov_gc6bto892().f[21]++;
    const index =
    /* istanbul ignore next */
    (cov_gc6bto892().s[196]++, this.accessOrder.indexOf(keyString));
    /* istanbul ignore next */
    cov_gc6bto892().s[197]++;
    if (index > -1) {
      /* istanbul ignore next */
      cov_gc6bto892().b[45][0]++;
      cov_gc6bto892().s[198]++;
      this.accessOrder.splice(index, 1);
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[45][1]++;
    }
  }
  /**
   * @private
   * @method evictEntry
   * @description 驱逐缓存条目
   * @param {CacheStrategy} strategy 缓存策略
   */
  evictEntry(strategy) {
    /* istanbul ignore next */
    cov_gc6bto892().f[22]++;
    let keyToEvict;
    /* istanbul ignore next */
    cov_gc6bto892().s[199]++;
    switch (strategy) {
      case cache_interface_1.CacheStrategy.LRU:
        /* istanbul ignore next */
        cov_gc6bto892().b[46][0]++;
        cov_gc6bto892().s[200]++;
        // 驱逐最近最少使用的条目（访问顺序中的第一个）
        if (this.accessOrder.length > 0) {
          /* istanbul ignore next */
          cov_gc6bto892().b[47][0]++;
          cov_gc6bto892().s[201]++;
          keyToEvict = this.accessOrder[0];
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[47][1]++;
        }
        cov_gc6bto892().s[202]++;
        break;
      case cache_interface_1.CacheStrategy.LFU:
        /* istanbul ignore next */
        cov_gc6bto892().b[46][1]++;
        {
          // 驱逐最少使用频率的条目
          let minFreq =
          /* istanbul ignore next */
          (cov_gc6bto892().s[203]++, Infinity);
          /* istanbul ignore next */
          cov_gc6bto892().s[204]++;
          for (const [key, freq] of this.accessFrequency.entries()) {
            /* istanbul ignore next */
            cov_gc6bto892().s[205]++;
            if (freq < minFreq) {
              /* istanbul ignore next */
              cov_gc6bto892().b[48][0]++;
              cov_gc6bto892().s[206]++;
              minFreq = freq;
              /* istanbul ignore next */
              cov_gc6bto892().s[207]++;
              keyToEvict = key;
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[48][1]++;
            }
          }
          /* istanbul ignore next */
          cov_gc6bto892().s[208]++;
          break;
        }
      case cache_interface_1.CacheStrategy.FIFO:
        /* istanbul ignore next */
        cov_gc6bto892().b[46][2]++;
        {
          // 驱逐最早创建的条目
          let oldestTime =
          /* istanbul ignore next */
          (cov_gc6bto892().s[209]++, Infinity);
          /* istanbul ignore next */
          cov_gc6bto892().s[210]++;
          for (const [key, entry] of this.cache.entries()) {
            /* istanbul ignore next */
            cov_gc6bto892().s[211]++;
            if (entry.createdAt < oldestTime) {
              /* istanbul ignore next */
              cov_gc6bto892().b[49][0]++;
              cov_gc6bto892().s[212]++;
              oldestTime = entry.createdAt;
              /* istanbul ignore next */
              cov_gc6bto892().s[213]++;
              keyToEvict = key;
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[49][1]++;
            }
          }
          /* istanbul ignore next */
          cov_gc6bto892().s[214]++;
          break;
        }
      case cache_interface_1.CacheStrategy.TTL:
        /* istanbul ignore next */
        cov_gc6bto892().b[46][3]++;
        {
          // 驱逐最早过期的条目
          let earliestExpiry =
          /* istanbul ignore next */
          (cov_gc6bto892().s[215]++, Infinity);
          /* istanbul ignore next */
          cov_gc6bto892().s[216]++;
          for (const [key, entry] of this.cache.entries()) {
            /* istanbul ignore next */
            cov_gc6bto892().s[217]++;
            if (
            /* istanbul ignore next */
            (cov_gc6bto892().b[51][0]++, entry.value.expiresAt) &&
            /* istanbul ignore next */
            (cov_gc6bto892().b[51][1]++, entry.value.expiresAt < earliestExpiry)) {
              /* istanbul ignore next */
              cov_gc6bto892().b[50][0]++;
              cov_gc6bto892().s[218]++;
              earliestExpiry = entry.value.expiresAt;
              /* istanbul ignore next */
              cov_gc6bto892().s[219]++;
              keyToEvict = key;
            } else
            /* istanbul ignore next */
            {
              cov_gc6bto892().b[50][1]++;
            }
          }
          /* istanbul ignore next */
          cov_gc6bto892().s[220]++;
          break;
        }
    }
    /* istanbul ignore next */
    cov_gc6bto892().s[221]++;
    if (keyToEvict) {
      /* istanbul ignore next */
      cov_gc6bto892().b[52][0]++;
      const entry =
      /* istanbul ignore next */
      (cov_gc6bto892().s[222]++, this.cache.get(keyToEvict));
      /* istanbul ignore next */
      cov_gc6bto892().s[223]++;
      if (entry) {
        /* istanbul ignore next */
        cov_gc6bto892().b[53][0]++;
        cov_gc6bto892().s[224]++;
        this.cache.delete(keyToEvict);
        /* istanbul ignore next */
        cov_gc6bto892().s[225]++;
        this.removeFromAccessOrder(keyToEvict);
        /* istanbul ignore next */
        cov_gc6bto892().s[226]++;
        this.accessFrequency.delete(keyToEvict);
        /* istanbul ignore next */
        cov_gc6bto892().s[227]++;
        this.stats.totalSize -= entry.size;
        /* istanbul ignore next */
        cov_gc6bto892().s[228]++;
        this.stats.evictedEntries++;
        /* istanbul ignore next */
        cov_gc6bto892().s[229]++;
        this.stats.totalEntries = this.cache.size;
        /* istanbul ignore next */
        cov_gc6bto892().s[230]++;
        this.stats.averageSize = this.stats.totalEntries > 0 ?
        /* istanbul ignore next */
        (cov_gc6bto892().b[54][0]++, this.stats.totalSize / this.stats.totalEntries) :
        /* istanbul ignore next */
        (cov_gc6bto892().b[54][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[53][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_gc6bto892().b[52][1]++;
      cov_gc6bto892().s[231]++;
      // 如果没有找到要驱逐的键，使用默认策略（LRU）
      if (this.accessOrder.length > 0) {
        /* istanbul ignore next */
        cov_gc6bto892().b[55][0]++;
        cov_gc6bto892().s[232]++;
        keyToEvict = this.accessOrder[0];
        const entry =
        /* istanbul ignore next */
        (cov_gc6bto892().s[233]++, this.cache.get(keyToEvict));
        /* istanbul ignore next */
        cov_gc6bto892().s[234]++;
        if (entry) {
          /* istanbul ignore next */
          cov_gc6bto892().b[56][0]++;
          cov_gc6bto892().s[235]++;
          this.cache.delete(keyToEvict);
          /* istanbul ignore next */
          cov_gc6bto892().s[236]++;
          this.removeFromAccessOrder(keyToEvict);
          /* istanbul ignore next */
          cov_gc6bto892().s[237]++;
          this.accessFrequency.delete(keyToEvict);
          /* istanbul ignore next */
          cov_gc6bto892().s[238]++;
          this.stats.totalSize -= entry.size;
          /* istanbul ignore next */
          cov_gc6bto892().s[239]++;
          this.stats.evictedEntries++;
          /* istanbul ignore next */
          cov_gc6bto892().s[240]++;
          this.stats.totalEntries = this.cache.size;
          /* istanbul ignore next */
          cov_gc6bto892().s[241]++;
          this.stats.averageSize = this.stats.totalEntries > 0 ?
          /* istanbul ignore next */
          (cov_gc6bto892().b[57][0]++, this.stats.totalSize / this.stats.totalEntries) :
          /* istanbul ignore next */
          (cov_gc6bto892().b[57][1]++, 0);
        } else
        /* istanbul ignore next */
        {
          cov_gc6bto892().b[56][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_gc6bto892().b[55][1]++;
      }
    }
    // 确保驱逐后访问顺序和频率映射的一致性
    /* istanbul ignore next */
    cov_gc6bto892().s[242]++;
    if (keyToEvict) {
      /* istanbul ignore next */
      cov_gc6bto892().b[58][0]++;
      cov_gc6bto892().s[243]++;
      this.removeFromAccessOrder(keyToEvict);
      /* istanbul ignore next */
      cov_gc6bto892().s[244]++;
      this.accessFrequency.delete(keyToEvict);
    } else
    /* istanbul ignore next */
    {
      cov_gc6bto892().b[58][1]++;
    }
  }
  /**
   * @private
   * @method updateStats
   * @description 更新统计信息
   * @param {boolean} isHit 是否命中
   */
  updateStats(isHit) {
    /* istanbul ignore next */
    cov_gc6bto892().f[23]++;
    cov_gc6bto892().s[245]++;
    if (isHit) {
      /* istanbul ignore next */
      cov_gc6bto892().b[59][0]++;
      cov_gc6bto892().s[246]++;
      this.stats.hits++;
    } else {
      /* istanbul ignore next */
      cov_gc6bto892().b[59][1]++;
      cov_gc6bto892().s[247]++;
      this.stats.misses++;
    }
    const total =
    /* istanbul ignore next */
    (cov_gc6bto892().s[248]++, this.stats.hits + this.stats.misses);
    /* istanbul ignore next */
    cov_gc6bto892().s[249]++;
    this.stats.hitRate = total > 0 ?
    /* istanbul ignore next */
    (cov_gc6bto892().b[60][0]++, this.stats.hits / total) :
    /* istanbul ignore next */
    (cov_gc6bto892().b[60][1]++, 0);
  }
};
/* istanbul ignore next */
cov_gc6bto892().s[250]++;
exports.MemoryCacheService = MemoryCacheService;
/* istanbul ignore next */
cov_gc6bto892().s[251]++;
exports.MemoryCacheService = MemoryCacheService = __decorate([(0, common_1.Injectable)(), __param(0, (0, common_1.Inject)('MEMORY_CACHE_CONFIG')), __param(0, (0, common_1.Inject)('ICacheKeyFactory')), __param(1, (0, common_1.Inject)(logging_1.PinoLoggerService)), __metadata("design:paramtypes", [Object, typeof (_a =
/* istanbul ignore next */
(cov_gc6bto892().b[62][0]++, typeof logging_1.PinoLoggerService !== "undefined") &&
/* istanbul ignore next */
(cov_gc6bto892().b[62][1]++, logging_1.PinoLoggerService)) === "function" ?
/* istanbul ignore next */
(cov_gc6bto892().b[61][0]++, _a) :
/* istanbul ignore next */
(cov_gc6bto892().b[61][1]++, Object)])], MemoryCacheService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,