{"version":3,"names":["core_1","cov_pmv4oo1p2","s","require","uuid_1","UserId","ValueObject","constructor","value","f","validate","b","trim","length","InvalidUserIdError","uuidRegex","test","equals","other","toLowerCase","toString","generate","v4","fromString","isValid","exports","Error","message","name"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/shared/src/identifiers/user-id.vo.ts"],"sourcesContent":["import { ValueObject } from '@aiofix/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * @class UserId\n * @description\n * 用户ID值对象，封装用户唯一标识符的不变性约束、相等性判断和业务概念。\n *\n * 不变性约束：\n * 1. 用户ID一旦创建不可变更\n * 2. 用户ID格式必须符合UUID v4标准\n * 3. 用户ID不能为空或无效值\n * 4. 用户ID必须全局唯一\n *\n * 相等性判断：\n * 1. 基于用户ID的标准化值进行相等性比较\n * 2. 忽略大小写差异\n * 3. 支持哈希码计算用于集合操作\n *\n * 业务概念封装：\n * 1. 封装用户ID验证逻辑\n * 2. 提供用户ID生成方法\n * 3. 隐藏用户ID格式细节\n *\n * @property {string} value 标准化的用户ID值\n *\n * @example\n * ```typescript\n * const userId1 = UserId.generate();\n * const userId2 = UserId.fromString('123e4567-e89b-12d3-a456-426614174000');\n * console.log(userId1.equals(userId2)); // false\n * ```\n * @since 1.0.0\n */\nexport class UserId extends ValueObject<string> {\n  constructor(value: string) {\n    super(value);\n    this.validate();\n  }\n\n  /**\n   * @method validate\n   * @description 验证用户ID的有效性\n   * @returns {void}\n   * @throws {InvalidUserIdError} 当用户ID无效时抛出\n   * @private\n   */\n  private validate(): void {\n    if (!this.value || this.value.trim().length === 0) {\n      throw new InvalidUserIdError('用户ID不能为空');\n    }\n\n    // UUID v4格式验证\n    const uuidRegex =\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    if (!uuidRegex.test(this.value)) {\n      throw new InvalidUserIdError(`无效的UUID格式: ${this.value}`);\n    }\n  }\n\n  /**\n   * @method equals\n   * @description 比较两个用户ID是否相等\n   * @param {UserId} other 另一个用户ID对象\n   * @returns {boolean} 是否相等\n   */\n  equals(other: UserId): boolean {\n    if (!(other instanceof UserId)) {\n      return false;\n    }\n    return this.value.toLowerCase() === other.value.toLowerCase();\n  }\n\n  /**\n   * @method toString\n   * @description 返回用户ID的字符串表示\n   * @returns {string} 用户ID字符串\n   */\n  toString(): string {\n    return this.value;\n  }\n\n  /**\n   * @method generate\n   * @description 生成新的用户ID\n   * @returns {UserId} 新的用户ID实例\n   * @static\n   */\n  static generate(): UserId {\n    return new UserId(uuidv4());\n  }\n\n  /**\n   * @method fromString\n   * @description 从字符串创建用户ID\n   * @param {string} value 用户ID字符串\n   * @returns {UserId} 用户ID实例\n   * @static\n   */\n  static fromString(value: string): UserId {\n    return new UserId(value);\n  }\n\n  /**\n   * @method isValid\n   * @description 检查字符串是否为有效的用户ID格式\n   * @param {string} value 要检查的字符串\n   * @returns {boolean} 是否为有效的用户ID格式\n   * @static\n   */\n  static isValid(value: string): boolean {\n    try {\n      new UserId(value);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\n/**\n * @class InvalidUserIdError\n * @description\n * 无效用户ID异常，当用户ID不符合业务规则时抛出。\n *\n * 业务规则：\n * 1. 当用户ID格式无效时抛出\n * 2. 当用户ID为空时抛出\n * 3. 提供清晰的错误信息\n *\n * @example\n * ```typescript\n * try {\n *   new UserId('invalid-id');\n * } catch (error) {\n *   console.log(error instanceof InvalidUserIdError); // true\n * }\n * ```\n * @since 1.0.0\n */\nexport class InvalidUserIdError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidUserIdError';\n  }\n}\n"],"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","ignoreList":[]}