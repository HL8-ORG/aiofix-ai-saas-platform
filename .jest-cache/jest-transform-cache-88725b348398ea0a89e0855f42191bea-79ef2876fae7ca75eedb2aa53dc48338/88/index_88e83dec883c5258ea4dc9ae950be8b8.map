{"version":3,"names":["cov_1low974kr1","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","constants_1","require","BaseException","Error","constructor","message","code","statusCode","details","timestamp","Date","captureStackTrace","toJSON","toISOString","exports","DomainException","ERROR_CODES","VALIDATION_ERROR","ValidationException","errors","NotFoundException","resource","id","NOT_FOUND","UnauthorizedException","UNAUTHORIZED","ForbiddenException","FORBIDDEN","ConflictException","CONFLICT","InternalServerErrorException","INTERNAL_ERROR","BusinessException","ConcurrencyException","DataIsolationException","CrossTenantAccessException","tenantId","requestedTenantId"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/common/src/exceptions/index.ts"],"sourcesContent":["/**\n * 异常定义\n *\n * 定义系统中使用的各种异常类，提供统一的错误处理机制。\n * 所有异常都继承自基础异常类，确保异常处理的一致性。\n *\n * @fileoverview 系统异常定义\n * @author AI开发团队\n * @since 1.0.0\n */\n\nimport { ERROR_CODES } from '../constants';\n\n/**\n * 基础异常类\n *\n * 所有系统异常都应该继承此基类，提供统一的异常结构和行为。\n *\n * @abstract\n * @class BaseException\n * @extends {Error}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport abstract class BaseException extends Error {\n  /**\n   * 错误代码\n   * 用于错误分类和国际化\n   */\n  public readonly code: string;\n\n  /**\n   * HTTP状态码\n   * 用于API响应\n   */\n  public readonly statusCode: number;\n\n  /**\n   * 错误详情\n   * 包含错误的详细信息\n   */\n  public readonly details?: any;\n\n  /**\n   * 错误发生时间\n   */\n  public readonly timestamp: Date;\n\n  /**\n   * 构造函数\n   *\n   * @param {string} message - 错误消息\n   * @param {string} code - 错误代码\n   * @param {number} statusCode - HTTP状态码\n   * @param {any} [details] - 错误详情\n   */\n  constructor(\n    message: string,\n    code: string,\n    statusCode: number,\n    details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.statusCode = statusCode;\n    this.details = details;\n    this.timestamp = new Date();\n\n    // 确保堆栈跟踪正确\n    if ((Error as any).captureStackTrace) {\n      (Error as any).captureStackTrace(this, this.constructor);\n    }\n  }\n\n  /**\n   * 将异常转换为JSON格式\n   *\n   * @returns {object} 异常的JSON表示\n   */\n  toJSON(): object {\n    return {\n      name: this.name,\n      message: this.message,\n      code: this.code,\n      statusCode: this.statusCode,\n      details: this.details,\n      timestamp: this.timestamp.toISOString(),\n    };\n  }\n}\n\n/**\n * 领域异常\n *\n * 表示业务领域中的错误，通常由业务规则违反引起。\n *\n * @class DomainException\n * @extends {BaseException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class DomainException extends BaseException {\n  constructor(\n    message: string,\n    code: string = ERROR_CODES.VALIDATION_ERROR,\n    details?: any,\n  ) {\n    super(message, code, 400, details);\n  }\n}\n\n/**\n * 验证异常\n *\n * 表示数据验证失败的错误。\n *\n * @class ValidationException\n * @extends {DomainException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class ValidationException extends DomainException {\n  /**\n   * 验证错误列表\n   */\n  public readonly errors: any[];\n\n  constructor(message: string, errors: any[] = []) {\n    super(message, ERROR_CODES.VALIDATION_ERROR, { errors });\n    this.errors = errors;\n  }\n}\n\n/**\n * 未找到异常\n *\n * 表示请求的资源不存在。\n *\n * @class NotFoundException\n * @extends {BaseException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class NotFoundException extends BaseException {\n  constructor(resource: string, id: string) {\n    super(`${resource} with id ${id} not found`, ERROR_CODES.NOT_FOUND, 404, {\n      resource,\n      id,\n    });\n  }\n}\n\n/**\n * 未授权异常\n *\n * 表示用户未通过身份验证。\n *\n * @class UnauthorizedException\n * @extends {BaseException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class UnauthorizedException extends BaseException {\n  constructor(message: string = 'Unauthorized') {\n    super(message, ERROR_CODES.UNAUTHORIZED, 401);\n  }\n}\n\n/**\n * 禁止访问异常\n *\n * 表示用户没有权限访问资源。\n *\n * @class ForbiddenException\n * @extends {BaseException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class ForbiddenException extends BaseException {\n  constructor(message: string = 'Forbidden') {\n    super(message, ERROR_CODES.FORBIDDEN, 403);\n  }\n}\n\n/**\n * 冲突异常\n *\n * 表示请求与当前资源状态冲突。\n *\n * @class ConflictException\n * @extends {BaseException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class ConflictException extends BaseException {\n  constructor(message: string, details?: any) {\n    super(message, ERROR_CODES.CONFLICT, 409, details);\n  }\n}\n\n/**\n * 内部服务器错误异常\n *\n * 表示服务器内部错误。\n *\n * @class InternalServerErrorException\n * @extends {BaseException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class InternalServerErrorException extends BaseException {\n  constructor(message: string = 'Internal server error', details?: any) {\n    super(message, ERROR_CODES.INTERNAL_ERROR, 500, details);\n  }\n}\n\n/**\n * 业务异常\n *\n * 表示业务逻辑错误。\n *\n * @class BusinessException\n * @extends {DomainException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class BusinessException extends DomainException {\n  constructor(\n    message: string,\n    code: string = ERROR_CODES.VALIDATION_ERROR,\n    details?: any,\n  ) {\n    super(message, code, details);\n  }\n}\n\n/**\n * 并发异常\n *\n * 表示并发操作冲突。\n *\n * @class ConcurrencyException\n * @extends {ConflictException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class ConcurrencyException extends ConflictException {\n  constructor(message: string = 'Concurrency conflict', details?: any) {\n    super(message, details);\n  }\n}\n\n/**\n * 数据隔离异常\n *\n * 表示数据隔离违规。\n *\n * @class DataIsolationException\n * @extends {ForbiddenException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class DataIsolationException extends ForbiddenException {\n  constructor(message: string = 'Data isolation violation', details?: any) {\n    super(message);\n    (this as any).details = details;\n  }\n}\n\n/**\n * 跨租户访问异常\n *\n * 表示跨租户数据访问违规。\n *\n * @class CrossTenantAccessException\n * @extends {DataIsolationException}\n * @author AI开发团队\n * @since 1.0.0\n */\nexport class CrossTenantAccessException extends DataIsolationException {\n  constructor(tenantId: string, requestedTenantId: string) {\n    super(\n      `Cross-tenant access violation: cannot access tenant ${requestedTenantId} from tenant ${tenantId}`,\n      { tenantId, requestedTenantId },\n    );\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}