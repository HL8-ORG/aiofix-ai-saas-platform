{"version":3,"names":["common_1","cov_179xblmwcd","s","require","logging_interface_1","PinoLoggerService","f","Injectable","constructor","eventEmitter","configService","loggerFactory","cls","logger","stats","totalLogs","logsByLevel","fatal","error","warn","info","debug","trace","logsByContext","LogContext","HTTP_REQUEST","DATABASE","BUSINESS","AUTH","CONFIG","CACHE","EVENT","SYSTEM","EXTERNAL","PERFORMANCE","totalLogSize","initializeStats","initializeLogger","message","context","metadata","log","performance","operation","duration","performanceMetadata","type","b","business","security","child","childLogger","createChildLogger","childService","setLevel","level","getLevel","updateConfig","config","getConfig","flush","close","onModuleDestroy","getStats","averageLogSize","lastLogTime","resetStats","createLogger","requestId","get","tenantId","userId","logData","timestamp","Date","toISOString","stack","stackTrace","undefined","code","name","updateStats","length","emit","logSize","__esDecorate","_classDescriptor","value","_classThis","_classDecorators","kind","_metadata","_classExtraInitializers","__runInitializers","exports"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/logging/src/services/pino-logger.service.ts"],"sourcesContent":["import { Injectable, OnModuleDestroy } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { ClsService } from 'nestjs-cls';\nimport pino from 'pino';\nimport {\n  ILoggerService,\n  LogContext,\n  LogConfig,\n  LogMetadata,\n} from '../interfaces/logging.interface';\nimport {\n  PinoLoggerConfigService,\n  LogLevel,\n} from './pino-logger-config.service';\nimport { PinoLoggerFactory } from '../factories/pino-logger.factory';\n\n/**\n * @class PinoLoggerService\n * @description\n * 基于Pino的日志服务实现类，提供高性能的结构化日志功能。\n *\n * 主要功能包括：\n * 1. 支持多种日志级别（trace, debug, info, warn, error, fatal）\n * 2. 结构化日志输出（JSON格式）\n * 3. 日志上下文和元数据支持\n * 4. 性能监控和错误追踪\n * 5. 日志配置管理和动态更新\n * 6. 子日志器创建和管理\n * 7. 日志统计和监控\n *\n * @implements {ILoggerService}\n * @implements {OnModuleDestroy}\n */\n@Injectable()\nexport class PinoLoggerService implements ILoggerService, OnModuleDestroy {\n  private logger: pino.Logger = {} as pino.Logger;\n  private stats: {\n    totalLogs: number;\n    logsByLevel: Record<LogLevel, number>;\n    logsByContext: Record<LogContext, number>;\n    totalLogSize: number;\n    lastLogTime?: Date;\n  } = {\n    totalLogs: 0,\n    logsByLevel: {\n      fatal: 0,\n      error: 0,\n      warn: 0,\n      info: 0,\n      debug: 0,\n      trace: 0,\n    },\n    logsByContext: {\n      [LogContext.HTTP_REQUEST]: 0,\n      [LogContext.DATABASE]: 0,\n      [LogContext.BUSINESS]: 0,\n      [LogContext.AUTH]: 0,\n      [LogContext.CONFIG]: 0,\n      [LogContext.CACHE]: 0,\n      [LogContext.EVENT]: 0,\n      [LogContext.SYSTEM]: 0,\n      [LogContext.EXTERNAL]: 0,\n      [LogContext.PERFORMANCE]: 0,\n    },\n    totalLogSize: 0,\n  };\n\n  constructor(\n    private readonly eventEmitter: EventEmitter2,\n    private readonly configService: PinoLoggerConfigService,\n    private readonly loggerFactory: PinoLoggerFactory,\n    private readonly cls: ClsService,\n  ) {\n    this.initializeStats();\n    this.initializeLogger();\n  }\n\n  /**\n   * @method debug\n   * @description 记录调试日志\n   */\n  debug(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('debug', message, context, metadata, error);\n  }\n\n  /**\n   * @method info\n   * @description 记录信息日志\n   */\n  info(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('info', message, context, metadata, error);\n  }\n\n  /**\n   * @method warn\n   * @description 记录警告日志\n   */\n  warn(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('warn', message, context, metadata, error);\n  }\n\n  /**\n   * @method error\n   * @description 记录错误日志\n   */\n  error(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('error', message, context, metadata, error);\n  }\n\n  /**\n   * @method fatal\n   * @description 记录致命错误日志\n   */\n  fatal(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('fatal', message, context, metadata, error);\n  }\n\n  /**\n   * @method trace\n   * @description 记录跟踪日志\n   */\n  trace(\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    this.log('trace', message, context, metadata, error);\n  }\n\n  /**\n   * @method performance\n   * @description 记录性能日志\n   */\n  performance(\n    operation: string,\n    duration: number,\n    context?: LogContext,\n    metadata?: LogMetadata,\n  ): void {\n    const performanceMetadata: LogMetadata = {\n      ...metadata,\n      operation,\n      duration,\n      type: 'performance',\n    };\n    this.log(\n      'info',\n      `Performance: ${operation} took ${duration}ms`,\n      context || LogContext.PERFORMANCE,\n      performanceMetadata,\n    );\n  }\n\n  /**\n   * @method business\n   * @description 记录业务日志\n   */\n  business(message: string, metadata?: LogMetadata): void {\n    this.log('info', message, LogContext.BUSINESS, metadata);\n  }\n\n  /**\n   * @method security\n   * @description 记录安全日志\n   */\n  security(message: string, metadata?: LogMetadata): void {\n    this.log('warn', message, LogContext.AUTH, metadata);\n  }\n\n  /**\n   * @method child\n   * @description 创建子日志器\n   */\n  child(context: LogContext, metadata?: LogMetadata): ILoggerService {\n    const childLogger = this.loggerFactory.createChildLogger(this.logger, {\n      context,\n      ...metadata,\n    });\n\n    // 创建一个新的PinoLoggerService实例，使用子日志器\n    const childService = new PinoLoggerService(\n      this.eventEmitter,\n      this.configService,\n      this.loggerFactory,\n      this.cls,\n    );\n    (\n      childService as unknown as {\n        logger: pino.Logger;\n        stats: PinoLoggerService['stats'];\n      }\n    ).logger = childLogger;\n    (\n      childService as unknown as {\n        logger: pino.Logger;\n        stats: PinoLoggerService['stats'];\n      }\n    ).stats = this.stats;\n\n    return childService;\n  }\n\n  /**\n   * @method setLevel\n   * @description 设置日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.configService.setLevel(level);\n    this.initializeLogger();\n  }\n\n  /**\n   * @method getLevel\n   * @description 获取日志级别\n   */\n  getLevel(): LogLevel {\n    return this.configService.getLevel();\n  }\n\n  /**\n   * @method updateConfig\n   * @description 更新日志配置\n   */\n  updateConfig(config: Partial<LogConfig>): void {\n    this.configService.updateConfig(config);\n    this.initializeLogger();\n  }\n\n  /**\n   * @method getConfig\n   * @description 获取日志配置\n   */\n  getConfig(): LogConfig {\n    return this.configService.getConfig();\n  }\n\n  /**\n   * @method flush\n   * @description 刷新日志缓冲区\n   */\n  async flush(): Promise<void> {\n    if (this.logger.flush) {\n      await this.logger.flush();\n    }\n  }\n\n  /**\n   * @method close\n   * @description 关闭日志器\n   */\n  async close(): Promise<void> {\n    await this.flush();\n  }\n\n  /**\n   * @method onModuleDestroy\n   * @description 模块销毁时的清理工作\n   */\n  async onModuleDestroy(): Promise<void> {\n    await this.close();\n  }\n\n  /**\n   * @method getStats\n   * @description 获取日志统计信息\n   */\n  getStats(): {\n    totalLogs: number;\n    logsByLevel: Record<LogLevel, number>;\n    logsByContext: Record<LogContext, number>;\n    averageLogSize: number;\n    lastLogTime?: Date;\n  } {\n    return {\n      totalLogs: this.stats.totalLogs,\n      logsByLevel: { ...this.stats.logsByLevel },\n      logsByContext: { ...this.stats.logsByContext },\n      averageLogSize:\n        this.stats.totalLogs > 0\n          ? this.stats.totalLogSize / this.stats.totalLogs\n          : 0,\n      lastLogTime: this.stats.lastLogTime,\n    };\n  }\n\n  /**\n   * @method resetStats\n   * @description 重置日志统计\n   */\n  resetStats(): void {\n    this.initializeStats();\n  }\n\n  // 私有辅助方法\n\n  /**\n   * @private\n   * @method initializeStats\n   * @description 初始化统计信息\n   */\n  private initializeStats(): void {\n    this.stats = {\n      totalLogs: 0,\n      logsByLevel: {\n        trace: 0,\n        debug: 0,\n        info: 0,\n        warn: 0,\n        error: 0,\n        fatal: 0,\n      },\n      logsByContext: {\n        [LogContext.HTTP_REQUEST]: 0,\n        [LogContext.DATABASE]: 0,\n        [LogContext.BUSINESS]: 0,\n        [LogContext.AUTH]: 0,\n        [LogContext.CONFIG]: 0,\n        [LogContext.CACHE]: 0,\n        [LogContext.EVENT]: 0,\n        [LogContext.SYSTEM]: 0,\n        [LogContext.EXTERNAL]: 0,\n        [LogContext.PERFORMANCE]: 0,\n      },\n      totalLogSize: 0,\n    };\n  }\n\n  /**\n   * @private\n   * @method initializeLogger\n   * @description 初始化Pino日志器\n   */\n  private initializeLogger(): void {\n    this.logger = this.loggerFactory.createLogger();\n  }\n\n  /**\n   * @private\n   * @method log\n   * @description 内部日志记录方法\n   */\n  private log(\n    level: LogLevel,\n    message: string,\n    context?: LogContext,\n    metadata?: LogMetadata,\n    error?: Error,\n  ): void {\n    const config = this.configService.getConfig();\n\n    // 从CLS获取上下文信息\n    const requestId = this.cls.get('requestId');\n    const tenantId = this.cls.get('tenantId');\n    const userId = this.cls.get('userId');\n\n    const logData: Record<string, unknown> = {\n      message,\n      context: context || LogContext.SYSTEM,\n      timestamp: new Date().toISOString(),\n      requestId,\n      tenantId,\n      userId,\n      ...metadata,\n    };\n\n    if (error) {\n      logData.error = {\n        message: error.message,\n        stack: config.stackTrace ? error.stack : undefined,\n        code: (error as unknown as Record<string, unknown>).code,\n        name: error.name,\n      };\n    }\n\n    // 更新统计信息\n    this.updateStats(level, context || LogContext.SYSTEM, message.length);\n\n    // 记录日志\n    this.logger[level](logData);\n\n    // 发送事件\n    this.eventEmitter.emit('logger.log', {\n      level,\n      message,\n      context: context || LogContext.SYSTEM,\n      metadata,\n      error,\n      timestamp: new Date(),\n    });\n  }\n\n  /**\n   * @private\n   * @method updateStats\n   * @description 更新统计信息\n   */\n  private updateStats(\n    level: LogLevel,\n    context: LogContext,\n    logSize: number,\n  ): void {\n    this.stats.totalLogs++;\n    this.stats.logsByLevel[level]++;\n    this.stats.logsByContext[context]++;\n    this.stats.totalLogSize += logSize;\n    this.stats.lastLogTime = new Date();\n  }\n}\n"],"mappingscAAA,GAAAC,CAAA,QAAAC,OAAA;AAIA,MAAAC,mBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAC,CAAA,QAAAC,OAAA;AAYA;;;;;;;;;;;;;;;;;IAkBaE,iBAAiB;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA;EAAA;EAAAD,cAAA,GAAAK,CAAA;;;8BAD7B,IAAAN,QAAA,CAAAO,UAAU,GAAE;;;;;;;;;IAkCXC,YACmBC,YAA2B,EAC3BC,aAAsC,EACtCC,aAAgC,EAChCC,GAAe;MAAA;MAAAX,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAHf,KAAAO,YAAY,GAAZA,YAAY;MAAe;MAAAR,cAAA,GAAAC,CAAA;MAC3B,KAAAQ,aAAa,GAAbA,aAAa;MAAyB;MAAAT,cAAA,GAAAC,CAAA;MACtC,KAAAS,aAAa,GAAbA,aAAa;MAAmB;MAAAV,cAAA,GAAAC,CAAA;MAChC,KAAAU,GAAG,GAAHA,GAAG;MAAY;MAAAX,cAAA,GAAAC,CAAA;MApC1B,KAAAW,MAAM,GAAgB,EAAiB;MAAC;MAAAZ,cAAA,GAAAC,CAAA;MACxC,KAAAY,KAAK,GAMT;QACFC,SAAS,EAAE,CAAC;QACZC,WAAW,EAAE;UACXC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE,CAAC;UACRC,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE;SACR;QACDC,aAAa,EAAE;UACb,CAACnB,mBAAA,CAAAoB,UAAU,CAACC,YAAY,GAAG,CAAC;UAC5B,CAACrB,mBAAA,CAAAoB,UAAU,CAACE,QAAQ,GAAG,CAAC;UACxB,CAACtB,mBAAA,CAAAoB,UAAU,CAACG,QAAQ,GAAG,CAAC;UACxB,CAACvB,mBAAA,CAAAoB,UAAU,CAACI,IAAI,GAAG,CAAC;UACpB,CAACxB,mBAAA,CAAAoB,UAAU,CAACK,MAAM,GAAG,CAAC;UACtB,CAACzB,mBAAA,CAAAoB,UAAU,CAACM,KAAK,GAAG,CAAC;UACrB,CAAC1B,mBAAA,CAAAoB,UAAU,CAACO,KAAK,GAAG,CAAC;UACrB,CAAC3B,mBAAA,CAAAoB,UAAU,CAACQ,MAAM,GAAG,CAAC;UACtB,CAAC5B,mBAAA,CAAAoB,UAAU,CAACS,QAAQ,GAAG,CAAC;UACxB,CAAC7B,mBAAA,CAAAoB,UAAU,CAACU,WAAW,GAAG;SAC3B;QACDC,YAAY,EAAE;OACf;MAAC;MAAAlC,cAAA,GAAAC,CAAA;MAQA,IAAI,CAACkC,eAAe,EAAE;MAAC;MAAAnC,cAAA,GAAAC,CAAA;MACvB,IAAI,CAACmC,gBAAgB,EAAE;IACzB;IAEA;;;;IAIAhB,KAAKA,CACHiB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEb,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEH,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEtB,KAAK,CAAC;IACtD;IAEA;;;;IAIAE,IAAIA,CACFkB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEb,IAAI,CAACuC,GAAG,CAAC,MAAM,EAAEH,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEtB,KAAK,CAAC;IACrD;IAEA;;;;IAIAC,IAAIA,CACFmB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEb,IAAI,CAACuC,GAAG,CAAC,MAAM,EAAEH,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEtB,KAAK,CAAC;IACrD;IAEA;;;;IAIAA,KAAKA,CACHoB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEb,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEH,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEtB,KAAK,CAAC;IACtD;IAEA;;;;IAIAD,KAAKA,CACHqB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEb,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEH,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEtB,KAAK,CAAC;IACtD;IAEA;;;;IAIAI,KAAKA,CACHgB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEb,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEH,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEtB,KAAK,CAAC;IACtD;IAEA;;;;IAIAwB,WAAWA,CACTC,SAAiB,EACjBC,QAAgB,EAChBL,OAAoB,EACpBC,QAAsB;MAAA;MAAAvC,cAAA,GAAAK,CAAA;MAEtB,MAAMuC,mBAAmB;MAAA;MAAA,CAAA5C,cAAA,GAAAC,CAAA,QAAgB;QACvC,GAAGsC,QAAQ;QACXG,SAAS;QACTC,QAAQ;QACRE,IAAI,EAAE;OACP;MAAC;MAAA7C,cAAA,GAAAC,CAAA;MACF,IAAI,CAACuC,GAAG,CACN,MAAM,EACN,gBAAgBE,SAAS,SAASC,QAAQ,IAAI;MAC9C;MAAA,CAAA3C,cAAA,GAAA8C,CAAA,WAAAR,OAAO;MAAA;MAAA,CAAAtC,cAAA,GAAA8C,CAAA,WAAI3C,mBAAA,CAAAoB,UAAU,CAACU,WAAW,GACjCW,mBAAmB,CACpB;IACH;IAEA;;;;IAIAG,QAAQA,CAACV,OAAe,EAAEE,QAAsB;MAAA;MAAAvC,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAC9C,IAAI,CAACuC,GAAG,CAAC,MAAM,EAAEH,OAAO,EAAElC,mBAAA,CAAAoB,UAAU,CAACG,QAAQ,EAAEa,QAAQ,CAAC;IAC1D;IAEA;;;;IAIAS,QAAQA,CAACX,OAAe,EAAEE,QAAsB;MAAA;MAAAvC,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAC9C,IAAI,CAACuC,GAAG,CAAC,MAAM,EAAEH,OAAO,EAAElC,mBAAA,CAAAoB,UAAU,CAACI,IAAI,EAAEY,QAAQ,CAAC;IACtD;IAEA;;;;IAIAU,KAAKA,CAACX,OAAmB,EAAEC,QAAsB;MAAA;MAAAvC,cAAA,GAAAK,CAAA;MAC/C,MAAM6C,WAAW;MAAA;MAAA,CAAAlD,cAAA,GAAAC,CAAA,QAAG,IAAI,CAACS,aAAa,CAACyC,iBAAiB,CAAC,IAAI,CAACvC,MAAM,EAAE;QACpE0B,OAAO;QACP,GAAGC;OACJ,CAAC;MAEF;MACA,MAAMa,YAAY;MAAA;MAAA,CAAApD,cAAA,GAAAC,CAAA,QAAG,IAAIG,iBAAiB,CACxC,IAAI,CAACI,YAAY,EACjB,IAAI,CAACC,aAAa,EAClB,IAAI,CAACC,aAAa,EAClB,IAAI,CAACC,GAAG,CACT;MAAC;MAAAX,cAAA,GAAAC,CAAA;MAEAmD,YAID,CAACxC,MAAM,GAAGsC,WAAW;MAAC;MAAAlD,cAAA,GAAAC,CAAA;MAErBmD,YAID,CAACvC,KAAK,GAAG,IAAI,CAACA,KAAK;MAAC;MAAAb,cAAA,GAAAC,CAAA;MAErB,OAAOmD,YAAY;IACrB;IAEA;;;;IAIAC,QAAQA,CAACC,KAAe;MAAA;MAAAtD,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACtB,IAAI,CAACQ,aAAa,CAAC4C,QAAQ,CAACC,KAAK,CAAC;MAAC;MAAAtD,cAAA,GAAAC,CAAA;MACnC,IAAI,CAACmC,gBAAgB,EAAE;IACzB;IAEA;;;;IAIAmB,QAAQA,CAAA;MAAA;MAAAvD,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACN,OAAO,IAAI,CAACQ,aAAa,CAAC8C,QAAQ,EAAE;IACtC;IAEA;;;;IAIAC,YAAYA,CAACC,MAA0B;MAAA;MAAAzD,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACrC,IAAI,CAACQ,aAAa,CAAC+C,YAAY,CAACC,MAAM,CAAC;MAAC;MAAAzD,cAAA,GAAAC,CAAA;MACxC,IAAI,CAACmC,gBAAgB,EAAE;IACzB;IAEA;;;;IAIAsB,SAASA,CAAA;MAAA;MAAA1D,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACP,OAAO,IAAI,CAACQ,aAAa,CAACiD,SAAS,EAAE;IACvC;IAEA;;;;IAIA,MAAMC,KAAKA,CAAA;MAAA;MAAA3D,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACT,IAAI,IAAI,CAACW,MAAM,CAAC+C,KAAK,EAAE;QAAA;QAAA3D,cAAA,GAAA8C,CAAA;QAAA9C,cAAA,GAAAC,CAAA;QACrB,MAAM,IAAI,CAACW,MAAM,CAAC+C,KAAK,EAAE;MAC3B,CAAC;MAAA;MAAA;QAAA3D,cAAA,GAAA8C,CAAA;MAAA;IACH;IAEA;;;;IAIA,MAAMc,KAAKA,CAAA;MAAA;MAAA5D,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACT,MAAM,IAAI,CAAC0D,KAAK,EAAE;IACpB;IAEA;;;;IAIA,MAAME,eAAeA,CAAA;MAAA;MAAA7D,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACnB,MAAM,IAAI,CAAC2D,KAAK,EAAE;IACpB;IAEA;;;;IAIAE,QAAQA,CAAA;MAAA;MAAA9D,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAON,OAAO;QACLa,SAAS,EAAE,IAAI,CAACD,KAAK,CAACC,SAAS;QAC/BC,WAAW,EAAE;UAAE,GAAG,IAAI,CAACF,KAAK,CAACE;QAAW,CAAE;QAC1CO,aAAa,EAAE;UAAE,GAAG,IAAI,CAACT,KAAK,CAACS;QAAa,CAAE;QAC9CyC,cAAc,EACZ,IAAI,CAAClD,KAAK,CAACC,SAAS,GAAG,CAAC;QAAA;QAAA,CAAAd,cAAA,GAAA8C,CAAA,WACpB,IAAI,CAACjC,KAAK,CAACqB,YAAY,GAAG,IAAI,CAACrB,KAAK,CAACC,SAAS;QAAA;QAAA,CAAAd,cAAA,GAAA8C,CAAA,WAC9C,CAAC;QACPkB,WAAW,EAAE,IAAI,CAACnD,KAAK,CAACmD;OACzB;IACH;IAEA;;;;IAIAC,UAAUA,CAAA;MAAA;MAAAjE,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACR,IAAI,CAACkC,eAAe,EAAE;IACxB;IAEA;IAEA;;;;;IAKQA,eAAeA,CAAA;MAAA;MAAAnC,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACrB,IAAI,CAACY,KAAK,GAAG;QACXC,SAAS,EAAE,CAAC;QACZC,WAAW,EAAE;UACXM,KAAK,EAAE,CAAC;UACRD,KAAK,EAAE,CAAC;UACRD,IAAI,EAAE,CAAC;UACPD,IAAI,EAAE,CAAC;UACPD,KAAK,EAAE,CAAC;UACRD,KAAK,EAAE;SACR;QACDM,aAAa,EAAE;UACb,CAACnB,mBAAA,CAAAoB,UAAU,CAACC,YAAY,GAAG,CAAC;UAC5B,CAACrB,mBAAA,CAAAoB,UAAU,CAACE,QAAQ,GAAG,CAAC;UACxB,CAACtB,mBAAA,CAAAoB,UAAU,CAACG,QAAQ,GAAG,CAAC;UACxB,CAACvB,mBAAA,CAAAoB,UAAU,CAACI,IAAI,GAAG,CAAC;UACpB,CAACxB,mBAAA,CAAAoB,UAAU,CAACK,MAAM,GAAG,CAAC;UACtB,CAACzB,mBAAA,CAAAoB,UAAU,CAACM,KAAK,GAAG,CAAC;UACrB,CAAC1B,mBAAA,CAAAoB,UAAU,CAACO,KAAK,GAAG,CAAC;UACrB,CAAC3B,mBAAA,CAAAoB,UAAU,CAACQ,MAAM,GAAG,CAAC;UACtB,CAAC5B,mBAAA,CAAAoB,UAAU,CAACS,QAAQ,GAAG,CAAC;UACxB,CAAC7B,mBAAA,CAAAoB,UAAU,CAACU,WAAW,GAAG;SAC3B;QACDC,YAAY,EAAE;OACf;IACH;IAEA;;;;;IAKQE,gBAAgBA,CAAA;MAAA;MAAApC,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MACtB,IAAI,CAACW,MAAM,GAAG,IAAI,CAACF,aAAa,CAACwD,YAAY,EAAE;IACjD;IAEA;;;;;IAKQ1B,GAAGA,CACTc,KAAe,EACfjB,OAAe,EACfC,OAAoB,EACpBC,QAAsB,EACtBtB,KAAa;MAAA;MAAAjB,cAAA,GAAAK,CAAA;MAEb,MAAMoD,MAAM;MAAA;MAAA,CAAAzD,cAAA,GAAAC,CAAA,QAAG,IAAI,CAACQ,aAAa,CAACiD,SAAS,EAAE;MAE7C;MACA,MAAMS,SAAS;MAAA;MAAA,CAAAnE,cAAA,GAAAC,CAAA,QAAG,IAAI,CAACU,GAAG,CAACyD,GAAG,CAAC,WAAW,CAAC;MAC3C,MAAMC,QAAQ;MAAA;MAAA,CAAArE,cAAA,GAAAC,CAAA,QAAG,IAAI,CAACU,GAAG,CAACyD,GAAG,CAAC,UAAU,CAAC;MACzC,MAAME,MAAM;MAAA;MAAA,CAAAtE,cAAA,GAAAC,CAAA,QAAG,IAAI,CAACU,GAAG,CAACyD,GAAG,CAAC,QAAQ,CAAC;MAErC,MAAMG,OAAO;MAAA;MAAA,CAAAvE,cAAA,GAAAC,CAAA,QAA4B;QACvCoC,OAAO;QACPC,OAAO;QAAE;QAAA,CAAAtC,cAAA,GAAA8C,CAAA,WAAAR,OAAO;QAAA;QAAA,CAAAtC,cAAA,GAAA8C,CAAA,WAAI3C,mBAAA,CAAAoB,UAAU,CAACQ,MAAM;QACrCyC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnCP,SAAS;QACTE,QAAQ;QACRC,MAAM;QACN,GAAG/B;OACJ;MAAC;MAAAvC,cAAA,GAAAC,CAAA;MAEF,IAAIgB,KAAK,EAAE;QAAA;QAAAjB,cAAA,GAAA8C,CAAA;QAAA9C,cAAA,GAAAC,CAAA;QACTsE,OAAO,CAACtD,KAAK,GAAG;UACdoB,OAAO,EAAEpB,KAAK,CAACoB,OAAO;UACtBsC,KAAK,EAAElB,MAAM,CAACmB,UAAU;UAAA;UAAA,CAAA5E,cAAA,GAAA8C,CAAA,WAAG7B,KAAK,CAAC0D,KAAK;UAAA;UAAA,CAAA3E,cAAA,GAAA8C,CAAA,WAAG+B,SAAS;UAClDC,IAAI,EAAG7D,KAA4C,CAAC6D,IAAI;UACxDC,IAAI,EAAE9D,KAAK,CAAC8D;SACb;MACH,CAAC;MAAA;MAAA;QAAA/E,cAAA,GAAA8C,CAAA;MAAA;MAED;MAAA9C,cAAA,GAAAC,CAAA;MACA,IAAI,CAAC+E,WAAW,CAAC1B,KAAK;MAAE;MAAA,CAAAtD,cAAA,GAAA8C,CAAA,WAAAR,OAAO;MAAA;MAAA,CAAAtC,cAAA,GAAA8C,CAAA,WAAI3C,mBAAA,CAAAoB,UAAU,CAACQ,MAAM,GAAEM,OAAO,CAAC4C,MAAM,CAAC;MAErE;MAAA;MAAAjF,cAAA,GAAAC,CAAA;MACA,IAAI,CAACW,MAAM,CAAC0C,KAAK,CAAC,CAACiB,OAAO,CAAC;MAE3B;MAAA;MAAAvE,cAAA,GAAAC,CAAA;MACA,IAAI,CAACO,YAAY,CAAC0E,IAAI,CAAC,YAAY,EAAE;QACnC5B,KAAK;QACLjB,OAAO;QACPC,OAAO;QAAE;QAAA,CAAAtC,cAAA,GAAA8C,CAAA,WAAAR,OAAO;QAAA;QAAA,CAAAtC,cAAA,GAAA8C,CAAA,WAAI3C,mBAAA,CAAAoB,UAAU,CAACQ,MAAM;QACrCQ,QAAQ;QACRtB,KAAK;QACLuD,SAAS,EAAE,IAAIC,IAAI;OACpB,CAAC;IACJ;IAEA;;;;;IAKQO,WAAWA,CACjB1B,KAAe,EACfhB,OAAmB,EACnB6C,OAAe;MAAA;MAAAnF,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAC,CAAA;MAEf,IAAI,CAACY,KAAK,CAACC,SAAS,EAAE;MAAC;MAAAd,cAAA,GAAAC,CAAA;MACvB,IAAI,CAACY,KAAK,CAACE,WAAW,CAACuC,KAAK,CAAC,EAAE;MAAC;MAAAtD,cAAA,GAAAC,CAAA;MAChC,IAAI,CAACY,KAAK,CAACS,aAAa,CAACgB,OAAO,CAAC,EAAE;MAAC;MAAAtC,cAAA,GAAAC,CAAA;MACpC,IAAI,CAACY,KAAK,CAACqB,YAAY,IAAIiD,OAAO;MAAC;MAAAnF,cAAA,GAAAC,CAAA;MACnC,IAAI,CAACY,KAAK,CAACmD,WAAW,GAAG,IAAIS,IAAI,EAAE;IACrC;;;;;;;;;;;;;;;;;;;;;;;IA9YFW,YAAA,OAAAC,gBAAA;MAAAC,KAAA,EAAAC;IAAA,GAAAC,gBAAA;MAAAC,IAAA;MAAAV,IAAA,EAAAQ,UAAA,CAAAR,IAAA;MAAAxC,QAAA,EAAAmD;IAAA,SAAAC,uBAAA;IA+YC;IAAA3F,cAAA,GAAAC,CAAA;;;;;;;;;;;;;;;;;;;;IA/YY2F,iBAAA,CAAAL,UAAA,EAAAI,uBAAA;;;;;;;;AAAAE,OAAA,CAAAzF,iBAAA,GAAAA,iBAAA","ignoreList":[]}