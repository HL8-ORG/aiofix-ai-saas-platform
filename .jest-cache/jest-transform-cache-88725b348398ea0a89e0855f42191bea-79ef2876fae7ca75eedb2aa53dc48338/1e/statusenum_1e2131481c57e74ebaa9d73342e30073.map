{"version":3,"names":["cov_278daxttle","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","Status","exports","StatusTransition","isTransitionAllowed","fromStatus","toStatus","allowedTargets","allowedTransitions","get","includes","getAllowedTransitions","currentStatus","validateTransition","InvalidStatusTransitionError","Map","PENDING","ACTIVE","DELETED","DISABLED","LOCKED","SUSPENDED","StatusUtils","canLogin","status","isDisabled","needsActivation","isDeleted","getDisplayName","displayNames","getDescription","descriptions","Error","constructor","message"],"sources":["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/shared/src/enums/status.enum.ts"],"sourcesContent":["/**\n * @file status.enum.ts\n * @description 通用状态枚举和转换逻辑\n *\n * 提供系统中通用的状态定义和状态转换规则\n */\n\n/**\n * @enum Status\n * @description 通用状态枚举\n *\n * 定义系统中通用的状态值，适用于各种实体\n */\nexport enum Status {\n  /** 待激活状态 */\n  PENDING = 'PENDING',\n  /** 激活状态 */\n  ACTIVE = 'ACTIVE',\n  /** 禁用状态 */\n  DISABLED = 'DISABLED',\n  /** 锁定状态 */\n  LOCKED = 'LOCKED',\n  /** 暂停状态 */\n  SUSPENDED = 'SUSPENDED',\n  /** 已删除状态 */\n  DELETED = 'DELETED',\n}\n\n/**\n * @class StatusTransition\n * @description 状态转换规则管理\n *\n * 定义允许的状态转换和转换规则\n */\nexport class StatusTransition {\n  private static readonly allowedTransitions: Map<Status, Status[]> = new Map([\n    [Status.PENDING, [Status.ACTIVE, Status.DELETED]],\n    [\n      Status.ACTIVE,\n      [Status.DISABLED, Status.LOCKED, Status.SUSPENDED, Status.DELETED],\n    ],\n    [Status.DISABLED, [Status.ACTIVE, Status.DELETED]],\n    [Status.LOCKED, [Status.ACTIVE, Status.DISABLED]],\n    [Status.SUSPENDED, [Status.ACTIVE, Status.DELETED]],\n    [Status.DELETED, []], // 已删除状态不能转换到其他状态\n  ]);\n\n  /**\n   * @method isTransitionAllowed\n   * @description 检查状态转换是否允许\n   * @param {Status} fromStatus 当前状态\n   * @param {Status} toStatus 目标状态\n   * @returns {boolean} 是否允许转换\n   */\n  public static isTransitionAllowed(\n    fromStatus: Status,\n    toStatus: Status,\n  ): boolean {\n    if (fromStatus === toStatus) {\n      return true; // 相同状态转换总是允许的\n    }\n\n    const allowedTargets = this.allowedTransitions.get(fromStatus);\n    return allowedTargets ? allowedTargets.includes(toStatus) : false;\n  }\n\n  /**\n   * @method getAllowedTransitions\n   * @description 获取允许的状态转换列表\n   * @param {Status} currentStatus 当前状态\n   * @returns {Status[]} 允许转换到的状态列表\n   */\n  public static getAllowedTransitions(currentStatus: Status): Status[] {\n    const allowedTargets = this.allowedTransitions.get(currentStatus);\n    return allowedTargets ? [...allowedTargets] : [];\n  }\n\n  /**\n   * @method validateTransition\n   * @description 验证状态转换\n   * @param {Status} fromStatus 当前状态\n   * @param {Status} toStatus 目标状态\n   * @throws {InvalidStatusTransitionError} 如果转换不允许\n   */\n  public static validateTransition(fromStatus: Status, toStatus: Status): void {\n    if (!this.isTransitionAllowed(fromStatus, toStatus)) {\n      throw new InvalidStatusTransitionError(\n        `Invalid status transition from ${fromStatus} to ${toStatus}`,\n      );\n    }\n  }\n}\n\n/**\n * @class StatusUtils\n * @description 状态工具类\n *\n * 提供状态相关的业务逻辑方法\n */\nexport class StatusUtils {\n  /**\n   * @method canLogin\n   * @description 检查是否可以登录\n   * @param {Status} status 状态\n   * @returns {boolean} 是否可以登录\n   */\n  public static canLogin(status: Status): boolean {\n    return status === Status.ACTIVE;\n  }\n\n  /**\n   * @method isDisabled\n   * @description 检查是否被禁用\n   * @param {Status} status 状态\n   * @returns {boolean} 是否被禁用\n   */\n  public static isDisabled(status: Status): boolean {\n    return [\n      Status.DISABLED,\n      Status.LOCKED,\n      Status.SUSPENDED,\n      Status.DELETED,\n    ].includes(status);\n  }\n\n  /**\n   * @method needsActivation\n   * @description 检查是否需要激活\n   * @param {Status} status 状态\n   * @returns {boolean} 是否需要激活\n   */\n  public static needsActivation(status: Status): boolean {\n    return status === Status.PENDING;\n  }\n\n  /**\n   * @method isDeleted\n   * @description 检查是否已删除\n   * @param {Status} status 状态\n   * @returns {boolean} 是否已删除\n   */\n  public static isDeleted(status: Status): boolean {\n    return status === Status.DELETED;\n  }\n\n  /**\n   * @method getDisplayName\n   * @description 获取状态显示名称\n   * @param {Status} status 状态\n   * @returns {string} 显示名称\n   */\n  public static getDisplayName(status: Status): string {\n    const displayNames: Record<Status, string> = {\n      [Status.PENDING]: '待激活',\n      [Status.ACTIVE]: '正常',\n      [Status.DISABLED]: '已禁用',\n      [Status.LOCKED]: '已锁定',\n      [Status.SUSPENDED]: '已暂停',\n      [Status.DELETED]: '已删除',\n    };\n\n    return displayNames[status] || status;\n  }\n\n  /**\n   * @method getDescription\n   * @description 获取状态描述\n   * @param {Status} status 状态\n   * @returns {string} 状态描述\n   */\n  public static getDescription(status: Status): string {\n    const descriptions: Record<Status, string> = {\n      [Status.PENDING]: '已注册但未激活，需要邮箱验证或管理员激活',\n      [Status.ACTIVE]: '账户正常可用，可以正常登录和使用系统',\n      [Status.DISABLED]: '账户被管理员禁用，不能登录但数据保留',\n      [Status.LOCKED]: '账户因安全原因被锁定，通常因多次登录失败触发',\n      [Status.SUSPENDED]: '账户被临时暂停，可以恢复但需要管理员操作',\n      [Status.DELETED]: '账户已被删除，数据可能被软删除或硬删除',\n    };\n\n    return descriptions[status] || '未知状态';\n  }\n}\n\n/**\n * @class InvalidStatusTransitionError\n * @description 无效状态转换异常\n *\n * 当状态转换不符合业务规则时抛出\n */\nexport class InvalidStatusTransitionError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidStatusTransitionError';\n  }\n}\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}