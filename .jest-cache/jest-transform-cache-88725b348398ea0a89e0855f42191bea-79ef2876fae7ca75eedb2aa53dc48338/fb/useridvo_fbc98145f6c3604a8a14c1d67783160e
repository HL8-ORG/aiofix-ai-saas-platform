af360031d372352b4d34cf477c75910e
"use strict";

/* istanbul ignore next */
function cov_pmv4oo1p2() {
  var path = "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/shared/src/identifiers/user-id.vo.ts";
  var hash = "7dd31e4096c8aad5bfbd7f5357fc1cc2ef4e37c5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/shared/src/identifiers/user-id.vo.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 53
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 30
        }
      },
      "4": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "5": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "6": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "7": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "8": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 54,
          column: 102
        }
      },
      "9": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "10": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "11": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "12": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "13": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "14": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 26
        }
      },
      "15": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "16": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 33
        }
      },
      "17": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "18": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 30
        }
      },
      "19": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "20": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 25
        }
      },
      "21": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 115,
          column: 24
        }
      },
      "22": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 23
        }
      },
      "23": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "24": {
        start: {
          line: 142,
          column: 0
        },
        end: {
          line: 142,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 15
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 65
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 105
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 14
          },
          end: {
            line: 39,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 14
          },
          end: {
            line: 39,
            column: 19
          }
        }, {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 39
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 23
          }
        }, {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 50,
            column: 57
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/shared/src/identifiers/user-id.vo.ts",
      mappings: ";;;AAAA,uCAA2C;AAC3C,+BAAoC;AAEpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,MAAa,MAAO,SAAQ,kBAAmB;IAC7C,YAAY,KAAc;QACxB,KAAK,CAAC,KAAK,IAAI,IAAA,SAAM,GAAE,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;;;;;OAMG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAClD,MAAM,IAAI,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAC3C,CAAC;QAED,cAAc;QACd,MAAM,SAAS,GACb,4EAA4E,CAAC;QAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAChC,MAAM,IAAI,kBAAkB,CAAC,cAAc,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,KAAa;QAClB,IAAI,CAAC,CAAC,KAAK,YAAY,MAAM,CAAC,EAAE,CAAC;YAC/B,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAChE,CAAC;IAED;;;;OAIG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,QAAQ;QACb,OAAO,IAAI,MAAM,CAAC,IAAA,SAAM,GAAE,CAAC,CAAC;IAC9B,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,UAAU,CAAC,KAAa;QAC7B,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,OAAO,CAAC,KAAa;QAC1B,IAAI,CAAC;YACH,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,MAAM,CAAC;YACP,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;CACF;AApFD,wBAoFC;AAED;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAa,kBAAmB,SAAQ,KAAK;IAC3C,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;IACnC,CAAC;CACF;AALD,gDAKC",
      names: [],
      sources: ["/home/arligle/V1/Aiofix/aiofix-ai-saas-platform/packages/shared/src/identifiers/user-id.vo.ts"],
      sourcesContent: ["import { ValueObject } from '@aiofix/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * @class UserId\n * @description\n * \u7528\u6237ID\u503C\u5BF9\u8C61\uFF0C\u5C01\u88C5\u7528\u6237\u552F\u4E00\u6807\u8BC6\u7B26\u7684\u4E0D\u53D8\u6027\u7EA6\u675F\u3001\u76F8\u7B49\u6027\u5224\u65AD\u548C\u4E1A\u52A1\u6982\u5FF5\u3002\n *\n * \u4E0D\u53D8\u6027\u7EA6\u675F\uFF1A\n * 1. \u7528\u6237ID\u4E00\u65E6\u521B\u5EFA\u4E0D\u53EF\u53D8\u66F4\n * 2. \u7528\u6237ID\u683C\u5F0F\u5FC5\u987B\u7B26\u5408UUID v4\u6807\u51C6\n * 3. \u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A\u6216\u65E0\u6548\u503C\n * 4. \u7528\u6237ID\u5FC5\u987B\u5168\u5C40\u552F\u4E00\n *\n * \u76F8\u7B49\u6027\u5224\u65AD\uFF1A\n * 1. \u57FA\u4E8E\u7528\u6237ID\u7684\u6807\u51C6\u5316\u503C\u8FDB\u884C\u76F8\u7B49\u6027\u6BD4\u8F83\n * 2. \u5FFD\u7565\u5927\u5C0F\u5199\u5DEE\u5F02\n * 3. \u652F\u6301\u54C8\u5E0C\u7801\u8BA1\u7B97\u7528\u4E8E\u96C6\u5408\u64CD\u4F5C\n *\n * \u4E1A\u52A1\u6982\u5FF5\u5C01\u88C5\uFF1A\n * 1. \u5C01\u88C5\u7528\u6237ID\u9A8C\u8BC1\u903B\u8F91\n * 2. \u63D0\u4F9B\u7528\u6237ID\u751F\u6210\u65B9\u6CD5\n * 3. \u9690\u85CF\u7528\u6237ID\u683C\u5F0F\u7EC6\u8282\n *\n * @property {string} value \u6807\u51C6\u5316\u7684\u7528\u6237ID\u503C\n *\n * @example\n * ```typescript\n * const userId1 = UserId.generate();\n * const userId2 = UserId.fromString('123e4567-e89b-12d3-a456-426614174000');\n * console.log(userId1.equals(userId2)); // false\n * ```\n * @since 1.0.0\n */\nexport class UserId extends ValueObject<string> {\n  constructor(value?: string) {\n    super(value || uuidv4());\n    this.validate();\n  }\n\n  /**\n   * @method validate\n   * @description \u9A8C\u8BC1\u7528\u6237ID\u7684\u6709\u6548\u6027\n   * @returns {void}\n   * @throws {InvalidUserIdError} \u5F53\u7528\u6237ID\u65E0\u6548\u65F6\u629B\u51FA\n   * @private\n   */\n  private validate(): void {\n    if (!this.value || this.value.trim().length === 0) {\n      throw new InvalidUserIdError('\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    // UUID v4\u683C\u5F0F\u9A8C\u8BC1\n    const uuidRegex =\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    if (!uuidRegex.test(this.value)) {\n      throw new InvalidUserIdError(`\u65E0\u6548\u7684UUID\u683C\u5F0F: ${this.value}`);\n    }\n  }\n\n  /**\n   * @method equals\n   * @description \u6BD4\u8F83\u4E24\u4E2A\u7528\u6237ID\u662F\u5426\u76F8\u7B49\n   * @param {UserId} other \u53E6\u4E00\u4E2A\u7528\u6237ID\u5BF9\u8C61\n   * @returns {boolean} \u662F\u5426\u76F8\u7B49\n   */\n  equals(other: UserId): boolean {\n    if (!(other instanceof UserId)) {\n      return false;\n    }\n    return this.value.toLowerCase() === other.value.toLowerCase();\n  }\n\n  /**\n   * @method toString\n   * @description \u8FD4\u56DE\u7528\u6237ID\u7684\u5B57\u7B26\u4E32\u8868\u793A\n   * @returns {string} \u7528\u6237ID\u5B57\u7B26\u4E32\n   */\n  toString(): string {\n    return this.value;\n  }\n\n  /**\n   * @method generate\n   * @description \u751F\u6210\u65B0\u7684\u7528\u6237ID\n   * @returns {UserId} \u65B0\u7684\u7528\u6237ID\u5B9E\u4F8B\n   * @static\n   */\n  static generate(): UserId {\n    return new UserId(uuidv4());\n  }\n\n  /**\n   * @method fromString\n   * @description \u4ECE\u5B57\u7B26\u4E32\u521B\u5EFA\u7528\u6237ID\n   * @param {string} value \u7528\u6237ID\u5B57\u7B26\u4E32\n   * @returns {UserId} \u7528\u6237ID\u5B9E\u4F8B\n   * @static\n   */\n  static fromString(value: string): UserId {\n    return new UserId(value);\n  }\n\n  /**\n   * @method isValid\n   * @description \u68C0\u67E5\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u6709\u6548\u7684\u7528\u6237ID\u683C\u5F0F\n   * @param {string} value \u8981\u68C0\u67E5\u7684\u5B57\u7B26\u4E32\n   * @returns {boolean} \u662F\u5426\u4E3A\u6709\u6548\u7684\u7528\u6237ID\u683C\u5F0F\n   * @static\n   */\n  static isValid(value: string): boolean {\n    try {\n      new UserId(value);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\n/**\n * @class InvalidUserIdError\n * @description\n * \u65E0\u6548\u7528\u6237ID\u5F02\u5E38\uFF0C\u5F53\u7528\u6237ID\u4E0D\u7B26\u5408\u4E1A\u52A1\u89C4\u5219\u65F6\u629B\u51FA\u3002\n *\n * \u4E1A\u52A1\u89C4\u5219\uFF1A\n * 1. \u5F53\u7528\u6237ID\u683C\u5F0F\u65E0\u6548\u65F6\u629B\u51FA\n * 2. \u5F53\u7528\u6237ID\u4E3A\u7A7A\u65F6\u629B\u51FA\n * 3. \u63D0\u4F9B\u6E05\u6670\u7684\u9519\u8BEF\u4FE1\u606F\n *\n * @example\n * ```typescript\n * try {\n *   new UserId('invalid-id');\n * } catch (error) {\n *   console.log(error instanceof InvalidUserIdError); // true\n * }\n * ```\n * @since 1.0.0\n */\nexport class InvalidUserIdError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidUserIdError';\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7dd31e4096c8aad5bfbd7f5357fc1cc2ef4e37c5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pmv4oo1p2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pmv4oo1p2();
cov_pmv4oo1p2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pmv4oo1p2().s[1]++;
exports.InvalidUserIdError = exports.UserId = void 0;
const core_1 =
/* istanbul ignore next */
(cov_pmv4oo1p2().s[2]++, require("@aiofix/core"));
const uuid_1 =
/* istanbul ignore next */
(cov_pmv4oo1p2().s[3]++, require("uuid"));
/**
 * @class UserId
 * @description
 * 用户ID值对象，封装用户唯一标识符的不变性约束、相等性判断和业务概念。
 *
 * 不变性约束：
 * 1. 用户ID一旦创建不可变更
 * 2. 用户ID格式必须符合UUID v4标准
 * 3. 用户ID不能为空或无效值
 * 4. 用户ID必须全局唯一
 *
 * 相等性判断：
 * 1. 基于用户ID的标准化值进行相等性比较
 * 2. 忽略大小写差异
 * 3. 支持哈希码计算用于集合操作
 *
 * 业务概念封装：
 * 1. 封装用户ID验证逻辑
 * 2. 提供用户ID生成方法
 * 3. 隐藏用户ID格式细节
 *
 * @property {string} value 标准化的用户ID值
 *
 * @example
 * ```typescript
 * const userId1 = UserId.generate();
 * const userId2 = UserId.fromString('123e4567-e89b-12d3-a456-426614174000');
 * console.log(userId1.equals(userId2)); // false
 * ```
 * @since 1.0.0
 */
class UserId extends
/* istanbul ignore next */
(core_1.ValueObject) {
  constructor(value) {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[0]++;
    cov_pmv4oo1p2().s[4]++;
    super(
    /* istanbul ignore next */
    (cov_pmv4oo1p2().b[0][0]++, value) ||
    /* istanbul ignore next */
    (cov_pmv4oo1p2().b[0][1]++, (0, uuid_1.v4)()));
    /* istanbul ignore next */
    cov_pmv4oo1p2().s[5]++;
    this.validate();
  }
  /**
   * @method validate
   * @description 验证用户ID的有效性
   * @returns {void}
   * @throws {InvalidUserIdError} 当用户ID无效时抛出
   * @private
   */
  validate() {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[1]++;
    cov_pmv4oo1p2().s[6]++;
    if (
    /* istanbul ignore next */
    (cov_pmv4oo1p2().b[2][0]++, !this.value) ||
    /* istanbul ignore next */
    (cov_pmv4oo1p2().b[2][1]++, this.value.trim().length === 0)) {
      /* istanbul ignore next */
      cov_pmv4oo1p2().b[1][0]++;
      cov_pmv4oo1p2().s[7]++;
      throw new InvalidUserIdError('用户ID不能为空');
    } else
    /* istanbul ignore next */
    {
      cov_pmv4oo1p2().b[1][1]++;
    }
    // UUID v4格式验证
    const uuidRegex =
    /* istanbul ignore next */
    (cov_pmv4oo1p2().s[8]++, /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i);
    /* istanbul ignore next */
    cov_pmv4oo1p2().s[9]++;
    if (!uuidRegex.test(this.value)) {
      /* istanbul ignore next */
      cov_pmv4oo1p2().b[3][0]++;
      cov_pmv4oo1p2().s[10]++;
      throw new InvalidUserIdError(`无效的UUID格式: ${this.value}`);
    } else
    /* istanbul ignore next */
    {
      cov_pmv4oo1p2().b[3][1]++;
    }
  }
  /**
   * @method equals
   * @description 比较两个用户ID是否相等
   * @param {UserId} other 另一个用户ID对象
   * @returns {boolean} 是否相等
   */
  equals(other) {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[2]++;
    cov_pmv4oo1p2().s[11]++;
    if (!(other instanceof UserId)) {
      /* istanbul ignore next */
      cov_pmv4oo1p2().b[4][0]++;
      cov_pmv4oo1p2().s[12]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_pmv4oo1p2().b[4][1]++;
    }
    cov_pmv4oo1p2().s[13]++;
    return this.value.toLowerCase() === other.value.toLowerCase();
  }
  /**
   * @method toString
   * @description 返回用户ID的字符串表示
   * @returns {string} 用户ID字符串
   */
  toString() {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[3]++;
    cov_pmv4oo1p2().s[14]++;
    return this.value;
  }
  /**
   * @method generate
   * @description 生成新的用户ID
   * @returns {UserId} 新的用户ID实例
   * @static
   */
  static generate() {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[4]++;
    cov_pmv4oo1p2().s[15]++;
    return new UserId((0, uuid_1.v4)());
  }
  /**
   * @method fromString
   * @description 从字符串创建用户ID
   * @param {string} value 用户ID字符串
   * @returns {UserId} 用户ID实例
   * @static
   */
  static fromString(value) {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[5]++;
    cov_pmv4oo1p2().s[16]++;
    return new UserId(value);
  }
  /**
   * @method isValid
   * @description 检查字符串是否为有效的用户ID格式
   * @param {string} value 要检查的字符串
   * @returns {boolean} 是否为有效的用户ID格式
   * @static
   */
  static isValid(value) {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[6]++;
    cov_pmv4oo1p2().s[17]++;
    try {
      /* istanbul ignore next */
      cov_pmv4oo1p2().s[18]++;
      new UserId(value);
      /* istanbul ignore next */
      cov_pmv4oo1p2().s[19]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_pmv4oo1p2().s[20]++;
      return false;
    }
  }
}
/* istanbul ignore next */
cov_pmv4oo1p2().s[21]++;
exports.UserId = UserId;
/**
 * @class InvalidUserIdError
 * @description
 * 无效用户ID异常，当用户ID不符合业务规则时抛出。
 *
 * 业务规则：
 * 1. 当用户ID格式无效时抛出
 * 2. 当用户ID为空时抛出
 * 3. 提供清晰的错误信息
 *
 * @example
 * ```typescript
 * try {
 *   new UserId('invalid-id');
 * } catch (error) {
 *   console.log(error instanceof InvalidUserIdError); // true
 * }
 * ```
 * @since 1.0.0
 */
class InvalidUserIdError extends Error {
  constructor(message) {
    /* istanbul ignore next */
    cov_pmv4oo1p2().f[7]++;
    cov_pmv4oo1p2().s[22]++;
    super(message);
    /* istanbul ignore next */
    cov_pmv4oo1p2().s[23]++;
    this.name = 'InvalidUserIdError';
  }
}
/* istanbul ignore next */
cov_pmv4oo1p2().s[24]++;
exports.InvalidUserIdError = InvalidUserIdError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,